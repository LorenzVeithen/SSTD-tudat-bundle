<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter" kind="class" language="C++" prot="public">
    <compoundname>tudat::filters::UnscentedKalmanFilter</compoundname>
    <basecompoundref refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase" prot="public" virt="non-virtual">tudat::filters::KalmanFilterBase&lt; double, double &gt;</basecompoundref>
    <includes refid="d8/d78/unscentedKalmanFilter_8h" local="no">unscentedKalmanFilter.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndependentVariableType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename DependentVariableType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" prot="public" static="no">
        <type><ref refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase" kindref="compound">KalmanFilterBase</ref>&lt; IndependentVariableType, DependentVariableType &gt;::<ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref></type>
        <definition>typedef KalmanFilterBase&lt; IndependentVariableType, DependentVariableType &gt;::DependentVector tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::DependentVector</definition>
        <argsstring></argsstring>
        <name>DependentVector</name>
        <briefdescription>
<para>Inherit typedefs from base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="65" column="57" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ae0b8215725f62e43fb6a0e2e0da6de82" prot="public" static="no">
        <type><ref refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase" kindref="compound">KalmanFilterBase</ref>&lt; IndependentVariableType, DependentVariableType &gt;::DependentMatrix</type>
        <definition>typedef KalmanFilterBase&lt; IndependentVariableType, DependentVariableType &gt;::DependentMatrix tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::DependentMatrix</definition>
        <argsstring></argsstring>
        <name>DependentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="66" column="57" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ab66e2873443e1c5d2aa3e4b36525550e" prot="public" static="no">
        <type><ref refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase" kindref="compound">KalmanFilterBase</ref>&lt; IndependentVariableType, DependentVariableType &gt;::Function</type>
        <definition>typedef KalmanFilterBase&lt; IndependentVariableType, DependentVariableType &gt;::Function tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::Function</definition>
        <argsstring></argsstring>
        <name>Function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="67" column="50" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ac0098abbfa65385c2e4d18b5b69d90e0" prot="public" static="no">
        <type><ref refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase" kindref="compound">KalmanFilterBase</ref>&lt; IndependentVariableType, DependentVariableType &gt;::<ref refid="da/df3/classtudat_1_1numerical__integrators_1_1IntegratorSettings" kindref="compound">IntegratorSettings</ref></type>
        <definition>typedef KalmanFilterBase&lt; IndependentVariableType, DependentVariableType &gt;::IntegratorSettings tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::IntegratorSettings</definition>
        <argsstring></argsstring>
        <name>IntegratorSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="68" column="60" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1abf58d7217befed29f7a91fb1d22c4d1d" prot="public" static="no">
        <type><ref refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase" kindref="compound">KalmanFilterBase</ref>&lt; IndependentVariableType, DependentVariableType &gt;::<ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator" kindref="compound">Integrator</ref></type>
        <definition>typedef KalmanFilterBase&lt; IndependentVariableType, DependentVariableType &gt;::Integrator tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::Integrator</definition>
        <argsstring></argsstring>
        <name>Integrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="69" column="52" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9d2b9e10b3c384e22af7bb90e0ae9854" prot="private" static="no" mutable="no">
        <type>Function</type>
        <definition>Function tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::inputSystemFunction_</definition>
        <argsstring></argsstring>
        <name>inputSystemFunction_</name>
        <briefdescription>
<para>System function input by user. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="421" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a2b8041c2e87a3191c3469c0557559b18" prot="private" static="no" mutable="no">
        <type>Function</type>
        <definition>Function tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::inputMeasurementFunction_</definition>
        <argsstring></argsstring>
        <name>inputMeasurementFunction_</name>
        <briefdescription>
<para>Measurement function input by user. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="424" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a681617ab6298993ce9d1b65d33196a77" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::stateDimension_</definition>
        <argsstring></argsstring>
        <name>stateDimension_</name>
        <briefdescription>
<para>Integer specifying length of state vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="427" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a29875d968c540b9504f0c516bd55eb96" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::measurementDimension_</definition>
        <argsstring></argsstring>
        <name>measurementDimension_</name>
        <briefdescription>
<para>Integer specifying length of measurement vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="430" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9ffda543b77be2b44d1ea12a6629e93e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::augmentedStateDimension_</definition>
        <argsstring></argsstring>
        <name>augmentedStateDimension_</name>
        <briefdescription>
<para>Integer specifying length of augmented state vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="433" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a567280a3773aa4b1940f3eafcd993dae" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::numberOfSigmaPoints_</definition>
        <argsstring></argsstring>
        <name>numberOfSigmaPoints_</name>
        <briefdescription>
<para>Integer specifying number of sigma points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="436" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a71c36bae6901f3b9e779d53083dcf80f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; DependentVariableType &gt;</type>
        <definition>std::vector&lt; DependentVariableType &gt; tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::constantParameters_</definition>
        <argsstring></argsstring>
        <name>constantParameters_</name>
        <briefdescription>
<para>Vector of constant parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Vector of constant parameters. See description of setConstantParameterValues function for information on the order and meaning of the constant parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="443" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9d1789fc8f0da5aba07db9100b233b3f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; DependentVariableType &gt;</type>
        <definition>std::vector&lt; DependentVariableType &gt; tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::stateEstimationWeights_</definition>
        <argsstring></argsstring>
        <name>stateEstimationWeights_</name>
        <briefdescription>
<para>Vector of weights used for the computation of the weighted average of the state and measurement vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="446" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a781c88ddf1cbfbae90f08dd0425bdbae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; DependentVariableType &gt;</type>
        <definition>std::vector&lt; DependentVariableType &gt; tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::covarianceEstimationWeights_</definition>
        <argsstring></argsstring>
        <name>covarianceEstimationWeights_</name>
        <briefdescription>
<para>Vector of weights used for the computation of the weighted average of the covariance and innovation matrices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="449" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ac472ac1804126e05815488f7346877a7" prot="private" static="no" mutable="no">
        <type><ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref></type>
        <definition>DependentVector tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::augmentedStateVector_</definition>
        <argsstring></argsstring>
        <name>augmentedStateVector_</name>
        <briefdescription>
<para>Augmented state vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Augmented state vector, which is defined by vertically concatenating the state vector and the expectations of the state and measurement noises (which for are defined to be zero in this application). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="456" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a20ba3e8de8bc7f18e37c0a70121f90ff" prot="private" static="no" mutable="no">
        <type>DependentMatrix</type>
        <definition>DependentMatrix tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::augmentedCovarianceMatrix_</definition>
        <argsstring></argsstring>
        <name>augmentedCovarianceMatrix_</name>
        <briefdescription>
<para>Augmented covariance matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Augmented covariance matrix, which is defined by diagonally concatenating the state covariance matrix and the state and measurement uncertainties (which are assumed to be constant and are provided by the user). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="463" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1afd968d3b37387ad642f0ee667962f86f" prot="private" static="no" mutable="no">
        <type>std::map&lt; unsigned int, <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &gt;</type>
        <definition>std::map&lt; unsigned int, DependentVector &gt; tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::mapOfSigmaPoints_</definition>
        <argsstring></argsstring>
        <name>mapOfSigmaPoints_</name>
        <briefdescription>
<para>Map of sigma points. </para>
        </briefdescription>
        <detaileddescription>
<para>Map of sigma points, as output by the computeSigmaPoints function. See the description of this function for more details of the sigma points and their use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="470" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a6217f97c607038859328753df6d0d5a2" prot="private" static="no" mutable="no">
        <type>std::map&lt; IndependentVariableType, std::map&lt; unsigned int, <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &gt; &gt;</type>
        <definition>std::map&lt; IndependentVariableType, std::map&lt; unsigned int, DependentVector &gt; &gt; tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::historyOfSigmaPoints_</definition>
        <argsstring></argsstring>
        <name>historyOfSigmaPoints_</name>
        <briefdescription>
<para>Map of map of sigma points, used to store the history of sigma points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="473" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a16e43e380e0e1e2ca964e53c0c8bea55" prot="private" static="no" mutable="no">
        <type>std::map&lt; unsigned int, <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &gt;::const_iterator</type>
        <definition>std::map&lt; unsigned int, DependentVector &gt;::const_iterator tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::sigmaPointConstantIterator_</definition>
        <argsstring></argsstring>
        <name>sigmaPointConstantIterator_</name>
        <briefdescription>
<para>Constant iterator to loop over sigma points (introduced for convenience). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="476" column="40" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a8543f3fbda74b109526be0836bdf3274" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::currentSigmaPoint_</definition>
        <argsstring></argsstring>
        <name>currentSigmaPoint_</name>
        <briefdescription>
<para>Integer specifying current sigma point. </para>
        </briefdescription>
        <detaileddescription>
<para>Integer specifying current sigma point, while iterating over the mapOfSigmaPoints_. This parameter is specifically used when evaluating the systemFunction_ and measurementFunction_, such that the correct value of system and measurement noise can be added. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="484" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a23f0affcd0c05ad87f777b87e88e1d0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::UnscentedKalmanFilter</definition>
        <argsstring>(const Function &amp;systemFunction, const Function &amp;measurementFunction, const DependentMatrix &amp;systemUncertainty, const DependentMatrix &amp;measurementUncertainty, const IndependentVariableType filteringStepSize, const IndependentVariableType initialTime, const DependentVector &amp;initialStateVector, const DependentMatrix &amp;initialCovarianceMatrix, const std::shared_ptr&lt; IntegratorSettings &gt; integratorSettings=nullptr, const ConstantParameterReferences constantValueReference=reference_Wan_and_Van_der_Merwe, const std::pair&lt; DependentVariableType, DependentVariableType &gt; customConstantParameters=std::make_pair(static_cast&lt; DependentVariableType &gt;(TUDAT_NAN), static_cast&lt; DependentVariableType &gt;(TUDAT_NAN)))</argsstring>
        <name>UnscentedKalmanFilter</name>
        <param>
          <type>const Function &amp;</type>
          <declname>systemFunction</declname>
        </param>
        <param>
          <type>const Function &amp;</type>
          <declname>measurementFunction</declname>
        </param>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>systemUncertainty</declname>
        </param>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>measurementUncertainty</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>filteringStepSize</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>initialTime</declname>
        </param>
        <param>
          <type>const <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>initialStateVector</declname>
        </param>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>initialCovarianceMatrix</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="da/df3/classtudat_1_1numerical__integrators_1_1IntegratorSettings" kindref="compound">IntegratorSettings</ref> &gt;</type>
          <declname>integratorSettings</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const ConstantParameterReferences</type>
          <declname>constantValueReference</declname>
          <defval>reference_Wan_and_Van_der_Merwe</defval>
        </param>
        <param>
          <type>const std::pair&lt; DependentVariableType, DependentVariableType &gt;</type>
          <declname>customConstantParameters</declname>
          <defval>std::make_pair(static_cast&lt; DependentVariableType &gt;(TUDAT_NAN), static_cast&lt; DependentVariableType &gt;(TUDAT_NAN))</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. This constructor takes the system and measurement functions as models for the simulation. These functions can be a function of time and state vector. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the state as a function of time and state vector. Can be a differential equation if the integratorSettings is set (i.e., if it is not a nullptr). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>measurementFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the measurement as a function of time and state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>systemUncertainty</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix defining the uncertainty in modeling of the system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>measurementUncertainty</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix defining the uncertainty in modeling of the measurements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filteringStepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar representing the value of the constant filtering time step. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar representing the value of the initial time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialStateVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector representing the initial (estimated) state of the system. It is used as first a-priori estimate of the state vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialCovarianceMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix representing the initial (estimated) covariance of the system. It is used as first a-priori estimate of the covariance matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratorSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to integration settings defining the integrator to be used to propagate the state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constantValueReference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to be used for the values of the <formula id="159">$ \alpha $</formula> and <formula id="160">$ \kappa $</formula> parameters. This variable has to be part of the ConstantParameterReferences enumeration (custom parameters are supported). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>customConstantParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Values of the constant parameters <formula id="159">$ \alpha $</formula> and <formula id="160">$ \kappa $</formula>, in case the custom_parameters enumeration is used in the previous field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="92" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="92" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a82354c247947def102cc0d32acb097f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::~UnscentedKalmanFilter</definition>
        <argsstring>()</argsstring>
        <name>~UnscentedKalmanFilter</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="129" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9e532f28221396cb460d9da8c768f1b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::updateFilter</definition>
        <argsstring>(const DependentVector &amp;currentMeasurementVector)</argsstring>
        <name>updateFilter</name>
        <param>
          <type>const <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>currentMeasurementVector</declname>
        </param>
        <briefdescription>
<para>Function to update the filter with the new step data. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to update the filter with the new step data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentMeasurementVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector representing current measurement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="136" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="136" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a42fc8fd55187552662a542fdf14ac10c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; IndependentVariableType, DependentMatrix &gt;</type>
        <definition>std::map&lt; IndependentVariableType, DependentMatrix &gt; tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::getHistoryOfSigmaPoints</definition>
        <argsstring>()</argsstring>
        <name>getHistoryOfSigmaPoints</name>
        <briefdescription>
<para>Function to return the history of sigma points. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the history of sigma points. <simplesect kind="return"><para>History of map of sigma points for each time step. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="204" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="204" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ad9d2ee7652bacf2f9d0935077099f84d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref></type>
        <definition>DependentVector tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::createSystemFunction</definition>
        <argsstring>(const IndependentVariableType currentTime, const DependentVector &amp;currentStateVector)</argsstring>
        <name>createSystemFunction</name>
        <param>
          <type>const IndependentVariableType</type>
          <declname>currentTime</declname>
        </param>
        <param>
          <type>const <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>currentStateVector</declname>
        </param>
        <briefdescription>
<para>Function to create the function that defines the system model. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create the function that defines the system model. The output of this function is then bound to the systemFunction_ variable, via the std::bind command. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar representing the current time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentStateVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector representing the current state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector representing the estimated state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="235" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="235" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a49695322eb3221bc759ffa9f6c02d0cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref></type>
        <definition>DependentVector tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::createMeasurementFunction</definition>
        <argsstring>(const IndependentVariableType currentTime, const DependentVector &amp;currentStateVector)</argsstring>
        <name>createMeasurementFunction</name>
        <param>
          <type>const IndependentVariableType</type>
          <declname>currentTime</declname>
        </param>
        <param>
          <type>const <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>currentStateVector</declname>
        </param>
        <briefdescription>
<para>Function to create the function that defines the system model. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create the function that defines the system model. The output of this function is then bound to the measurementFunction_ variable, via the std::bind command. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar representing the current time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentStateVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector representing the current state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector representing the estimated measurement. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="250" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="250" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9eee787645d0f45e490af79372cd8bd3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::clearSpecificFilterHistory</definition>
        <argsstring>()</argsstring>
        <name>clearSpecificFilterHistory</name>
        <reimplements refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1abc9aa407f01feb93fa590d0e17586840">clearSpecificFilterHistory</reimplements>
        <briefdescription>
<para>Function to clear the history of stored variables for derived class-specific variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to clear the history of stored variables for derived class-specific variables. This function adds to the list of variables to be cleared, the history of sigma point estimates over time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="262" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1afe67a5aa8125e21f97727c0b6f5c6f18" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::specificRevertToPreviousTimeStep</definition>
        <argsstring>(const double timeToBeRemoved)</argsstring>
        <name>specificRevertToPreviousTimeStep</name>
        <reimplements refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a3ba213efa9eaa3213b527fd38e0cee8e">specificRevertToPreviousTimeStep</reimplements>
        <param>
          <type>const double</type>
          <declname>timeToBeRemoved</declname>
        </param>
        <briefdescription>
<para>Function to revert to the previous time step for derived class-specific variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to revert to the previous time step for derived class-specific variables. This function adds to the list of elements to be reverted, the latest sigma point estimates. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToBeRemoved</parametername>
</parameternamelist>
<parameterdescription>
<para>Double denoting the current time, i.e., the instant that has to be discarded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="270" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="270" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a542cfffb4b934b9994def05878d451af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::setConstantParameterValues</definition>
        <argsstring>(const ConstantParameterReferences constantValueReference, const std::pair&lt; DependentVariableType, DependentVariableType &gt; &amp;customConstantParameters)</argsstring>
        <name>setConstantParameterValues</name>
        <param>
          <type>const ConstantParameterReferences</type>
          <declname>constantValueReference</declname>
        </param>
        <param>
          <type>const std::pair&lt; DependentVariableType, DependentVariableType &gt; &amp;</type>
          <declname>customConstantParameters</declname>
        </param>
        <briefdescription>
<para>Function to set the values of the constant parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set the values of the constant parameters, used by the unscented Kalman filter for various purposes. These parameters are saved in the constantParameters_ vector, and are retrieved by using the ConstantParameterIndices enumeration. The order and definition of the parameters is the following [Vittaldev, V.]:<itemizedlist>
<listitem><para>alpha_index ( <formula id="159">$ \alpha $</formula>): used to distribute the sigma points around the a-priori estimate.</para>
</listitem><listitem><para>beta_index ( <formula id="161">$ \beta $</formula>): provides information about the probaility distribution function of the state.</para>
</listitem><listitem><para>gamma_index ( <formula id="162">$ \gamma $</formula>): abbreviation for <formula id="163">$ \sqrt{ L + \lambda } $</formula>, where <formula id="164">$ L $</formula> is the length of the augmented state vector.</para>
</listitem><listitem><para>kappa_index ( <formula id="160">$ \kappa $</formula>): secondary scaling parameter, also used to distribute the sigma points around the a-priori estimate, but it has a smaller influence.</para>
</listitem><listitem><para>lambda_index ( <formula id="121">$ \lambda $</formula>): scaling parameter, also used to distribute the sigma points around the a-priori estimate. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>constantValueReference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to be used for the values of the alpha and kappa parameters. This variable has to be part of the ConstantParameterReferences enumeration (custom parameters are supported). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>customConstantParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Values of the constant parameters alpha and kappa, in case the custom_parameters enumerate is used in the previous field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="296" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="496" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aac37d877caaed2ba9de3b0ab5bdfb0a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::generateEstimationWeights</definition>
        <argsstring>()</argsstring>
        <name>generateEstimationWeights</name>
        <briefdescription>
<para>Function to generate the weights for state and covariance estimation. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to generate the weights for state and covariance estimation, which will be used to determine the weighted average of the state and measurment vectors, and covariance matrix, based on the sigma points. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="304" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="558" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a6649b7da3d5d90609da390ad78f0fa73" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::computeSigmaPoints</definition>
        <argsstring>(const DependentVector &amp;currentStateEstimate, const DependentMatrix &amp;currentCovarianceEstimate)</argsstring>
        <name>computeSigmaPoints</name>
        <param>
          <type>const <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>currentStateEstimate</declname>
        </param>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>currentCovarianceEstimate</declname>
        </param>
        <briefdescription>
<para>Function to compute the sigma points, based on the current state vector and covariance matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the sigma points, based on the current a-priori or previous step a-posteriori state vector and covariance matrix estimates. The sigma points are spread around the current a-priori state estimate, and their propagation is used to determine the sensitivity of the state model to changes in initial conditions. These offsets are then used to compute the new state and measurement vectors and covariance matrix estimates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="313" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="313" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a444a53f35b7d526e35cd06c305f27b77" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::computeWeightedAverageFromSigmaPointEstimates</definition>
        <argsstring>(DependentVector &amp;weightedAverageVector, const std::map&lt; unsigned int, DependentVector &gt; &amp;sigmaPointEstimates)</argsstring>
        <name>computeWeightedAverageFromSigmaPointEstimates</name>
        <param>
          <type><ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>weightedAverageVector</declname>
        </param>
        <param>
          <type>const std::map&lt; unsigned int, <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &gt; &amp;</type>
          <declname>sigmaPointEstimates</declname>
        </param>
        <briefdescription>
<para>Function to compute the weighted average of the state and measurement vectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the weighted average of the state and measurement vectors. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weightedAverageVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to which the weighted average is added (initially set to zero). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigmaPointEstimates</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of the sigma points generated by the computeSigmaPoints function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Weighted average of the state or measurement vector, i.e., the new a-priori state and the measurement estimates (returned by reference). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="371" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="371" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1adf1bf2259ab1fadd8542a8837d2852cc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::computeWeightedAverageFromSigmaPointEstimates</definition>
        <argsstring>(DependentMatrix &amp;weightedAverageMatrix, const DependentVector &amp;referenceVector, const std::map&lt; unsigned int, DependentVector &gt; &amp;sigmaPointEstimates)</argsstring>
        <name>computeWeightedAverageFromSigmaPointEstimates</name>
        <param>
          <type>DependentMatrix &amp;</type>
          <declname>weightedAverageMatrix</declname>
        </param>
        <param>
          <type>const <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &amp;</type>
          <declname>referenceVector</declname>
        </param>
        <param>
          <type>const std::map&lt; unsigned int, <ref refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" kindref="member">DependentVector</ref> &gt; &amp;</type>
          <declname>sigmaPointEstimates</declname>
        </param>
        <briefdescription>
<para>Function to compute the weighted average of the covariance and innovation matrices. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the weighted average of the covariance and innovation matrices. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weightedAverageMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to which the weighted average is added (initially set to zero). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector representing the a-priori state or measurement estimates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigmaPointEstimates</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of the sigma points generated by the computeSigmaPoints function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Weighted average of the covariance and innovation matrices, i.e., the new a-priori covariance and the innovation estimates (returned by reference). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="392" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="392" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1afbf5868125437a623b218b1208bd232f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;::correctCovariance</definition>
        <argsstring>(const DependentMatrix &amp;aPrioriCovarianceEstimate, const DependentMatrix &amp;innovationMatrix, const DependentMatrix &amp;kalmanGain)</argsstring>
        <name>correctCovariance</name>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>aPrioriCovarianceEstimate</declname>
        </param>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>innovationMatrix</declname>
        </param>
        <param>
          <type>const DependentMatrix &amp;</type>
          <declname>kalmanGain</declname>
        </param>
        <briefdescription>
<para>Function to correct the covariance for the next time step. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to correct the covariance for the next time step. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPrioriCovarianceEstimate</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix denoting the a-priori covariance estimate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>innovationMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix denoting the innovation, i.e., the correlation between system and measurement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kalmanGain</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix denoting the Kalman gain, to be used to correct the state estimate with the external measurement data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="413" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="413" bodyend="418"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Unscented Kalman filter class. </para>
    </briefdescription>
    <detaileddescription>
<para>Class for the set up and use of the unscented Kalman filter. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IndependentVariableType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of independent variable. Default is double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DependentVariableType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of dependent variable. Default is double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;</label>
        <link refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::filters::FilterBase&lt; double, double &gt;</label>
        <link refid="d7/dc4/classtudat_1_1filters_1_1FilterBase"/>
      </node>
      <node id="2">
        <label>tudat::filters::KalmanFilterBase&lt; double, double &gt;</label>
        <link refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tudat::filters::UnscentedKalmanFilter&lt; IndependentVariableType, DependentVariableType &gt;</label>
        <link refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::filters::FilterBase&lt; double, double &gt;</label>
        <link refid="d7/dc4/classtudat_1_1filters_1_1FilterBase"/>
      </node>
      <node id="2">
        <label>tudat::filters::KalmanFilterBase&lt; double, double &gt;</label>
        <link refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" line="60" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/filters/unscentedKalmanFilter.h" bodystart="61" bodyend="486"/>
    <listofallmembers>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a1f40b23f46f870981ad8f2ce291fb67b" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>aPosterioriCovarianceEstimate_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a12d990d87350e96fa8487c661aa814b9" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>aPosterioriStateEstimate_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a20ba3e8de8bc7f18e37c0a70121f90ff" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>augmentedCovarianceMatrix_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9ffda543b77be2b44d1ea12a6629e93e" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>augmentedStateDimension_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ac472ac1804126e05815488f7346877a7" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>augmentedStateVector_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ab8891a7ab791dd2aea90b82266e2455f" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>clearFilterHistory</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9eee787645d0f45e490af79372cd8bd3" prot="private" virt="virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>clearSpecificFilterHistory</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a6649b7da3d5d90609da390ad78f0fa73" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>computeSigmaPoints</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a444a53f35b7d526e35cd06c305f27b77" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>computeWeightedAverageFromSigmaPointEstimates</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1adf1bf2259ab1fadd8542a8837d2852cc" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>computeWeightedAverageFromSigmaPointEstimates</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a71c36bae6901f3b9e779d53083dcf80f" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>constantParameters_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1afbf5868125437a623b218b1208bd232f" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>correctCovariance</name></member>
      <member refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase_1a8c8054a0a93b7890d0fcf1b3b07f0e7e" prot="protected" virt="virtual" ambiguityscope="KalmanFilterBase&lt; double, double &gt;::"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>correctCovariance</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1af546b9f50ee2dcec8c4e8af4ffbc21dd" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>correctState</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a781c88ddf1cbfbae90f08dd0425bdbae" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>covarianceEstimationWeights_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a49695322eb3221bc759ffa9f6c02d0cd" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>createMeasurementFunction</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1abde4c5d0ca1d313aad0e9edb29ab01b4" prot="protected" virt="pure-virtual" ambiguityscope="KalmanFilterBase&lt; double, double &gt;::"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>createMeasurementFunction</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ad9d2ee7652bacf2f9d0935077099f84d" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>createSystemFunction</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a26695bd87160c41e62e7dab9afe2edaf" prot="protected" virt="pure-virtual" ambiguityscope="KalmanFilterBase&lt; double, double &gt;::"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>createSystemFunction</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a8543f3fbda74b109526be0836bdf3274" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>currentSigmaPoint_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1af2f4238fa1e620d20b06b1957494e9f3" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>currentTime_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ae0b8215725f62e43fb6a0e2e0da6de82" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>DependentMatrix</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aa33385f0ea13d104a00ebe485d0bb32c" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>DependentVector</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a585a9eaae437cca82863ef8d5917e3f8" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>FilterBase</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1aa8ba7d4fed569e1d36213771c0db8d43" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>filteringStepSize_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ab66e2873443e1c5d2aa3e4b36525550e" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>Function</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1aac37d877caaed2ba9de3b0ab5bdfb0a5" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>generateEstimationWeights</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ac940402c9ecfe01e3e8bd56395e9ec6a" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getCurrentCovarianceEstimate</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ae40564a67874166dca2ab15c8d9d947e" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getCurrentStateEstimate</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1adb921781473d9e2d426ca2c56df372b4" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getCurrentTime</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a5df26d7051c4d3476df03f35122dbf29" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getEstimatedCovarianceHistory</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a47692e571bcd6b541e8f345b6571a0c5" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getEstimatedStateHistory</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ad0d28d30ca6a0b92028f237e1295931d" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getFilteringStepSize</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a42fc8fd55187552662a542fdf14ac10c" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getHistoryOfSigmaPoints</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ac0677c99cac6f6b377e0bd3035c7c307" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getInitialTime</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ac1c59759d06c18a90d61b200f569be6a" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>getNoiseHistory</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ad9fe859c25141b2e4ced91c8520e4cbf" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>historyOfCovarianceEstimates_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a6217f97c607038859328753df6d0d5a2" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>historyOfSigmaPoints_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a758b51158b8f5b161105e15506ea0c8a" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>historyOfStateEstimates_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ab76c63d7241868761793b0c846832f27" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>identityMatrix_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a68e3a099b38d58c88f7d527e998d312a" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>initialTime_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a2b8041c2e87a3191c3469c0557559b18" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>inputMeasurementFunction_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9d2b9e10b3c384e22af7bb90e0ae9854" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>inputSystemFunction_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1abf58d7217befed29f7a91fb1d22c4d1d" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>Integrator</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a3be2bad75a2fe46f627ef0498870522c" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>integrator_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1ac0098abbfa65385c2e4d18b5b69d90e0" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>IntegratorSettings</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1abbb53cef4b45ee5f6116b92e7b2d0e9f" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>isStateToBeIntegrated_</name></member>
      <member refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase_1a3b6cf364bc5c385415f69dd84f4d61ac" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>KalmanFilterBase</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1afd968d3b37387ad642f0ee667962f86f" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>mapOfSigmaPoints_</name></member>
      <member refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase_1aeb64c97a125d6c910315913c562555cd" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>MatrixFunction</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a29875d968c540b9504f0c516bd55eb96" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>measurementDimension_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a0765a4bd0bc0db93c205e22c88416b03" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>measurementFunction_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a748d336437c27e32a38c25749e2809ba" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>measurementUncertainty_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a510f3cfb46e2113386b3183a06c4c838" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>modifyCurrentStateAndCovarianceEstimates</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a1d1ef218b988aed50960eeb2df957b89" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>modifyCurrentTime</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a4ceb17bf6aa3118a7d35b9f3f6b71f67" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>modifyFilteringStepSize</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a567280a3773aa4b1940f3eafcd993dae" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>numberOfSigmaPoints_</name></member>
      <member refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase_1a858ec468f38dd8866493e3ec50eb6df1" prot="protected" virt="virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>predictState</name></member>
      <member refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase_1a6b39489386c31a5aab136c5a1102a942" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>predictState</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1af6a9b68343ba5dafd39dfb3d2238b98a" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>produceMeasurementNoise</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a422e4362dc259ff0495f600696509604" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>produceSystemNoise</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a3a5b681a3288a8b183f492d9fb8dfd68" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>revertToPreviousTimeStep</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a542cfffb4b934b9994def05878d451af" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>setConstantParameterValues</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a16e43e380e0e1e2ca964e53c0c8bea55" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>sigmaPointConstantIterator_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1afe67a5aa8125e21f97727c0b6f5c6f18" prot="private" virt="virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>specificRevertToPreviousTimeStep</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a681617ab6298993ce9d1b65d33196a77" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>stateDimension_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9d1789fc8f0da5aba07db9100b233b3f" prot="private" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>stateEstimationWeights_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a215ba5698a9030a0711111a3d3000c9d" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>systemFunction_</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a3a80bf6b6d6863f53373caffd0b10d90" prot="protected" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>systemUncertainty_</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a23f0affcd0c05ad87f777b87e88e1d0d" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>UnscentedKalmanFilter</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a9e532f28221396cb460d9da8c768f1b3" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>updateFilter</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1a9408366ce081d48f9ba7ad0ede7f78eb" prot="public" virt="pure-virtual" ambiguityscope="KalmanFilterBase&lt; double, double &gt;::"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>updateFilter</name></member>
      <member refid="d7/dc4/classtudat_1_1filters_1_1FilterBase_1ae1a33788857de9a041c4534d0bfe9ef8" prot="public" virt="virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>~FilterBase</name></member>
      <member refid="df/d10/classtudat_1_1filters_1_1KalmanFilterBase_1a45eb01c8f068e8450afb9f6dd5c4f6a7" prot="public" virt="virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>~KalmanFilterBase</name></member>
      <member refid="d2/df1/classtudat_1_1filters_1_1UnscentedKalmanFilter_1a82354c247947def102cc0d32acb097f5" prot="public" virt="non-virtual"><scope>tudat::filters::UnscentedKalmanFilter</scope><name>~UnscentedKalmanFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
