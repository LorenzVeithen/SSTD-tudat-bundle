<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere" kind="class" language="C++" prot="public">
    <compoundname>tudat::aerodynamics::TabulatedAtmosphere</compoundname>
    <basecompoundref refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere" prot="public" virt="non-virtual">tudat::aerodynamics::StandardAtmosphere</basecompoundref>
    <includes refid="d6/d8d/tabulatedAtmosphere_8h" local="no">tabulatedAtmosphere.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ad04b2f3b67c08c0a3f47bbe94c4cc8cb" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, std::string &gt;</type>
        <definition>std::map&lt; int, std::string &gt; tudat::aerodynamics::TabulatedAtmosphere::atmosphereTableFile_</definition>
        <argsstring></argsstring>
        <name>atmosphereTableFile_</name>
        <briefdescription>
<para>The file name of the atmosphere table. </para>
        </briefdescription>
        <detaileddescription>
<para>The file name of the atmosphere table. The file should contain four columns of data, containing altitude (first column), and the associated density, pressure and density values in the second, third and fourth columns. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="496" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ab418c0c81a9b6b8408001054708754b6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; AtmosphereIndependentVariables &gt;</type>
        <definition>std::vector&lt; AtmosphereIndependentVariables &gt; tudat::aerodynamics::TabulatedAtmosphere::independentVariables_</definition>
        <argsstring></argsstring>
        <name>independentVariables_</name>
        <briefdescription>
<para>A vector of strings containing the names of the independent variables contained in the atmosphere file. </para>
        </briefdescription>
        <detaileddescription>
<para>A vector of strings containing the names of the independent variables contained in the atmosphere file, in the correct order (from left, being the first entry in the vector, to the right). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="503" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a3a78bca534e2140172cb35b2a29a50b5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::independentVariablesData_</definition>
        <argsstring></argsstring>
        <name>independentVariablesData_</name>
        <briefdescription>
<para>Vector containing the independent variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="506" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ac516436d7b7e81b3101024579c78e4bc" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::aerodynamics::TabulatedAtmosphere::numberOfIndependentVariables_</definition>
        <argsstring></argsstring>
        <name>numberOfIndependentVariables_</name>
        <briefdescription>
<para>Integer specifying number of independent variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="509" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af1ea527dd0b3dea42aac829de1e41790" prot="private" static="no" mutable="no">
        <type>std::vector&lt; AtmosphereDependentVariables &gt;</type>
        <definition>std::vector&lt; AtmosphereDependentVariables &gt; tudat::aerodynamics::TabulatedAtmosphere::dependentVariables_</definition>
        <argsstring></argsstring>
        <name>dependentVariables_</name>
        <briefdescription>
<para>A vector of strings containing the names of the variables contained in the atmosphere file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="512" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af661ff14297b1306e8bc46d86ed9f42f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; tudat::aerodynamics::TabulatedAtmosphere::dependentVariablesDependency_</definition>
        <argsstring></argsstring>
        <name>dependentVariablesDependency_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of booleans that determines if the atmosphere file contains dentity, pressure, temperature, gas constant and/or ratio of specific heats. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="516" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a3cd6fcf8c9051970954ec1753cba973d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt; unsigned int &gt; tudat::aerodynamics::TabulatedAtmosphere::dependentVariableIndices_</definition>
        <argsstring></argsstring>
        <name>dependentVariableIndices_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of integers that specifies the order of dentity, pressure, temperature, gas constant and ratio of specific heats are located. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="520" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a7ca8fc60daa7ed3996c6b519a54838e3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::specificGasConstant_</definition>
        <argsstring></argsstring>
        <name>specificGasConstant_</name>
        <briefdescription>
<para>Specific gas constant of the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="523" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a90d1bce823b61c7b4c74a7cbee57d226" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::ratioOfSpecificHeats_</definition>
        <argsstring></argsstring>
        <name>ratioOfSpecificHeats_</name>
        <briefdescription>
<para>Ratio of specific heats of the atmosphere at constant pressure and constant volume. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="526" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a065101fd932617c01061cb4776a4929a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">interpolators::Interpolator</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; interpolators::Interpolator&lt; double, double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::interpolatorForDensity_</definition>
        <argsstring></argsstring>
        <name>interpolatorForDensity_</name>
        <briefdescription>
<para>Interpolation for density. Note that type of interpolator depends on number of independent variables specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="529" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1aa8239209fc176d9702bba5139919111e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">interpolators::Interpolator</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; interpolators::Interpolator&lt; double, double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::interpolatorForPressure_</definition>
        <argsstring></argsstring>
        <name>interpolatorForPressure_</name>
        <briefdescription>
<para>Interpolation for pressure. Note that type of interpolator depends on number of independent variables specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="532" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a81d4e374bc65a5d0cd5bbd800169f6ea" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">interpolators::Interpolator</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; interpolators::Interpolator&lt; double, double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::interpolatorForTemperature_</definition>
        <argsstring></argsstring>
        <name>interpolatorForTemperature_</name>
        <briefdescription>
<para>Interpolation for temperature. Note that type of interpolator depends on number of independent variables specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="535" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1afa49d97f06058915e2fca860916b43d2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">interpolators::Interpolator</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; interpolators::Interpolator&lt; double, double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::interpolatorForGasConstant_</definition>
        <argsstring></argsstring>
        <name>interpolatorForGasConstant_</name>
        <briefdescription>
<para>Interpolation for specific gas constant. Note that type of interpolator depends on number of independent variables specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="538" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ada0121d96be59def221e49be938c49f8" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">interpolators::Interpolator</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; interpolators::Interpolator&lt; double, double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::interpolatorForSpecificHeatRatio_</definition>
        <argsstring></argsstring>
        <name>interpolatorForSpecificHeatRatio_</name>
        <briefdescription>
<para>Interpolation for ratio of specific heats. Note that type of interpolator depends on number of independent variables specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="541" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1aaae9156bde876a5716eab16012042358" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">interpolators::Interpolator</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; interpolators::Interpolator&lt; double, double &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::interpolatorForMolarMass_</definition>
        <argsstring></argsstring>
        <name>interpolatorForMolarMass_</name>
        <briefdescription>
<para>Interpolation for molar mass. Note that type of interpolator depends on number of independent variables specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="544" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1adae982dd7b677b697d60702d7ba185f2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt;</type>
        <definition>std::vector&lt; interpolators::BoundaryInterpolationType &gt; tudat::aerodynamics::TabulatedAtmosphere::boundaryHandling_</definition>
        <argsstring></argsstring>
        <name>boundaryHandling_</name>
        <briefdescription>
<para>Behavior of interpolator when independent variable is outside range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="547" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1abf6611341d36887c25c45a6cf2ffbb45" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; tudat::aerodynamics::TabulatedAtmosphere::defaultExtrapolationValue_</definition>
        <argsstring></argsstring>
        <name>defaultExtrapolationValue_</name>
        <briefdescription>
<para>Default values to be used for extrapolation. </para>
        </briefdescription>
        <detaileddescription>
<para>Default values to be used for extrapolation. The structure of the vector is as follows:<itemizedlist>
<listitem><para>outer vector: one element for each dependent variable (density, pressure, temperature, ect.)</para>
</listitem><listitem><para>inner vector: one element for each independent variable (latitude, longitude and altitude)</para>
</listitem><listitem><para>pair: first element in case independent variable is below its lower definition limit, second element in case it is above the upper definition limit </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="557" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a270f8305f56d88a9f4aeeef1af1fbab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::TabulatedAtmosphere::TabulatedAtmosphere</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames={ altitude_dependent_atmosphere }, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames={ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }, const double specificGasConstant=physical_constants::SPECIFIC_GAS_CONSTANT_AIR, const double ratioOfSpecificHeats=1.4, const std::vector&lt; interpolators::BoundaryInterpolationType &gt; &amp;boundaryHandling={ }, const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;defaultExtrapolationValue={ })</argsstring>
        <name>TabulatedAtmosphere</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
          <defval>{ altitude_dependent_atmosphere }</defval>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
          <defval>{ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
          <defval>physical_constants::SPECIFIC_GAS_CONSTANT_AIR</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
          <defval>1.4</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt; &amp;</type>
          <declname>boundaryHandling</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
          <defval>{ }</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="76" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="76" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ae1d29d22e756b1f76faf8d6f56f1973c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::TabulatedAtmosphere::TabulatedAtmosphere</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames, const std::vector&lt; interpolators::BoundaryInterpolationType &gt; &amp;boundaryHandling, const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;defaultExtrapolationValue)</argsstring>
        <name>TabulatedAtmosphere</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt; &amp;</type>
          <declname>boundaryHandling</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
        </param>
        <briefdescription>
<para>Constructor with default gas constant and specific heat ratio. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor with default gas constant and specific heat ratio. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="111" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="111" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a0fc307dfae1e16768e4a595f1d72d6ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::TabulatedAtmosphere::TabulatedAtmosphere</definition>
        <argsstring>(const std::string &amp;atmosphereTableFile, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames={ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }, const double specificGasConstant=physical_constants::SPECIFIC_GAS_CONSTANT_AIR, const double ratioOfSpecificHeats=1.4, const interpolators::BoundaryInterpolationType boundaryHandling=interpolators::use_boundary_value, const double defaultExtrapolationValue=IdentityElement::getAdditionIdentity&lt; double &gt;())</argsstring>
        <name>TabulatedAtmosphere</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
          <defval>{ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
          <defval>physical_constants::SPECIFIC_GAS_CONSTANT_AIR</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
          <defval>1.4</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref></type>
          <declname>boundaryHandling</declname>
          <defval>interpolators::use_boundary_value</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>defaultExtrapolationValue</declname>
          <defval><ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; double &gt;()</defval>
        </param>
        <briefdescription>
<para>Constructor compatible with old version. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor compatible with old version. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File containing atmospheric properties. The file name of the atmosphere table. The file should contain four columns of data, containing altitude (first column), and the associated density, pressure and density values in the second, third and fourth columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="134" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a63f41eb63b3c9f0ae6298e9a93e03783" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::TabulatedAtmosphere::TabulatedAtmosphere</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames, const std::vector&lt; interpolators::BoundaryInterpolationType &gt; &amp;boundaryHandling, const std::vector&lt; double &gt; &amp;defaultExtrapolationValue)</argsstring>
        <name>TabulatedAtmosphere</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt; &amp;</type>
          <declname>boundaryHandling</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="161" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="161" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a0deb8dfa088d55f712ecdef97c30a410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::TabulatedAtmosphere::~TabulatedAtmosphere</definition>
        <argsstring>()</argsstring>
        <name>~TabulatedAtmosphere</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="199" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af4a2e058cb756c96a60dfaacf84114d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; int, std::string &gt;</type>
        <definition>std::map&lt; int, std::string &gt; tudat::aerodynamics::TabulatedAtmosphere::getAtmosphereTableFile</definition>
        <argsstring>()</argsstring>
        <name>getAtmosphereTableFile</name>
        <briefdescription>
<para>Get atmosphere table file name. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns atmosphere table file name. <simplesect kind="return"><para>The atmosphere table file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="206" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a6185309cb023348803588eed3d80398b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getDensity</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getDensity</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1a85b7e8803277496e8f5abc9bb36d5bf6">getDensity</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local density. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local density parameter of the atmosphere in kg per meter^3, at the specified conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric density at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="217" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="217" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a10a02961cbbf78570db466eee69d3778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getPressure</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getPressure</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1aedd2b6b8824cebea8dea628bfec0e236">getPressure</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local pressure. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local pressure of the atmosphere in Newton per meter^2, at the specified conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric pressure at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="254" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="254" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1afdf6a072bd4c4d876ba2323f5955b441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getTemperature</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getTemperature</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1ac5b9a16a96cbb496a4ee76b3dc495543">getTemperature</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local temperature of the atmosphere in Kelvin, at the specified conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which temperature is to be computed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which temperature is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which temperature is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which temperature is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constantTemperature Atmospheric temperature at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="291" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="291" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1aac4124a08b2730b27878c5ca2405e1fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getSpecificGasConstant</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getSpecificGasConstant</name>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get specific gas constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the specific gas constant of the atmosphere in J/(kg K), at the specified conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which specific gas constant is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which specific gas constant is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which specific gas constant is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which specific gas constant is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>specificGasConstant Specific gas constant at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="328" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="328" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af8ffdba320433d5803a279cfb83a2bcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getRatioOfSpecificHeats</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getRatioOfSpecificHeats</name>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get ratio of specific heats. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the ratio of specific heats of the atmosphere at the specified conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which ratio of specific heats is to be computed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which ratio of specific heats is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which ratio of specific heats is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which ratio of specific heats is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ratio of specific heats at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="372" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="372" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a36f676bc1be736d18040895c56b0a0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getMolarMass</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getMolarMass</name>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get molar mass. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the molar mass of the atmosphere in kilograms per mole, at the specified conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which molar mass is to be computed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which molar mass is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which molar mass is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which molar mass is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Molar mass at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="416" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="416" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ae644bf870445c03d007984d946ceaee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TabulatedAtmosphere::getSpeedOfSound</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getSpeedOfSound</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1a9992c99f7994882307b05161e19fc298">getSpeedOfSound</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local speed of sound in the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the speed of sound in the atmosphere in m/s. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which speed of sound is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which speed of sound is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which speed of sound is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which speed of sound is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric speed of sound at specified conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="461" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="461" bodyend="467"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a90472f3db403d3f47f9c140c3de2b752" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::aerodynamics::TabulatedAtmosphere::createAtmosphereInterpolators</definition>
        <argsstring>()</argsstring>
        <name>createAtmosphereInterpolators</name>
        <briefdescription>
<para>Function to create the interpolators based on the tabulated atmosphere files. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create the interpolators based on the tabulated atmosphere files, and the provided interpolation settings. This function also checks the compatibility of (in)dependent variables and determines which (in)dependent variables are in use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="478" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/tabulatedAtmosphere.cpp" bodystart="45" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ad86f187915c095ee0fd21472d539b67e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>NumberOfIndependentVariables</declname>
            <defname>NumberOfIndependentVariables</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::aerodynamics::TabulatedAtmosphere::createMultiDimensionalAtmosphereInterpolators</definition>
        <argsstring>()</argsstring>
        <name>createMultiDimensionalAtmosphereInterpolators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create interpolators for specified dependent variables, taking into consideration the number of independent variables (which is greater than one).</para>
<para>Create interpolators for specified dependent variables, taking into consideration the variable size of independent variables (which is greater than one). <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>of independent variables to be used by the interpolator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Create interpolators for specified dependent variables, taking into consideration the number of independent variables (which is greater than one). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="488" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/tabulatedAtmosphere.cpp" bodystart="244" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Tabulated atmosphere class. </para>
    </briefdescription>
    <detaileddescription>
<para>Tabulated atmospheres class, for example US1976. The default path from which the files are obtained is: /external/AtmosphereTables </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>tudat::aerodynamics::AtmosphereModel</label>
        <link refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel"/>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::StandardAtmosphere</label>
        <link refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::aerodynamics::TabulatedAtmosphere</label>
        <link refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>tudat::aerodynamics::AtmosphereModel</label>
        <link refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel"/>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::StandardAtmosphere</label>
        <link refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::aerodynamics::TabulatedAtmosphere</label>
        <link refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" line="57" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/tabulatedAtmosphere.h" bodystart="58" bodyend="558"/>
    <listofallmembers>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ad04b2f3b67c08c0a3f47bbe94c4cc8cb" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>atmosphereTableFile_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1adae982dd7b677b697d60702d7ba185f2" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>boundaryHandling_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a90472f3db403d3f47f9c140c3de2b752" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>createAtmosphereInterpolators</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ad86f187915c095ee0fd21472d539b67e" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>createMultiDimensionalAtmosphereInterpolators</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1abf6611341d36887c25c45a6cf2ffbb45" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>defaultExtrapolationValue_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a3cd6fcf8c9051970954ec1753cba973d" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>dependentVariableIndices_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af1ea527dd0b3dea42aac829de1e41790" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>dependentVariables_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af661ff14297b1306e8bc46d86ed9f42f" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>dependentVariablesDependency_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af4a2e058cb756c96a60dfaacf84114d2" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getAtmosphereTableFile</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a6185309cb023348803588eed3d80398b" prot="public" virt="virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getDensity</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a36f676bc1be736d18040895c56b0a0c5" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getMolarMass</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a10a02961cbbf78570db466eee69d3778" prot="public" virt="virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getPressure</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1af8ffdba320433d5803a279cfb83a2bcd" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getRatioOfSpecificHeats</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1aac4124a08b2730b27878c5ca2405e1fd" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getSpecificGasConstant</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ae644bf870445c03d007984d946ceaee4" prot="public" virt="virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getSpeedOfSound</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1afdf6a072bd4c4d876ba2323f5955b441" prot="public" virt="virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getTemperature</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1aa6948868e4d053536cdd97d70bea63e4" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>getWindModel</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ab418c0c81a9b6b8408001054708754b6" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>independentVariables_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a3a78bca534e2140172cb35b2a29a50b5" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>independentVariablesData_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a065101fd932617c01061cb4776a4929a" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>interpolatorForDensity_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1afa49d97f06058915e2fca860916b43d2" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>interpolatorForGasConstant_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1aaae9156bde876a5716eab16012042358" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>interpolatorForMolarMass_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1aa8239209fc176d9702bba5139919111e" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>interpolatorForPressure_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ada0121d96be59def221e49be938c49f8" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>interpolatorForSpecificHeatRatio_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a81d4e374bc65a5d0cd5bbd800169f6ea" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>interpolatorForTemperature_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ac516436d7b7e81b3101024579c78e4bc" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>numberOfIndependentVariables_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a90d1bce823b61c7b4c74a7cbee57d226" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>ratioOfSpecificHeats_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1abed0c184d0864d3f7f7860240f09fa22" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>setWindModel</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a7ca8fc60daa7ed3996c6b519a54838e3" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>specificGasConstant_</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a270f8305f56d88a9f4aeeef1af1fbab0" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>TabulatedAtmosphere</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1ae1d29d22e756b1f76faf8d6f56f1973c" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>TabulatedAtmosphere</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a0fc307dfae1e16768e4a595f1d72d6ba" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>TabulatedAtmosphere</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a63f41eb63b3c9f0ae6298e9a93e03783" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>TabulatedAtmosphere</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1a02355eaebd0b2c00f2f2fd1836ac9697" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>windModel_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1a1ceb7bfb8c497ca6b6a0ccbade902ed7" prot="public" virt="virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>~AtmosphereModel</name></member>
      <member refid="d2/dc4/classtudat_1_1aerodynamics_1_1TabulatedAtmosphere_1a0deb8dfa088d55f712ecdef97c30a410" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TabulatedAtmosphere</scope><name>~TabulatedAtmosphere</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
