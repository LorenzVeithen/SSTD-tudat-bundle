<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator" kind="class" language="C++" prot="public">
    <compoundname>tudat::observation_models::LightTimeCalculator</compoundname>
    <includes refid="da/d28/lightTimeSolution_8h" local="no">lightTimeSolution.h</includes>
    <templateparamlist>
      <param>
        <type>typename ObservationScalarType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename TimeType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac4cb5e3ff9c71103f51aa113efffbcf1" prot="public" static="no">
        <type>Eigen::Matrix&lt; ObservationScalarType, 6, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt; ObservationScalarType, 6, 1 &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::StateType</definition>
        <argsstring></argsstring>
        <name>StateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="161" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a25cba3873205201a98e91ad70d14760c" prot="public" static="no">
        <type>Eigen::Matrix&lt; ObservationScalarType, 3, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt; ObservationScalarType, 3, 1 &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::PositionType</definition>
        <argsstring></argsstring>
        <name>PositionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="162" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ae5f62b6a2b07973c3a7e60a8eac24f5b" prot="protected" static="no" mutable="no">
        <type>std::function&lt; StateType(const double) &gt;</type>
        <definition>std::function&lt; StateType( const double ) &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::stateFunctionOfTransmittingBody_</definition>
        <argsstring></argsstring>
        <name>stateFunctionOfTransmittingBody_</name>
        <briefdescription>
<para>Transmitter state function. </para>
        </briefdescription>
        <detaileddescription>
<para>Transmitter state function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="428" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac2e07e8680f1c7cad240a7866d00cecc" prot="protected" static="no" mutable="no">
        <type>std::function&lt; StateType(const double) &gt;</type>
        <definition>std::function&lt; StateType( const double ) &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::stateFunctionOfReceivingBody_</definition>
        <argsstring></argsstring>
        <name>stateFunctionOfReceivingBody_</name>
        <briefdescription>
<para>Receiver state function. </para>
        </briefdescription>
        <detaileddescription>
<para>Receiver state function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="435" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a9c8925f37b01ed1546b51c0b59d8ee1b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="db/dbd/classtudat_1_1observation__models_1_1LightTimeCorrection" kindref="compound">LightTimeCorrection</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; LightTimeCorrection &gt; &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::correctionFunctions_</definition>
        <argsstring></argsstring>
        <name>correctionFunctions_</name>
        <briefdescription>
<para>List of light-time correction functions. </para>
        </briefdescription>
        <detaileddescription>
<para>List of light-time correction functions, i.e. tropospheric, relativistic, etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="441" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ad3089018675d535bf00c9cb09f416d1a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::iterateCorrections_</definition>
        <argsstring></argsstring>
        <name>iterateCorrections_</name>
        <briefdescription>
<para>Boolean deciding whether to recalculate the correction during each iteration. </para>
        </briefdescription>
        <detaileddescription>
<para>Boolean deciding whether to recalculate the correction during each iteration. If it is set true, the corrections are calculated during each iteration of the light-time calculations. If it is set to false, it is calculated once at the begining. Additionally, when convergence is reached, it is recalculated to check whether the light time with new correction violates the convergence. If so, another iteration is performed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="452" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ab16c4e876184fb9b1b25ef43890be474" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::currentCorrection_</definition>
        <argsstring></argsstring>
        <name>currentCorrection_</name>
        <briefdescription>
<para>Current light-time correction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="455" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a7a8a5b2eae9483822849f6ff1adee89a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::LightTimeCalculator</definition>
        <argsstring>(const std::function&lt; StateType(const TimeType) &gt; positionFunctionOfTransmittingBody, const std::function&lt; StateType(const TimeType) &gt; positionFunctionOfReceivingBody, const std::vector&lt; std::shared_ptr&lt; LightTimeCorrection &gt; &gt; correctionFunctions=std::vector&lt; std::shared_ptr&lt; LightTimeCorrection &gt; &gt;(), const bool iterateCorrections=false)</argsstring>
        <name>LightTimeCalculator</name>
        <param>
          <type>const std::function&lt; StateType(const TimeType) &gt;</type>
          <declname>positionFunctionOfTransmittingBody</declname>
        </param>
        <param>
          <type>const std::function&lt; StateType(const TimeType) &gt;</type>
          <declname>positionFunctionOfReceivingBody</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="db/dbd/classtudat_1_1observation__models_1_1LightTimeCorrection" kindref="compound">LightTimeCorrection</ref> &gt; &gt;</type>
          <declname>correctionFunctions</declname>
          <defval>std::vector&lt; std::shared_ptr&lt; <ref refid="db/dbd/classtudat_1_1observation__models_1_1LightTimeCorrection" kindref="compound">LightTimeCorrection</ref> &gt; &gt;()</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>iterateCorrections</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Class constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>This constructor is used to initialize the state functions and light-time correction objects. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>positionFunctionOfTransmittingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>State function of transmitter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>positionFunctionOfReceivingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>State function of receiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>correctionFunctions</parametername>
</parameternamelist>
<parameterdescription>
<para>List of light-time correction objects. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iterateCorrections</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean determining whether to recalculate the light-time correction during each iteration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="174" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="174" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1af8fedaea8545ebb64869ca5914fdfc74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::LightTimeCalculator</definition>
        <argsstring>(const std::function&lt; StateType(const TimeType) &gt; positionFunctionOfTransmittingBody, const std::function&lt; StateType(const TimeType) &gt; positionFunctionOfReceivingBody, const std::vector&lt; LightTimeCorrectionFunction &gt; correctionFunctions, const bool iterateCorrections=false)</argsstring>
        <name>LightTimeCalculator</name>
        <param>
          <type>const std::function&lt; StateType(const TimeType) &gt;</type>
          <declname>positionFunctionOfTransmittingBody</declname>
        </param>
        <param>
          <type>const std::function&lt; StateType(const TimeType) &gt;</type>
          <declname>positionFunctionOfReceivingBody</declname>
        </param>
        <param>
          <type>const std::vector&lt; LightTimeCorrectionFunction &gt;</type>
          <declname>correctionFunctions</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>iterateCorrections</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Class constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>This constructor is used to initialize the state functions and light-time functions <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>positionFunctionOfTransmittingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>State function of transmitter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>positionFunctionOfReceivingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>State function of receiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>correctionFunctions</parametername>
</parameternamelist>
<parameterdescription>
<para>List of light-time correction functions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iterateCorrections</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean determining whether to recalculate the light-time correction during each iteration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="195" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="195" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a690d38f55e19e11db2cf1089b3e545cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ObservationScalarType</type>
        <definition>ObservationScalarType tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::calculateLightTime</definition>
        <argsstring>(const TimeType time, const bool isTimeAtReception=true, const ObservationScalarType tolerance=getDefaultLightTimeTolerance&lt; ObservationScalarType &gt;())</argsstring>
        <name>calculateLightTime</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isTimeAtReception</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const ObservationScalarType</type>
          <declname>tolerance</declname>
          <defval>getDefaultLightTimeTolerance&lt; ObservationScalarType &gt;()</defval>
        </param>
        <briefdescription>
<para>Function to calculate the light time. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the light time between the link ends defined in the constructor. The input time can be either at transmission or at reception (default) time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at reception or transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isTimeAtReception</parametername>
</parameternamelist>
<parameterdescription>
<para>True if input time is at reception, false if at transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowed light-time difference between two subsequent iterations for which solution is accepted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the light time between the link ends. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="223" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="223" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac7dd1df139b6faac6890eb1ee9f6688a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PositionType</type>
        <definition>PositionType tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::calculateRelativeRangeVector</definition>
        <argsstring>(const TimeType time, const bool isTimeAtReception=1, const ObservationScalarType tolerance=getDefaultLightTimeTolerance&lt; ObservationScalarType &gt;())</argsstring>
        <name>calculateRelativeRangeVector</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isTimeAtReception</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const ObservationScalarType</type>
          <declname>tolerance</declname>
          <defval>getDefaultLightTimeTolerance&lt; ObservationScalarType &gt;()</defval>
        </param>
        <briefdescription>
<para>Function to calculate the &apos;measured&apos; vector from transmitter to receiver. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the vector from transmitter at transmitter time to receiver at reception time. The input time can be either at transmission or reception (default) time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at reception or transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isTimeAtReception</parametername>
</parameternamelist>
<parameterdescription>
<para>True if input time is at reception, false if at transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowed light-time difference between two subsequent iterations for which solution is accepted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The vector from the transmitter to the reciever. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="249" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="249" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ab5889c255b741f67b9574df4a936b119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ObservationScalarType</type>
        <definition>ObservationScalarType tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::calculateLightTimeWithLinkEndsStates</definition>
        <argsstring>(StateType &amp;receiverStateOutput, StateType &amp;transmitterStateOutput, const TimeType time, const bool isTimeAtReception=1, const ObservationScalarType tolerance=(getDefaultLightTimeTolerance&lt; ObservationScalarType &gt;()))</argsstring>
        <name>calculateLightTimeWithLinkEndsStates</name>
        <param>
          <type>StateType &amp;</type>
          <declname>receiverStateOutput</declname>
        </param>
        <param>
          <type>StateType &amp;</type>
          <declname>transmitterStateOutput</declname>
        </param>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isTimeAtReception</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const ObservationScalarType</type>
          <declname>tolerance</declname>
          <defval>(getDefaultLightTimeTolerance&lt; ObservationScalarType &gt;())</defval>
        </param>
        <briefdescription>
<para>Function to calculate the light time and link-ends states. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the transmitter state at transmission time, the receiver state at reception time, and the light time. The input time can be either at transmission or reception (default) time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>receiverStateOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>Output by reference of receiver state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmitterStateOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>Output by reference of transmitter state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at reception or transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isTimeAtReception</parametername>
</parameternamelist>
<parameterdescription>
<para>True if input time is at reception, false if at transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowed light-time difference between two subsequent iterations for which solution is accepted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the light time between the reciever state and the transmitter state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="277" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="277" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a89fb8b6191f0b48e6c4c0d0ebd52ebdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix&lt; ObservationScalarType, 1, 3 &gt;</type>
        <definition>Eigen::Matrix&lt; ObservationScalarType, 1, 3 &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::getPartialOfLightTimeWrtLinkEndPosition</definition>
        <argsstring>(const StateType &amp;transmitterState, const StateType &amp;receiverState, const TimeType transmitterTime, const TimeType receiverTime, const bool isPartialWrtReceiver)</argsstring>
        <name>getPartialOfLightTimeWrtLinkEndPosition</name>
        <param>
          <type>const StateType &amp;</type>
          <declname>transmitterState</declname>
        </param>
        <param>
          <type>const StateType &amp;</type>
          <declname>receiverState</declname>
        </param>
        <param>
          <type>const TimeType</type>
          <declname>transmitterTime</declname>
        </param>
        <param>
          <type>const TimeType</type>
          <declname>receiverTime</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isPartialWrtReceiver</declname>
        </param>
        <briefdescription>
<para>Function to get the part wrt linkend position. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the part wrt linkend position <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transmitterState</parametername>
</parameternamelist>
<parameterdescription>
<para>State of transmitter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiverState</parametername>
</parameternamelist>
<parameterdescription>
<para>State of receiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmitterTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiverTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at reiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isPartialWrtReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If partial is to be calculated w.r.t. receiver or transmitter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="393" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="393" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a3d6ee74c615cc2cef6ad50999fcc36e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="db/dbd/classtudat_1_1observation__models_1_1LightTimeCorrection" kindref="compound">LightTimeCorrection</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; LightTimeCorrection &gt; &gt; tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::getLightTimeCorrection</definition>
        <argsstring>()</argsstring>
        <name>getLightTimeCorrection</name>
        <briefdescription>
<para>Function to get list of light-time correction functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get list of light-time correction functions <simplesect kind="return"><para>List of light-time correction functions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="416" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="416" bodyend="419"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1aa0e98b3741da686751095de840e2cad5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ObservationScalarType</type>
        <definition>ObservationScalarType tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::calculateNewLightTimeEstime</definition>
        <argsstring>(const StateType &amp;receiverState, const StateType &amp;transmitterState) const</argsstring>
        <name>calculateNewLightTimeEstime</name>
        <param>
          <type>const StateType &amp;</type>
          <declname>receiverState</declname>
        </param>
        <param>
          <type>const StateType &amp;</type>
          <declname>transmitterState</declname>
        </param>
        <briefdescription>
<para>Function to calculate a new light-time estimate from the link-ends states. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate a new light-time estimate from the states of the two ends of the link. This function recalculates the light time each iteration from the assumed receiver/transmitter state, as well as the currentCorrection_ variable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>receiverState</parametername>
</parameternamelist>
<parameterdescription>
<para>Assumed state of receiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmitterState</parametername>
</parameternamelist>
<parameterdescription>
<para>Assumed state of transmitter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New value of the light-time estimate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="466" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="466" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac810a9781869b7b4a8605a9ccfb6f1ae" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::observation_models::LightTimeCalculator&lt; ObservationScalarType, TimeType &gt;::setTotalLightTimeCorrection</definition>
        <argsstring>(const StateType &amp;transmitterState, const StateType &amp;receiverState, const TimeType transmissionTime, const TimeType receptionTime)</argsstring>
        <name>setTotalLightTimeCorrection</name>
        <param>
          <type>const StateType &amp;</type>
          <declname>transmitterState</declname>
        </param>
        <param>
          <type>const StateType &amp;</type>
          <declname>receiverState</declname>
        </param>
        <param>
          <type>const TimeType</type>
          <declname>transmissionTime</declname>
        </param>
        <param>
          <type>const TimeType</type>
          <declname>receptionTime</declname>
        </param>
        <briefdescription>
<para>Function to reset the currentCorrection_ variable during current iteration. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to reset the currentCorrection_ variable during current iteration, representing the sum of all corrections causing the light time to deviate from the Euclidean value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transmitterState</parametername>
</parameternamelist>
<parameterdescription>
<para>State of transmitter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiverState</parametername>
</parameternamelist>
<parameterdescription>
<para>State of receiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmissionTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receptionTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at reception. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="484" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="484" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to calculate the light time between two points. </para>
    </briefdescription>
    <detaileddescription>
<para>This class calculates the light time between two points, of which the state functions have to be provided. Additionally, light-time corrections (such as tropospheric or relatvistic corrections) can be applied. The motion of the ends of the link during the light time is taken into account in the calculations. </para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" line="156" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/lightTimeSolution.h" bodystart="157" bodyend="500"/>
    <listofallmembers>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a690d38f55e19e11db2cf1089b3e545cf" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>calculateLightTime</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ab5889c255b741f67b9574df4a936b119" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>calculateLightTimeWithLinkEndsStates</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1aa0e98b3741da686751095de840e2cad5" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>calculateNewLightTimeEstime</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac7dd1df139b6faac6890eb1ee9f6688a" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>calculateRelativeRangeVector</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a9c8925f37b01ed1546b51c0b59d8ee1b" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>correctionFunctions_</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ab16c4e876184fb9b1b25ef43890be474" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>currentCorrection_</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a3d6ee74c615cc2cef6ad50999fcc36e6" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>getLightTimeCorrection</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a89fb8b6191f0b48e6c4c0d0ebd52ebdd" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>getPartialOfLightTimeWrtLinkEndPosition</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ad3089018675d535bf00c9cb09f416d1a" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>iterateCorrections_</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a7a8a5b2eae9483822849f6ff1adee89a" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>LightTimeCalculator</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1af8fedaea8545ebb64869ca5914fdfc74" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>LightTimeCalculator</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1a25cba3873205201a98e91ad70d14760c" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>PositionType</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac810a9781869b7b4a8605a9ccfb6f1ae" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>setTotalLightTimeCorrection</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac2e07e8680f1c7cad240a7866d00cecc" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>stateFunctionOfReceivingBody_</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ae5f62b6a2b07973c3a7e60a8eac24f5b" prot="protected" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>stateFunctionOfTransmittingBody_</name></member>
      <member refid="d2/db1/classtudat_1_1observation__models_1_1LightTimeCalculator_1ac4cb5e3ff9c71103f51aa113efffbcf1" prot="public" virt="non-virtual"><scope>tudat::observation_models::LightTimeCalculator</scope><name>StateType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
