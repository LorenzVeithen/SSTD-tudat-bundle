<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator" kind="class" language="C++" prot="public">
    <compoundname>tudat::aerodynamics::TrimOrientationCalculator</compoundname>
    <includes refid="d0/ddc/trimOrientation_8h" local="no">trimOrientation.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1a2907d6c9fb5b610bd27a5ef82509827d" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface" kindref="compound">AerodynamicCoefficientInterface</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AerodynamicCoefficientInterface &gt; tudat::aerodynamics::TrimOrientationCalculator::coefficientInterface_</definition>
        <argsstring></argsstring>
        <name>coefficientInterface_</name>
        <briefdescription>
<para>Object containing used to retrieve aerodynamic coefficients as function of independent variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="110" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1acbba50c940cd8e66b297009bd3eb3155" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder" kindref="compound">root_finders::RootFinder</ref>&lt; double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; root_finders::RootFinder&lt; double &gt; &gt; tudat::aerodynamics::TrimOrientationCalculator::rootFinder_</definition>
        <argsstring></argsstring>
        <name>rootFinder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object to iteratively find the root of the equations C_m(alpha)=0, i.e. to determine the angle of attack for which the pitch moment is zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="114" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1ac809421c0c81c4080d27867ebe6c4c10" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tudat::aerodynamics::TrimOrientationCalculator::variableIndex_</definition>
        <argsstring></argsstring>
        <name>variableIndex_</name>
        <briefdescription>
<para>Index in independent variable list of coefficientInterface_ corresponding to the angle of attack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="117" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1abcbd3676ae5b4a436b316d0b24c7ca01" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt; std::string, int &gt; tudat::aerodynamics::TrimOrientationCalculator::controlSurfaceVariableIndex_</definition>
        <argsstring></argsstring>
        <name>controlSurfaceVariableIndex_</name>
        <briefdescription>
<para>Index in list of each of the control surface interfaces corresponding to the angle of attack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="120" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1aa5c38727579b7fbaa35b98b35485d689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::TrimOrientationCalculator::TrimOrientationCalculator</definition>
        <argsstring>(const std::shared_ptr&lt; AerodynamicCoefficientInterface &gt; coefficientInterface, const std::shared_ptr&lt; root_finders::RootFinder&lt; double &gt; &gt; rootFinder=nullptr)</argsstring>
        <name>TrimOrientationCalculator</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface" kindref="compound">AerodynamicCoefficientInterface</ref> &gt;</type>
          <declname>coefficientInterface</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder" kindref="compound">root_finders::RootFinder</ref>&lt; double &gt; &gt;</type>
          <declname>rootFinder</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficientInterface</parametername>
</parameternamelist>
<parameterdescription>
<para>Object containing used to retrieve aerodynamic coefficients as function of independent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rootFinder</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to iteratively find the root of the equations C_m(alpha)=0, i.e. to determine the angle of attack for which the pitch moment is zero. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="48" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/trimOrientation.cpp" bodystart="21" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1a3b09c56f60811b70789fadbe497c68eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TrimOrientationCalculator::findTrimAngleOfAttack</definition>
        <argsstring>(const std::vector&lt; double &gt; untrimmedIndependentVariables, const std::map&lt; std::string, std::vector&lt; double &gt; &gt; untrimmedControlSurfaceIndependentVariables=std::map&lt; std::string, std::vector&lt; double &gt; &gt;())</argsstring>
        <name>findTrimAngleOfAttack</name>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>untrimmedIndependentVariables</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::vector&lt; double &gt; &gt;</type>
          <declname>untrimmedControlSurfaceIndependentVariables</declname>
          <defval>std::map&lt; std::string, std::vector&lt; double &gt; &gt;()</defval>
        </param>
        <briefdescription>
<para>Function to find the trimmed angle of attack for a given set of independent variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to find the trimmed angle of attack for a given set of independent variables. This function iteratively changes the angle of attack in the untrimmedIndependentVariables vector (keeping any other variables the same) and returns the value of the trimmed angle of attack. Note that this function will typically have some small numerical error in the result, as a result of the error tolerances in the root finder. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>untrimmedIndependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Untrimmed list of independent variables (in order required as input for coefficientInterface_) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>untrimmedControlSurfaceIndependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Untrimmed list of independent variables for control surfaces with map key denoting the control surface name (in order required as input for coefficient interfaces) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trimmed angle of attack. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="64" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/trimOrientation.cpp" bodystart="73" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1aeacda3e3a55bee53cfc46162e909b680" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TrimOrientationCalculator::findTrimAngleOfAttackFromFunction</definition>
        <argsstring>(const std::function&lt; std::vector&lt; double &gt;() &gt; untrimmedIndependentVariablesFunction, const std::function&lt; std::map&lt; std::string, std::vector&lt; double &gt; &gt;() &gt; untrimmedControlSurfaceIndependentVariablesFunction)</argsstring>
        <name>findTrimAngleOfAttackFromFunction</name>
        <param>
          <type>const std::function&lt; std::vector&lt; double &gt;() &gt;</type>
          <declname>untrimmedIndependentVariablesFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; std::map&lt; std::string, std::vector&lt; double &gt; &gt;() &gt;</type>
          <declname>untrimmedControlSurfaceIndependentVariablesFunction</declname>
        </param>
        <briefdescription>
<para>Function to find the trimmed angle of attack for a given set of independent variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to find the trimmed angle of attack for a given set of independent variables. This function iteratively changes the angle of attack in the untrimmedIndependentVariables vector (keeping any other variables the same) and returns the value of the trimmed angle of attack. Note that this function will typically have some small numerical error in the result, as a result of the error tolerances in the root finder. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>untrimmedIndependentVariablesFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning untrimmed list of independent variables (in order required as input for coefficientInterface_ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>untrimmedControlSurfaceIndependentVariablesFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning untrimmed list of independent variables for control surfaces with map key denoting the control surface name (in order required as input for coefficient interfaces) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trimmed angle of attack. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="82" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" bodystart="82" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1a6d831c14902aa7044221ad53b9844ee4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::TrimOrientationCalculator::getPerturbedMomentCoefficient</definition>
        <argsstring>(const double perturbedAngleOfAttack, const std::vector&lt; double &gt; &amp;unperturbedConditions, const std::map&lt; std::string, std::vector&lt; double &gt; &gt; unperturbedControlSurfaceIndependentVariables)</argsstring>
        <name>getPerturbedMomentCoefficient</name>
        <param>
          <type>const double</type>
          <declname>perturbedAngleOfAttack</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>unperturbedConditions</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::vector&lt; double &gt; &gt;</type>
          <declname>unperturbedControlSurfaceIndependentVariables</declname>
        </param>
        <briefdescription>
<para>Function to get the moment coefficient for a given angle of attack. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the moment coefficient for a given perturbed angle of attack, keeping all other independent variables constant. This function is used as input to the root finder to determine the trim point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>perturbedAngleOfAttack</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle of attack to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unperturbedConditions</parametername>
</parameternamelist>
<parameterdescription>
<para>Untrimmed list of independent variables (in order required as input for coefficientInterface_ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unperturbedControlSurfaceIndependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Untrimmed list of independent variables for control surfaces with map key denoting the control surface name (in order required as input for coefficient interfaces) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Moment coefficient at given independent variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="104" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/trimOrientation.cpp" bodystart="104" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to determine the trimmed angle-of-attack for a given set of aerodynamic coefficients. </para>
    </briefdescription>
    <detaileddescription>
<para>Class to determine the trimmed angle-of-attack for a given set of aerodynamic coefficients. The coefficient interface provided as input must be dependent on the angle of attack for this class to function. </para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" line="36" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/trimOrientation.h" bodystart="37" bodyend="121"/>
    <listofallmembers>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1a2907d6c9fb5b610bd27a5ef82509827d" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>coefficientInterface_</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1abcbd3676ae5b4a436b316d0b24c7ca01" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>controlSurfaceVariableIndex_</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1a3b09c56f60811b70789fadbe497c68eb" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>findTrimAngleOfAttack</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1aeacda3e3a55bee53cfc46162e909b680" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>findTrimAngleOfAttackFromFunction</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1a6d831c14902aa7044221ad53b9844ee4" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>getPerturbedMomentCoefficient</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1acbba50c940cd8e66b297009bd3eb3155" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>rootFinder_</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1aa5c38727579b7fbaa35b98b35485d689" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>TrimOrientationCalculator</name></member>
      <member refid="d7/dbc/classtudat_1_1aerodynamics_1_1TrimOrientationCalculator_1ac809421c0c81c4080d27867ebe6c4c10" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::TrimOrientationCalculator</scope><name>variableIndex_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
