<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial" kind="class" language="C++" prot="public">
    <compoundname>tudat::acceleration_partials::ThirdBodyGravityPartial</compoundname>
    <basecompoundref refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial" prot="public" virt="non-virtual">tudat::acceleration_partials::AccelerationPartial</basecompoundref>
    <includes refid="db/d0f/thirdBodyGravityPartial_8h" local="no">thirdBodyGravityPartial.h</includes>
    <templateparamlist>
      <param>
        <type>typename DirectGravityPartial</type>
      </param>
      <param>
        <type>typename std::enable_if&lt; <ref refid="d2/d95/structtudat_1_1is__direct__gravity__partial" kindref="compound">is_direct_gravity_partial</ref>&lt; DirectGravityPartial &gt;::value, int &gt;::type</type>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ab359db6ab50b045fa5d1eaf28ca1879d" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; DirectGravityPartial &gt;</type>
        <definition>std::shared_ptr&lt; DirectGravityPartial &gt; tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::partialOfDirectGravityOnBodyUndergoingAcceleration_</definition>
        <argsstring></argsstring>
        <name>partialOfDirectGravityOnBodyUndergoingAcceleration_</name>
        <briefdescription>
<para>Partial derivative object of direct acceleration from acceleratingBody on acceleratedBody. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="502" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1af877c4ee2cfdfcef947a8bcbb04db510" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; DirectGravityPartial &gt;</type>
        <definition>std::shared_ptr&lt; DirectGravityPartial &gt; tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::partialOfDirectGravityOnCentralBody_</definition>
        <argsstring></argsstring>
        <name>partialOfDirectGravityOnCentralBody_</name>
        <briefdescription>
<para>Partial derivative object of direct acceleration from centralBodyName on acceleratedBody. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="505" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ac5a01ac48b903407b6549b24833faf23" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::centralBodyName_</definition>
        <argsstring></argsstring>
        <name>centralBodyName_</name>
        <briefdescription>
<para>Name of central body w.r.t. which the acceleration is computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="508" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1af6a85f7a953866d06ec8a6165b2d98fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::ThirdBodyGravityPartial</definition>
        <argsstring>(const std::shared_ptr&lt; DirectGravityPartial &gt; partialOfDirectGravityOnBodyUndergoingAcceleration, const std::shared_ptr&lt; DirectGravityPartial &gt; partialOfDirectGravityOnCentralBody, const std::string &amp;acceleratedBody, const std::string &amp;acceleratingBody, const std::string &amp;centralBodyName)</argsstring>
        <name>ThirdBodyGravityPartial</name>
        <param>
          <type>const std::shared_ptr&lt; DirectGravityPartial &gt;</type>
          <declname>partialOfDirectGravityOnBodyUndergoingAcceleration</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; DirectGravityPartial &gt;</type>
          <declname>partialOfDirectGravityOnCentralBody</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>acceleratedBody</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>acceleratingBody</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>centralBodyName</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialOfDirectGravityOnBodyUndergoingAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial derivative of direct acceleration from acceleratingBody on acceleratedBody. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>partialOfDirectGravityOnCentralBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial derivative of direct acceleration from centralBodyName on acceleratedBody. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleratedBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body undergoing acceleration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleratingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body exerting acceleration (third-body) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of central body w.r.t. which the acceleration is computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="89" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="89" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a85d59afceca8c7a5705b6f5b83ff5e04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtPositionOfAcceleratedBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAcceleratedBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a629ee1ab826d64e6493d1dbf0fe7586b">wrtPositionOfAcceleratedBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration. Update( ) function must have been called during current time step before calling this function. <simplesect kind="return"><para>Partial derivative of acceleration w.r.t. position of body undergoing acceleration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="105" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="105" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1adb69907bf7bac1aae8bbc30a92e064e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtVelocityOfAcceleratedBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=3)</argsstring>
        <name>wrtVelocityOfAcceleratedBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ad3bb8ec281acf660baed8eb5127fcf5d">wrtVelocityOfAcceleratedBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>3</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body undergoing acceleration. Update( ) function must have been called during current time step before calling this function. <simplesect kind="return"><para>Partial derivative of acceleration w.r.t. velocity of body undergoing acceleration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="125" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="125" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a87fdfb39c5cbeb0f8f2fe1d07cac0c9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtPositionOfAcceleratingBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAcceleratingBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a779c9c208d2054d8425178f4ea8f6021">wrtPositionOfAcceleratingBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body exerting acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body exerting acceleration. Update( ) function must have been called during current time step before calling this function. <simplesect kind="return"><para>Partial derivative of acceleration w.r.t. position of body exerting acceleration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="145" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="145" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a8969f306e082943d424c249a25319923" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtVelocityOfAcceleratingBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=3)</argsstring>
        <name>wrtVelocityOfAcceleratingBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab411157f1ab0d7b8bdcb771024b4f5a9">wrtVelocityOfAcceleratingBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>3</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body exerting acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body exerting acceleration. Update( ) function must have been called during current time step before calling this function. <simplesect kind="return"><para>Partial derivative of acceleration w.r.t. velocity of body exerting acceleration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="164" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="164" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1aa6daacc7ade3f5713b11bb9c779b4423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtPositionOfAdditionalBody</definition>
        <argsstring>(const std::string &amp;bodyName, Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAdditionalBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab222ba1108201aa02e916c64ce82d599">wrtPositionOfAdditionalBody</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>bodyName</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of an additiona body. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of an additional body (in addition to the body undergoing and exerting the acceleration) and adding it to the existing partial block. This function check if the requested additional body equals the central body name. Also, it checks whether either the direct or indirect acceleration depend on this additional body. The partial computation is then updated accordingly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of additional body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of third body where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="188" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="188" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a8ec877ad5a988357b71cd6e3ebce5ae0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtVelocityOfAdditionalBody</definition>
        <argsstring>(const std::string &amp;bodyName, Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=3)</argsstring>
        <name>wrtVelocityOfAdditionalBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a1566f99b2cfd42d523c06ee6c1559435">wrtVelocityOfAdditionalBody</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>bodyName</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>3</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of an additiona body. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of an additional body (in addition to the body undergoing and exerting the acceleration) and adding it to the existing partial block. This function check if the requested additional body equals the central body name. Also, it checks whether either the direct or indirect acceleration depend on this additional body. The partial computation is then updated accordingly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of additional body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of third body where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="224" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="224" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a48504d4899079b3a80909d991c72d4cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::isAccelerationPartialWrtAdditionalBodyNonnullptr</definition>
        <argsstring>(const std::string &amp;bodyName)</argsstring>
        <name>isAccelerationPartialWrtAdditionalBodyNonnullptr</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab6d26ee307ebc4bb8f2cdca9f53e5097">isAccelerationPartialWrtAdditionalBodyNonnullptr</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>bodyName</declname>
        </param>
        <briefdescription>
<para>Function for checking whether the partial of the acceleration w.r.t. the state of an additional body is non-zero. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for checking whether the partial of the acceleration w.r.t. the state of an additional body is non-zero <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of additional body. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if dependency exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="252" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="252" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ad665fe05ea9c95fbe020081b37990363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::wrtNonTranslationalStateOfAdditionalBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const std::pair&lt; std::string, std::string &gt; &amp;stateReferencePoint, const propagators::IntegratedStateType integratedStateType, const bool addContribution=true)</argsstring>
        <name>wrtNonTranslationalStateOfAdditionalBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a781bc99dab9ab8dd805c63edf4e0d8f5">wrtNonTranslationalStateOfAdditionalBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
          <declname>stateReferencePoint</declname>
        </param>
        <param>
          <type>const propagators::IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. a non-translational integrated state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. a non-translational integrated state and adding it to the existing partial block. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference point id of propagated state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of propagated state for which partial is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="278" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="278" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a3b2270ed356d4d160791f27e08abddfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::isStateDerivativeDependentOnIntegratedAdditionalStateTypes</definition>
        <argsstring>(const std::pair&lt; std::string, std::string &gt; &amp;stateReferencePoint, const propagators::IntegratedStateType integratedStateType)</argsstring>
        <name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a94b95390a37109627270bd8dfbca5342">isStateDerivativeDependentOnIntegratedAdditionalStateTypes</reimplements>
        <param>
          <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
          <declname>stateReferencePoint</declname>
        </param>
        <param>
          <type>const propagators::IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <briefdescription>
<para>Function for determining if the acceleration is dependent on a non-translational integrated state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for determining if the acceleration is dependent on a non-translational integrated state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference point id of propagated state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of propagated state for which dependency is to be determined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if dependency exists (non-zero partial), false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="299" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="299" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1aa3c7d3780d4e91a42656210494973169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void( Eigen::MatrixXd&amp; ) &gt;, int &gt; tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; double &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a69a7807aefb5f8d5972718d36a96635f">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; double &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a double parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a double parameter. Function returns empty function and zero size indicator for parameters with no dependency for current acceleration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial (0 for no dependency, 1 otherwise). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="327" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="327" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a23c1b474e6de1143d18ca08786aa04c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void( Eigen::MatrixXd&amp; ) &gt;, int &gt; tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::VectorXd &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a849b14fede905e4e26ee2e752fbc95cc">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::VectorXd &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. Function returns empty function and zero size indicator for parameters with no dependency for current acceleration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial (0 for no dependency). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="346" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="346" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a1ec85f9f6063993b01dfe83407c5ba3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::setParameterPartialUpdateFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; double &gt; &gt; parameter)</argsstring>
        <name>setParameterPartialUpdateFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a481fc771c0a87996bc469b34ead49db9">setParameterPartialUpdateFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; double &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function to set a dependency of this partial object w.r.t. a given double parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set a dependency of this partial object w.r.t. a given double parameter. If a dependency exists, the given partial is recomputed on every call of updateParameterPartials. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial w.r.t. which dependency is to be checked and set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size (number of columns) of parameter partial. Zero if no dependency, 1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="365" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="365" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1aa5d17fcbd0514e51ab6aa4fbef89c17f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::setParameterPartialUpdateFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::VectorXd &gt; &gt; parameter)</argsstring>
        <name>setParameterPartialUpdateFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a646f021c7c884446d482b9b0ab1e14f4">setParameterPartialUpdateFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::VectorXd &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function to set a dependency of this partial object w.r.t. a given vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set a dependency of this partial object w.r.t. a given vector parameter. If a dependency exists, the given partial is recomputed on every call of updateParameterPartials. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial w.r.t. which dependency is to be checked and set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size (number of columns) of parameter partial. Zero if no dependency, size of parameter otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="405" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="405" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ac200d4b69bc1409a6f0c6cc62daba93f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::update</definition>
        <argsstring>(const double currentTime)</argsstring>
        <name>update</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6801a8f31cc0fcdb9679c2db6be3b157">update</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Function for updating partials w.r.t. the bodies&apos; positions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for updating common blocks of partial to current state. For the third body gravitational acceleration, the update functions of both constituent accelerations are updated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which partials are to be calculated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="445" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="445" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a8f2bc9629e2c62300edaff5af4ee0ab3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; DirectGravityPartial &gt;</type>
        <definition>std::shared_ptr&lt; DirectGravityPartial &gt; tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::getPartialOfDirectGravityOnBodyUndergoingAcceleration</definition>
        <argsstring>()</argsstring>
        <name>getPartialOfDirectGravityOnBodyUndergoingAcceleration</name>
        <briefdescription>
<para>Function to get partial derivative object of direct acceleration from centralBodyName on acceleratedBody. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the partial derivative object of direct acceleration from centralBodyName on acceleratedBody. <simplesect kind="return"><para>Partial derivative object of direct acceleration from centralBodyName on acceleratedBody. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="458" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ac43c4189dd4a8563955c73bb52423c8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; DirectGravityPartial &gt;</type>
        <definition>std::shared_ptr&lt; DirectGravityPartial &gt; tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::getPartialOfDirectGravityOnCentralBody</definition>
        <argsstring>()</argsstring>
        <name>getPartialOfDirectGravityOnCentralBody</name>
        <briefdescription>
<para>Function to get partial derivative object of direct acceleration from acceleratingBody on acceleratedBody. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the partial derivative object of direct acceleration from acceleratingBody on acceleratedBody. <simplesect kind="return"><para>Partial derivative object of direct acceleration from acceleratingBody on acceleratedBody. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="468" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="468" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ae0e2a2d87596a2fe3c93f9956fba7f2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::getCentralBodyName</definition>
        <argsstring>()</argsstring>
        <name>getCentralBodyName</name>
        <briefdescription>
<para>Function to get the name of central body w.r.t. which the acceleration is computed. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the name of central body w.r.t. which the acceleration is computed. <simplesect kind="return"><para>Name of central body w.r.t. which the acceleration is computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="478" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="478" bodyend="481"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a6bc1d79dc73aba002ba8dd56f82bf3c2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::resetTimeOfMemberObjects</definition>
        <argsstring>()</argsstring>
        <name>resetTimeOfMemberObjects</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aa0245f5f6b58423905b64709dac39a4c">resetTimeOfMemberObjects</reimplements>
        <briefdescription>
<para>Function to reset the constituent DirectGravityPartial objects to the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="487" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="487" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1abe59cad0fa867a62e29ffa1761cc4d39" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;::updateParameterPartialsOfMemberObjects</definition>
        <argsstring>()</argsstring>
        <name>updateParameterPartialsOfMemberObjects</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a53491f7d5c94bd64b71c5190b9793a64">updateParameterPartialsOfMemberObjects</reimplements>
        <briefdescription>
<para>Function to update the parameter partials of the constituent DirectGravityPartial objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="494" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="494" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to calculate the partials of a third-body gravitational acceleration w.r.t. parameters and states. </para>
    </briefdescription>
    <detaileddescription>
<para>Class to calculate the partials of a third-body gravitational acceleration w.r.t. parameters and states. This class may be used for any direct gravitational acceleration (central, spherical harmonic, mutual spherical harmonic, etc.), providin a generic third-body partial interface. The template parameter is the derived class of <ref refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial" kindref="compound">AccelerationPartial</ref> for the associated direct acceleration partial. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::acceleration_partials::AccelerationPartial</label>
        <link refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;</label>
        <link refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::acceleration_partials::AccelerationPartial</label>
        <link refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>acceleratedBody_</edgelabel>
          <edgelabel>acceleratingBody_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
        <childnode refid="4" relation="usage">
          <edgelabel>isCurrentDoubleParameterPartialSetIterator_</edgelabel>
          <edgelabel>isCurrentVectorParameterPartialSetIterator_</edgelabel>
          <edgelabel>parameterDoublePartialFunctionIterator_</edgelabel>
          <edgelabel>parameterVectorPartialFunctionIterator_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::ThirdBodyGravityPartial&lt; DirectGravityPartial, type &gt;</label>
        <link refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" line="74" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/thirdBodyGravityPartial.h" bodystart="75" bodyend="510"/>
    <listofallmembers>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a655662aa6427373647cc9c26327e9565" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>acceleratedBody_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1aa0cb4d885b7833a39db39212a797ebd2" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>acceleratingBody_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ad4f4594c6e13138a1895dd008a14bf7e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>AccelerationPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aacaaf221e1d39de40b6d9e3b881b9e42" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>accelerationSize_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a32cc6c58e4aa187b2110b4c6c7d4ccf4" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>accelerationType_</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ac5a01ac48b903407b6549b24833faf23" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>centralBodyName_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6699f3159f79975406d3fcc1f9002d1b" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>currentDoubleParameterPartials_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1abbca0ac294a29b7d1efc16a68d7c4582" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>currentTime_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a1091be37858cb2fbef57b803e944ac60" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>currentVectorParameterPartials_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a0bf7d418855165be4d40b82cfbeb115c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ac74a861f66f3362524aec1f0266513cf" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a6b6e323de35eaeb1292e4bfb410da7b1" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getAccelerationType</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ae0e2a2d87596a2fe3c93f9956fba7f2c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getCentralBodyName</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ac31393221aeef20ea4ee5d7d0ad59aba" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getCurrentDoubleParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adf72962ebc3a9a2008170009c26f553c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1acdfcbf63330d5b2b04fbaeb3787c8f68" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a2ba60d5dd1c131412a8f1aae8dd47a21" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getCurrentVectorParameterPartial</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a1b40573f9d0a7ad203e379327f13757e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getDerivativeFunctionWrtStateOfIntegratedBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a01893338e6faedd93cc0410bb692ce12" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getIntegratedStateType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adbe24dfd4085ec6343ccf18478b52bc0" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getIntegrationReferencePoint</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1aa3c7d3780d4e91a42656210494973169" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a23c1b474e6de1143d18ca08786aa04c1" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a8f2bc9629e2c62300edaff5af4ee0ab3" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getPartialOfDirectGravityOnBodyUndergoingAcceleration</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ac43c4189dd4a8563955c73bb52423c8d" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>getPartialOfDirectGravityOnCentralBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aad4f9e664da456462d4cb8b764679f1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>integratedStateType_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a0c30598298c59647e997203dc0ad664c" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>integrationReferencePoint_</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a48504d4899079b3a80909d991c72d4cb" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isAccelerationPartialWrtAdditionalBodyNonnullptr</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ad91136949f633458e8b970a5baacb9ce" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isCurrentDoubleParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aebd9e9721d7194fea38a286e94391d97" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isCurrentDoubleParameterPartialSetIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a90cb1a317764b060601778e2a515d305" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isCurrentVectorParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adc2943bcf127c42d392e57e574b0fa1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isCurrentVectorParameterPartialSetIterator_</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a3b2270ed356d4d160791f27e08abddfd" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab05fd603c6228f4639e6f00ac4f9527c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>isStateDerivativeDependentOnIntegratedState</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a300a3a9234fd8eb9fd4f5d50778a4321" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>parameterDoublePartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3e7c12925372ee2844f8f76d2dae4a77" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>parameterDoublePartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae86be0f3c3a487ce1706e0829caca26e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>parameterVectorPartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a799da4695ca3bea29aaed8b761c9c3b3" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>parameterVectorPartialFunctions_</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ab359db6ab50b045fa5d1eaf28ca1879d" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>partialOfDirectGravityOnBodyUndergoingAcceleration_</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1af877c4ee2cfdfcef947a8bcbb04db510" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>partialOfDirectGravityOnCentralBody_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7b26a08bb4990220a7d2f40f3681274a" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>resetCurrentParameterValues</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3654d540045886559b6592dc4f30bab8" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>resetTime</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a6bc1d79dc73aba002ba8dd56f82bf3c2" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>resetTimeOfMemberObjects</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a1ec85f9f6063993b01dfe83407c5ba3e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1aa5d17fcbd0514e51ab6aa4fbef89c17f" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a4827d172b38b466f65f4da68500f53ea" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>StateDerivativePartial</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1af6a85f7a953866d06ec8a6165b2d98fc" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>ThirdBodyGravityPartial</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ac200d4b69bc1409a6f0c6cc62daba93f" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>update</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7a6f8bf919e2a0c16bc254738123b5b4" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>updateParameterPartials</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1abe59cad0fa867a62e29ffa1761cc4d39" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>updateParameterPartialsOfMemberObjects</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1ad665fe05ea9c95fbe020081b37990363" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtNonTranslationalStateOfAdditionalBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a17003fa377113426b3e556a78f147941" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtParameter</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae12101f97027e73084d3d80dbc7059b3" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtParameter</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a85d59afceca8c7a5705b6f5b83ff5e04" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtPositionOfAcceleratedBody</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a87fdfb39c5cbeb0f8f2fe1d07cac0c9f" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtPositionOfAcceleratingBody</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1aa6daacc7ade3f5713b11bb9c779b4423" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtPositionOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a0576a63608bc8bee1da8bf2aea0ea7b6" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtStateOfAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a8bfba67b7f9e9a3d6021b2b1759fc33e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtStateOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a8e21b7ff67f97af2e7e2a963cd0da3b2" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtStateOfAdditionalBody</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1adb69907bf7bac1aae8bbc30a92e064e5" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtVelocityOfAcceleratedBody</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a8969f306e082943d424c249a25319923" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtVelocityOfAcceleratingBody</name></member>
      <member refid="d7/dd0/classtudat_1_1acceleration__partials_1_1ThirdBodyGravityPartial_1a8ec877ad5a988357b71cd6e3ebce5ae0" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>wrtVelocityOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab373fff70206231b312a988e59902038" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>~AccelerationPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a05f085a890b27518ca24446ac22bdb3e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::ThirdBodyGravityPartial</scope><name>~StateDerivativePartial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
