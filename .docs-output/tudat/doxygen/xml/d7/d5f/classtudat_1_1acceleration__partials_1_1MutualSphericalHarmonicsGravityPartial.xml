<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial" kind="class" language="C++" prot="public">
    <compoundname>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</compoundname>
    <basecompoundref refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial" prot="public" virt="non-virtual">tudat::acceleration_partials::AccelerationPartial</basecompoundref>
    <includes refid="d4/d8a/mutualSphericalHarmonicGravityPartial_8h" local="no">mutualSphericalHarmonicGravityPartial.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1adab02aadca2e15366886b9030d94b238" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d0/d11/classtudat_1_1acceleration__partials_1_1SphericalHarmonicsGravityPartial" kindref="compound">SphericalHarmonicsGravityPartial</ref> &gt;</type>
        <definition>std::shared_ptr&lt; SphericalHarmonicsGravityPartial &gt; tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::accelerationPartialOfShExpansionOfBodyExertingAcceleration_</definition>
        <argsstring></argsstring>
        <name>accelerationPartialOfShExpansionOfBodyExertingAcceleration_</name>
        <briefdescription>
<para>Partial for spherical harmonic acceleration due to body exerting acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="246" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1ac5b396dfd66ac860576883e4ead41b67" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d0/d11/classtudat_1_1acceleration__partials_1_1SphericalHarmonicsGravityPartial" kindref="compound">SphericalHarmonicsGravityPartial</ref> &gt;</type>
        <definition>std::shared_ptr&lt; SphericalHarmonicsGravityPartial &gt; tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::accelerationPartialOfShExpansionOfBodyUndergoingAcceleration_</definition>
        <argsstring></argsstring>
        <name>accelerationPartialOfShExpansionOfBodyUndergoingAcceleration_</name>
        <briefdescription>
<para>Partial for spherical harmonic acceleration due to body undergoing acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="249" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a2526aa44cbc1aebc23c78e30ea36ef76" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::accelerationUsesMutualAttraction_</definition>
        <argsstring></argsstring>
        <name>accelerationUsesMutualAttraction_</name>
        <briefdescription>
<para>Boolean denoting whether the mutual point mass attraction between the bodies is taken into account. </para>
        </briefdescription>
        <detaileddescription>
<para>Boolean denoting whether the mutual point mass attraction between the bodies is taken into account, as is the case when integrting in a (non-rotating) frame centered on the body exerting the acceleration, in which case the gravitational acceleration of the body undergoing the acceleration on that exerting the acceleration must be taken into account as an inertial effect. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="258" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1aadc9722e2713acfdbce323c9368f1ddd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::MutualSphericalHarmonicsGravityPartial</definition>
        <argsstring>(const std::shared_ptr&lt; SphericalHarmonicsGravityPartial &gt; accelerationPartialOfShExpansionOfBodyExertingAcceleration, const std::shared_ptr&lt; SphericalHarmonicsGravityPartial &gt; accelerationPartialOfShExpansionOfBodyUndergoingAcceleration, const std::string &amp;acceleratedBody, const std::string &amp;acceleratingBody, const bool accelerationUsesMutualAttraction)</argsstring>
        <name>MutualSphericalHarmonicsGravityPartial</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/d11/classtudat_1_1acceleration__partials_1_1SphericalHarmonicsGravityPartial" kindref="compound">SphericalHarmonicsGravityPartial</ref> &gt;</type>
          <declname>accelerationPartialOfShExpansionOfBodyExertingAcceleration</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/d11/classtudat_1_1acceleration__partials_1_1SphericalHarmonicsGravityPartial" kindref="compound">SphericalHarmonicsGravityPartial</ref> &gt;</type>
          <declname>accelerationPartialOfShExpansionOfBodyUndergoingAcceleration</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>acceleratedBody</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>acceleratingBody</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>accelerationUsesMutualAttraction</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor from partial objects of the two spherical harmonic gravity accelerations that nuild up the mutual acceleration. Note that the C_{00} coefficient for one of the bodies must be 0, and that their gravitational parameters must be equal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>accelerationPartialOfShExpansionOfBodyExertingAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial for spherical harmonic acceleration due to body exerting acceleration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accelerationPartialOfShExpansionOfBodyUndergoingAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial for spherical harmonic acceleration due to body undergoing acceleration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleratedBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body undergoing acceleration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleratingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body exerting acceleration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accelerationUsesMutualAttraction</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether point mass attraction from body undergoing acceleration on body exerting acceleration is included (i.e. whether gravitational parameter is the property of the body exerting the acceleration, if variable is false, or the sum of the gravitational parameters, if the variable is true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="50" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="50" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1afdca0d9f4392fdaa4272985d9940f7b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::~MutualSphericalHarmonicsGravityPartial</definition>
        <argsstring>()</argsstring>
        <name>~MutualSphericalHarmonicsGravityPartial</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="64" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a25ef9232475bfcac1b4e1506268f183e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::wrtPositionOfAcceleratedBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAcceleratedBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a629ee1ab826d64e6493d1dbf0fe7586b">wrtPositionOfAcceleratedBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration and adding it to the existing partial block Update( ) function must have been called during current time step before calling this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of body undergoing acceleration where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="77" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="77" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a85fe5efe5c87f5f948669a1437b79c04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::wrtPositionOfAcceleratingBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAcceleratingBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a779c9c208d2054d8425178f4ea8f6021">wrtPositionOfAcceleratingBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body exerting acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body exerting acceleration and adding it to the existing partial block. The <ref refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1abff1814094093bf2104e730d1f533cb3" kindref="member">update( )</ref> function must have been called during current time step before calling this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of body exerting acceleration where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="98" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="98" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a1133ebd3e79f1a58fdf93abc6db4f84f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::wrtNonTranslationalStateOfAdditionalBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const std::pair&lt; std::string, std::string &gt; &amp;stateReferencePoint, const propagators::IntegratedStateType integratedStateType, const bool addContribution)</argsstring>
        <name>wrtNonTranslationalStateOfAdditionalBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a781bc99dab9ab8dd805c63edf4e0d8f5">wrtNonTranslationalStateOfAdditionalBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
          <declname>stateReferencePoint</declname>
        </param>
        <param>
          <type>const propagators::IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. a non-translational integrated state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. a non-translational integrated state and adding it to the existing partial block. Function calls constituent spherical harmonic model functions <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference point id of propagated state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of propagated state for which partial is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="117" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="117" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1ad9eac4e9f3b342b6bd3c7fe6031dc37f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::isStateDerivativeDependentOnIntegratedAdditionalStateTypes</definition>
        <argsstring>(const std::pair&lt; std::string, std::string &gt; &amp;stateReferencePoint, const propagators::IntegratedStateType integratedStateType)</argsstring>
        <name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a94b95390a37109627270bd8dfbca5342">isStateDerivativeDependentOnIntegratedAdditionalStateTypes</reimplements>
        <param>
          <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
          <declname>stateReferencePoint</declname>
        </param>
        <param>
          <type>const propagators::IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <briefdescription>
<para>Function for determining if the acceleration is dependent on a non-translational integrated state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for determining if the acceleration is dependent on a non-translational integrated state. No dependency is implemented, but a warning is provided if partial w.r.t. mass of body exerting acceleration (and undergoing acceleration if mutual attraction is used) is requested. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference point id of propagated state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of propagated state for which dependency is to be determined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if dependency exists (non-zero partial), false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="140" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="140" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a6b140963d7564525e00fee292c75f59b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt; tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; double &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a69a7807aefb5f8d5972718d36a96635f">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; double &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a double parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a double parameter. Function returns empty function and zero size indicator for parameters with no dependency for current acceleration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial (0 for no dependency, 1 otherwise). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="164" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.cpp" bodystart="20" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a2d44ec5d917aaaae8b63fe37b318e66e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt; tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::VectorXd &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a849b14fede905e4e26ee2e752fbc95cc">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::VectorXd &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. Function returns empty function and zero size indicator for parameters with no dependency for current acceleration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial (0 for no dependency). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="174" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a820915a26bf3bcd5256da139c754073b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::wrtGravitationalParameter</definition>
        <argsstring>(Eigen::MatrixXd &amp;partialMatrix)</argsstring>
        <name>wrtGravitationalParameter</name>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>partialMatrix</declname>
        </param>
        <briefdescription>
<para>Function to calculate the partial wrt the gravitational parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the partial wrt the gravitational parameter of the central body. Note that in the case of mutual attraction (see SphericalHarmonicsGravitationalAccelerationModel), the partial wrt the gravitational parameter of the body exerting acceleration is equal to the partial wrt to the body undergoing the acceleration, which is zero otherwise. <simplesect kind="return"><para>Partial wrt the gravitational parameter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="186" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="186" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1abff1814094093bf2104e730d1f533cb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::update</definition>
        <argsstring>(const double currentTime)</argsstring>
        <name>update</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6801a8f31cc0fcdb9679c2db6be3b157">update</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Function for updating the partial object to current state and time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for updating the partial object to current state and time. Calculates the variables that are used for the calculation of multple partials, to prevent multiple calculations of same function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to which object is to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="200" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="200" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a7c2d48e799cee6d669b4342c1e215faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::setParameterPartialUpdateFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; double &gt; &gt; parameter)</argsstring>
        <name>setParameterPartialUpdateFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a481fc771c0a87996bc469b34ead49db9">setParameterPartialUpdateFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; double &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function to set a dependency of this partial object w.r.t. a given double parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set a dependency of this partial object w.r.t. a given double parameter. If a dependency exists, the given partial is recomputed on every call of updateParameterPartials. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial w.r.t. which dependency is to be checked and set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size (number of columns) of parameter partial. Zero if no dependency, 1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="216" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.cpp" bodystart="69" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a0951e63ab3dd4f252ef62a61f74fcb36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::setParameterPartialUpdateFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::VectorXd &gt; &gt; parameter)</argsstring>
        <name>setParameterPartialUpdateFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a646f021c7c884446d482b9b0ab1e14f4">setParameterPartialUpdateFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::VectorXd &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function to set a dependency of this partial object w.r.t. a given vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set a dependency of this partial object w.r.t. a given vector parameter. If a dependency exists, the given partial is recomputed on every call of updateParameterPartials. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial w.r.t. which dependency is to be checked and set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size (number of columns) of parameter partial. Zero if no dependency, size of parameter otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="226" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.cpp" bodystart="123" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a2e3c904dd2ba9be3349111899991c3e4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::resetTimeOfMemberObjects</definition>
        <argsstring>()</argsstring>
        <name>resetTimeOfMemberObjects</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aa0245f5f6b58423905b64709dac39a4c">resetTimeOfMemberObjects</reimplements>
        <briefdescription>
<para>Function to reset the constituent <ref refid="d0/d11/classtudat_1_1acceleration__partials_1_1SphericalHarmonicsGravityPartial" kindref="compound">SphericalHarmonicsGravityPartial</ref> objects to the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="232" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a49274238763d4dc15d5acdd7ea656d09" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial::updateParameterPartialsOfMemberObjects</definition>
        <argsstring>()</argsstring>
        <name>updateParameterPartialsOfMemberObjects</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a53491f7d5c94bd64b71c5190b9793a64">updateParameterPartialsOfMemberObjects</reimplements>
        <briefdescription>
<para>Function to update the parameter partials of the constituent <ref refid="d0/d11/classtudat_1_1acceleration__partials_1_1SphericalHarmonicsGravityPartial" kindref="compound">SphericalHarmonicsGravityPartial</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="239" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="239" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for calculating partial derivatives of a mutual spherical harmonic gravitational acceleration. </para>
    </briefdescription>
    <detaileddescription>
<para>Class for calculating partial derivatives of a mutual spherical harmonic gravitational acceleration, as calculated by the MutualSphericalHarmonicsGravitationalAccelerationModel class. It incorporate the extended body - point mass and point mass - extended body interactions. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::acceleration_partials::AccelerationPartial</label>
        <link refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</label>
        <link refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::acceleration_partials::AccelerationPartial</label>
        <link refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>acceleratedBody_</edgelabel>
          <edgelabel>acceleratingBody_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
        <childnode refid="4" relation="usage">
          <edgelabel>isCurrentDoubleParameterPartialSetIterator_</edgelabel>
          <edgelabel>isCurrentVectorParameterPartialSetIterator_</edgelabel>
          <edgelabel>parameterDoublePartialFunctionIterator_</edgelabel>
          <edgelabel>parameterVectorPartialFunctionIterator_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</label>
        <link refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" line="31" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/mutualSphericalHarmonicGravityPartial.h" bodystart="32" bodyend="260"/>
    <listofallmembers>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a655662aa6427373647cc9c26327e9565" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>acceleratedBody_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1aa0cb4d885b7833a39db39212a797ebd2" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>acceleratingBody_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ad4f4594c6e13138a1895dd008a14bf7e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>AccelerationPartial</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1adab02aadca2e15366886b9030d94b238" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>accelerationPartialOfShExpansionOfBodyExertingAcceleration_</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1ac5b396dfd66ac860576883e4ead41b67" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>accelerationPartialOfShExpansionOfBodyUndergoingAcceleration_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aacaaf221e1d39de40b6d9e3b881b9e42" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>accelerationSize_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a32cc6c58e4aa187b2110b4c6c7d4ccf4" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>accelerationType_</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a2526aa44cbc1aebc23c78e30ea36ef76" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>accelerationUsesMutualAttraction_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6699f3159f79975406d3fcc1f9002d1b" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>currentDoubleParameterPartials_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1abbca0ac294a29b7d1efc16a68d7c4582" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>currentTime_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a1091be37858cb2fbef57b803e944ac60" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>currentVectorParameterPartials_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a0bf7d418855165be4d40b82cfbeb115c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ac74a861f66f3362524aec1f0266513cf" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a6b6e323de35eaeb1292e4bfb410da7b1" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getAccelerationType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ac31393221aeef20ea4ee5d7d0ad59aba" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getCurrentDoubleParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adf72962ebc3a9a2008170009c26f553c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1acdfcbf63330d5b2b04fbaeb3787c8f68" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a2ba60d5dd1c131412a8f1aae8dd47a21" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getCurrentVectorParameterPartial</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a1b40573f9d0a7ad203e379327f13757e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getDerivativeFunctionWrtStateOfIntegratedBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a01893338e6faedd93cc0410bb692ce12" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getIntegratedStateType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adbe24dfd4085ec6343ccf18478b52bc0" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getIntegrationReferencePoint</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a6b140963d7564525e00fee292c75f59b" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a2d44ec5d917aaaae8b63fe37b318e66e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aad4f9e664da456462d4cb8b764679f1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>integratedStateType_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a0c30598298c59647e997203dc0ad664c" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>integrationReferencePoint_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab6d26ee307ebc4bb8f2cdca9f53e5097" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isAccelerationPartialWrtAdditionalBodyNonnullptr</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ad91136949f633458e8b970a5baacb9ce" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isCurrentDoubleParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aebd9e9721d7194fea38a286e94391d97" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isCurrentDoubleParameterPartialSetIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a90cb1a317764b060601778e2a515d305" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isCurrentVectorParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adc2943bcf127c42d392e57e574b0fa1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isCurrentVectorParameterPartialSetIterator_</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1ad9eac4e9f3b342b6bd3c7fe6031dc37f" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab05fd603c6228f4639e6f00ac4f9527c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>isStateDerivativeDependentOnIntegratedState</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1aadc9722e2713acfdbce323c9368f1ddd" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>MutualSphericalHarmonicsGravityPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a300a3a9234fd8eb9fd4f5d50778a4321" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>parameterDoublePartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3e7c12925372ee2844f8f76d2dae4a77" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>parameterDoublePartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae86be0f3c3a487ce1706e0829caca26e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>parameterVectorPartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a799da4695ca3bea29aaed8b761c9c3b3" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>parameterVectorPartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7b26a08bb4990220a7d2f40f3681274a" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>resetCurrentParameterValues</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3654d540045886559b6592dc4f30bab8" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>resetTime</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a2e3c904dd2ba9be3349111899991c3e4" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>resetTimeOfMemberObjects</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a7c2d48e799cee6d669b4342c1e215faa" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a0951e63ab3dd4f252ef62a61f74fcb36" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a4827d172b38b466f65f4da68500f53ea" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>StateDerivativePartial</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1abff1814094093bf2104e730d1f533cb3" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>update</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7a6f8bf919e2a0c16bc254738123b5b4" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>updateParameterPartials</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a49274238763d4dc15d5acdd7ea656d09" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>updateParameterPartialsOfMemberObjects</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a820915a26bf3bcd5256da139c754073b" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtGravitationalParameter</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a1133ebd3e79f1a58fdf93abc6db4f84f" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtNonTranslationalStateOfAdditionalBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a17003fa377113426b3e556a78f147941" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtParameter</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae12101f97027e73084d3d80dbc7059b3" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtParameter</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a25ef9232475bfcac1b4e1506268f183e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtPositionOfAcceleratedBody</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1a85fe5efe5c87f5f948669a1437b79c04" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtPositionOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab222ba1108201aa02e916c64ce82d599" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtPositionOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a0576a63608bc8bee1da8bf2aea0ea7b6" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtStateOfAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a8bfba67b7f9e9a3d6021b2b1759fc33e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtStateOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a8e21b7ff67f97af2e7e2a963cd0da3b2" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtStateOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ad3bb8ec281acf660baed8eb5127fcf5d" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtVelocityOfAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab411157f1ab0d7b8bdcb771024b4f5a9" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtVelocityOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a1566f99b2cfd42d523c06ee6c1559435" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>wrtVelocityOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab373fff70206231b312a988e59902038" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>~AccelerationPartial</name></member>
      <member refid="d7/d5f/classtudat_1_1acceleration__partials_1_1MutualSphericalHarmonicsGravityPartial_1afdca0d9f4392fdaa4272985d9940f7b7" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>~MutualSphericalHarmonicsGravityPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a05f085a890b27518ca24446ac22bdb3e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::MutualSphericalHarmonicsGravityPartial</scope><name>~StateDerivativePartial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
