<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d4/d49/namespacetudat_1_1relativity" kind="namespace" language="C++">
    <compoundname>tudat::relativity</compoundname>
    <innerclass refid="dd/de7/classtudat_1_1relativity_1_1PPNParameterSet" prot="public">tudat::relativity::PPNParameterSet</innerclass>
    <innerclass refid="d1/d68/classtudat_1_1relativity_1_1RelativisticAccelerationCorrection" prot="public">tudat::relativity::RelativisticAccelerationCorrection</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d2/dbf/metric_8h_1ad192e40cd619dc125ca1796948c0cab1" prot="public" static="yes" mutable="no">
        <type>const Eigen::Matrix4d</type>
        <definition>const Eigen::Matrix4d tudat::relativity::minkowskiMetric</definition>
        <argsstring></argsstring>
        <name>minkowskiMetric</name>
        <initializer>= ( Eigen::Matrix4d( ) &lt;&lt;
                                                 -1.0, 0.0, 0.0, 0.0,
                                                 0.0, 1.0, 0.0, 0.0,
                                                 0.0, 0.0, 1.0, 0.0,
                                                 0.0, 0.0, 0.0, 1.0 ).finished( )</initializer>
        <briefdescription>
<para>Minkowski metric (-1,1,1,1 signature) represented as a Matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/metric.h" line="26" column="30" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/metric.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dbf/metric_8h_1a10e821d59c84436beb159f0b37c461ab" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="dd/de7/classtudat_1_1relativity_1_1PPNParameterSet" kindref="compound">PPNParameterSet</ref> &gt;</type>
        <definition>std::shared_ptr&lt; PPNParameterSet &gt; tudat::relativity::ppnParameterSet</definition>
        <argsstring></argsstring>
        <name>ppnParameterSet</name>
        <initializer>= std::make_shared&lt; <ref refid="dd/de7/classtudat_1_1relativity_1_1PPNParameterSet" kindref="compound">PPNParameterSet</ref> &gt;( 1.0, 1.0 )</initializer>
        <briefdescription>
<para>Global PPN parameter set, initialized upon compilation (with values equal to GR). </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize global PPN parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/metric.cpp" line="22" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/metric.cpp" bodystart="22" bodyend="-1" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/metric.h" declline="101" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dbf/metric_8h_1a900f8a306b71933bef6ae5b5e135a2e9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::relativity::equivalencePrincipleLpiViolationParameter</definition>
        <argsstring></argsstring>
        <name>equivalencePrincipleLpiViolationParameter</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
<para>Global parameter denoting EP violation in proper time rate, initialized to GR value of 0 upon compilation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/metric.cpp" line="24" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/metric.cpp" bodystart="24" bodyend="-1" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/metric.h" declline="104" declcolumn="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1a120c54d46fc74dd9e613c67d9950ff83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::relativity::calculateRelativisticAccelerationCorrectionsCommonterm</definition>
        <argsstring>(const double centralBodyGravitationalParameter, const double relativeDistance)</argsstring>
        <name>calculateRelativisticAccelerationCorrectionsCommonterm</name>
        <param>
          <type>const double</type>
          <declname>centralBodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>relativeDistance</declname>
        </param>
        <briefdescription>
<para>Function to compute a term common to several relativistic acceleration terms. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute a term common to several relativistic acceleration terms, defined by mu / (c^2 * r^3), with mu the gravitational parameter of the central body, c the speed of light and r the distance between the bodies <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centralBodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of body exerting acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance between bodies undergoing and exerting acceleration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Common term in relativistic accelerations. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="22" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="22" bodyend="29" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="35" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1a2ead1de146ae9e86715c062dd381231f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::relativity::calculateScharzschildGravitationalAccelerationCorrection</definition>
        <argsstring>(const double centralBodyGravitationalParameter, const Eigen::Vector3d &amp;relativePosition, const Eigen::Vector3d &amp;relativeVelocity, const double relativeDistance, const double commonCorrectionTerm, const double ppnParameterGamma=1.0, const double ppnParameterBeta=1.0)</argsstring>
        <name>calculateScharzschildGravitationalAccelerationCorrection</name>
        <param>
          <type>const double</type>
          <declname>centralBodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>relativePosition</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>relativeVelocity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>relativeDistance</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>commonCorrectionTerm</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterBeta</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to compute the Schwarzschild term of the relativistic acceleration correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the Schwarzschild term of the relativistic acceleration correction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centralBodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of body exerting acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativePosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Velocity of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance between bodies undergoing and exerting acceleration (norm of relativePosition) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commonCorrectionTerm</parametername>
</parameternamelist>
<parameterdescription>
<para>Common term in relativistic accelerations, as computed by calculateRelativisticAccelerationCorrectionsCommonterm function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter gamma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterBeta</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter beta </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Schwarzschild term of the relativistic acceleration correction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="32" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="32" bodyend="46" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="52" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1a8c00c35065083a4944a6ac311aea8300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::relativity::calculateScharzschildGravitationalAccelerationCorrection</definition>
        <argsstring>(const double centralBodyGravitationalParameter, const Eigen::Vector6d &amp;relativeState, const double ppnParameterGamma=1.0, const double ppnParameterBeta=1.0)</argsstring>
        <name>calculateScharzschildGravitationalAccelerationCorrection</name>
        <param>
          <type>const double</type>
          <declname>centralBodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>relativeState</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterBeta</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to compute the Schwarzschild term of the relativistic acceleration correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the Schwarzschild term of the relativistic acceleration correction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centralBodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of body exerting acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeState</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian state of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter gamma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterBeta</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter beta </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Schwarzschild term of the relativistic acceleration correction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="49" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="49" bodyend="61" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="70" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1a1a1f1f0f82f6815a3bba70c0a199757e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::relativity::calculateLenseThirringCorrectionAcceleration</definition>
        <argsstring>(const Eigen::Vector3d &amp;relativePosition, const Eigen::Vector3d &amp;relativeVelocity, const double relativeDistance, const double commonCorrectionTerm, const Eigen::Vector3d &amp;centralBodyAngularMomentum, const double ppnParameterGamma=1.0)</argsstring>
        <name>calculateLenseThirringCorrectionAcceleration</name>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>relativePosition</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>relativeVelocity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>relativeDistance</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>commonCorrectionTerm</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>centralBodyAngularMomentum</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to compute the Lense-Thirring term of the relativistic acceleration correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the Lense-Thirring term of the relativistic acceleration correction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>relativePosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Velocity of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance between bodies undergoing and exerting acceleration (norm of relativePosition) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commonCorrectionTerm</parametername>
</parameternamelist>
<parameterdescription>
<para>Common term in relativistic accelerations, as computed by calculateRelativisticAccelerationCorrectionsCommonterm function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyAngularMomentum</parametername>
</parameternamelist>
<parameterdescription>
<para>Angular momentum vector of central body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter gamma </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lense-Thirring term of the relativistic acceleration correction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="64" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="64" bodyend="78" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="88" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1a72baa5b4225171604e2adeb0eca3fabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::relativity::calculateLenseThirringCorrectionAcceleration</definition>
        <argsstring>(const double centralBodyGravitationalParameter, const Eigen::Vector6d &amp;relativeState, const Eigen::Vector3d &amp;centralBodyAngularMomentum, const double ppnParameterGamma=1.0)</argsstring>
        <name>calculateLenseThirringCorrectionAcceleration</name>
        <param>
          <type>const double</type>
          <declname>centralBodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>relativeState</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>centralBodyAngularMomentum</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to compute the Lense-Thirring term of the relativistic acceleration correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the Lense-Thirring term of the relativistic acceleration correction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>centralBodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of body exerting acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relativeState</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian state of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyAngularMomentum</parametername>
</parameternamelist>
<parameterdescription>
<para>Angular momentum vector of central body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter gamma </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Schwarzschild term of the relativistic acceleration correction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="81" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="81" bodyend="93" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="105" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1a667a6e5b0597f37e6eea79d3d321f751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::relativity::calculateDeSitterCorrectionAcceleration</definition>
        <argsstring>(const Eigen::Vector3d &amp;orbiterRelativeVelocity, const Eigen::Vector3d &amp;orbitedBodyPositionWrtLargerBody, const Eigen::Vector3d &amp;orbitedBodyVelocityWrtLargerBody, const double commonCorrectionTermOfLargerBody, const double ppnParameterGamma=1.0)</argsstring>
        <name>calculateDeSitterCorrectionAcceleration</name>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>orbiterRelativeVelocity</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>orbitedBodyPositionWrtLargerBody</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>orbitedBodyVelocityWrtLargerBody</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>commonCorrectionTermOfLargerBody</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to compute the de Sitter term of the relativistic acceleration correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the de Sitter term of the relativistic acceleration correction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orbiterRelativeVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Velocity of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orbitedBodyPositionWrtLargerBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of body undergoing acceleration w.r.t. its central body. For an acceleration on a satellite orbiting the Earth, this would be the position of the Earth w.r.t. the Sun. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orbitedBodyVelocityWrtLargerBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Velocity of body undergoing acceleration w.r.t. its central body. For an acceleration on a satellite orbiting the Earth, this would be the velocity of the Earth w.r.t. the Sun. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commonCorrectionTermOfLargerBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Common term in relativistic accelerations, with properties of e.g. Earth w.r.t the Sun for an Earth-orbitign satellite, as computed by calculateRelativisticAccelerationCorrectionsCommonterm function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter gamma </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>De Sitter term of the relativistic acceleration correction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="96" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="96" bodyend="105" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="124" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d4/d42/relativisticAccelerationCorrection_8h_1aab14531be79c6c7cc7aca85aa5048ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::relativity::calculateDeSitterCorrectionAcceleration</definition>
        <argsstring>(const double largerBodyGravitationalParameter, const Eigen::Vector6d &amp;orbiterRelativeState, const Eigen::Vector6d &amp;orbitedBodyStateWrtLargerBody, const double ppnParameterGamma=1.0)</argsstring>
        <name>calculateDeSitterCorrectionAcceleration</name>
        <param>
          <type>const double</type>
          <declname>largerBodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>orbiterRelativeState</declname>
        </param>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>orbitedBodyStateWrtLargerBody</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to compute the de Sitter term of the relativistic acceleration correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the de Sitter term of the relativistic acceleration correction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>largerBodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of body primarilly responsible for the motion of the body exerting the acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orbiterRelativeState</parametername>
</parameternamelist>
<parameterdescription>
<para>State of body undergoing, w.r.t. body exerting, acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orbitedBodyStateWrtLargerBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian state of body undergoing acceleration w.r.t. its central body. For an acceleration on a satellite orbiting the Earth, this would be the Cartesian state of the Earth w.r.t. the Sun. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>PPN parameter gamma </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>De Sitter term of the relativistic acceleration correction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" line="108" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticAccelerationCorrection.cpp" bodystart="108" bodyend="122" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticAccelerationCorrection.h" declline="142" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/relativisticLightTimeCorrection_8h_1ae65e910c875622738f1ffa6af21f25b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::relativity::calculateFirstOrderLightTimeCorrectionFromCentralBody</definition>
        <argsstring>(const double bodyGravitationalParameter, const Eigen::Vector3d &amp;transmitterPosition, const Eigen::Vector3d &amp;receiverPosition, const Eigen::Vector3d &amp;centralBodyPosition, const double ppnParameterGamma=1.0)</argsstring>
        <name>calculateFirstOrderLightTimeCorrectionFromCentralBody</name>
        <param>
          <type>const double</type>
          <declname>bodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>transmitterPosition</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>receiverPosition</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>centralBodyPosition</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to calculate first order relativistic light time correction due to a gravitating point mass. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate first order relativistic light time correction due to a gravitating point mass, according to Eq. (11.17) of 2010 IERS conventions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of gravitating body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmitterPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of origin of electromagnetic signal (at time of transmission). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiverPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of target of electromagentic signal (at time of reception) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of perturbing body (at certain time during signal propagation). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>Parametric post-Newtonian parameter gamma, a measure for the space-time curvature due to a unit rest mass (1.0 in GR) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Light time correction (in seconds) due to the gravitating point mass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticLightTimeCorrection.cpp" line="20" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticLightTimeCorrection.cpp" bodystart="20" bodyend="36" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticLightTimeCorrection.h" declline="41" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d8/d18/relativisticLightTimeCorrection_8h_1acd95bca407ea5c7e1356ecf4cc04702e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix&lt; double, 1, 3 &gt;</type>
        <definition>Eigen::Matrix&lt; double, 1, 3 &gt; tudat::relativity::calculateFirstOrderCentralBodyLightTimeCorrectionGradient</definition>
        <argsstring>(const double bodyGravitationalParameter, const Eigen::Vector3d &amp;transmitterPosition, const Eigen::Vector3d &amp;receiverPosition, const Eigen::Vector3d &amp;centralBodyPosition, const bool evaluateGradientAtReceiver, const double ppnParameterGamma=1.0)</argsstring>
        <name>calculateFirstOrderCentralBodyLightTimeCorrectionGradient</name>
        <param>
          <type>const double</type>
          <declname>bodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>transmitterPosition</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>receiverPosition</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>centralBodyPosition</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>evaluateGradientAtReceiver</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ppnParameterGamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Function to calculate gradient of first order relativistic light time correction due to a gravitating point mass. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate gradient of first order relativistic light time correction due to a gravitating point mass. Correction is according to Eq. (11.17) of 2010 IERS conventions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Gravitational parameter of gravitating body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmitterPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of origin of electromagnetic signal (at time of transmission). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiverPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of target of electromagentic signal (at time of reception) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of perturbing body (at certain time during signal propagation). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppnParameterGamma</parametername>
</parameternamelist>
<parameterdescription>
<para>Parametric post-Newtonian parameter gamma, a measure for the space-time curvature due to a unit rest mass (1.0 in GR) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaluateGradientAtReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether to compute gradient at receiver or transmitter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Light time correction (in seconds) due to the gravitating point mass. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticLightTimeCorrection.cpp" line="39" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticLightTimeCorrection.cpp" bodystart="39" bodyend="68" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticLightTimeCorrection.h" declline="60" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="dc/d16/relativisticTimeConversion_8h_1ad1bda5cd5f2ae7b0ca96f08da94e086f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::relativity::calculateFirstCentralBodyProperTimeRateDifference</definition>
        <argsstring>(const double relativeSpeed, const double gravitationalScalarPotential, const double equivalencePrincipleLpiViolationParameter=0.0)</argsstring>
        <name>calculateFirstCentralBodyProperTimeRateDifference</name>
        <param>
          <type>const double</type>
          <declname>relativeSpeed</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>gravitationalScalarPotential</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>equivalencePrincipleLpiViolationParameter</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Function to compute proper-time rate w.r.t. coordinate time, minus 1.0, from a speed and scalar potential. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute proper-time rate w.r.t. coordinate time, minus 1.0, from a speed and scalar potential, allowing for the possibility of EP violation (nominally none) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>relativeSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>Speed of object for which proper time is to be computed, w.r.t. frame of which coordinate time is used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gravitationalScalarPotential</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar potential at location of object for which proper time is to be computed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>equivalencePrincipleLpiViolationParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Violation parameter of equivalence principle (default to GR value of 0.0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Proper time rate minus one (d tau/dt - 1.0) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticTimeConversion.cpp" line="21" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticTimeConversion.cpp" bodystart="21" bodyend="27" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticTimeConversion.h" declline="32" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="dc/d16/relativisticTimeConversion_8h_1ab7eec0351a0459a82b63900781e12625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::relativity::calculateFirstCentralBodyProperTimeRateDifference</definition>
        <argsstring>(const Eigen::Vector6d relativeStateVector, const double centralBodyGravitationalParameter, const double equivalencePrincipleLpiViolationParameter=0.0)</argsstring>
        <name>calculateFirstCentralBodyProperTimeRateDifference</name>
        <param>
          <type>const Eigen::Vector6d</type>
          <declname>relativeStateVector</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>centralBodyGravitationalParameter</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>equivalencePrincipleLpiViolationParameter</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Function to compute proper-time rate w.r.t. coordinate time, minus 1.0, for a 1/c^2 potential from a static mass monopole. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute proper-time rate w.r.t. coordinate time, minus 1.0, from a speed and scalar potential.</para>
<para>Function to compute proper-time rate w.r.t. coordinate time, minus 1.0, for a 1/c^2 potential from a static mass monopole located at the origin of the reference frame of which the coordinate time is used., allowing for the possibility of EP violation (nominally none) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>relativeStateVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian state of point where proper time rate is to be computed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Newtonian gravitational potnetial of central body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>equivalencePrincipleLpiViolationParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Violation parameter of equivalence principle (default to GR value of 0.0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Proper time rate minus one (d tau/dt - 1.0) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticTimeConversion.cpp" line="30" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/relativity/relativisticTimeConversion.cpp" bodystart="30" bodyend="37" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/relativisticTimeConversion.h" declline="46" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/relativity/metric.h" line="21" column="1"/>
  </compounddef>
</doxygen>
