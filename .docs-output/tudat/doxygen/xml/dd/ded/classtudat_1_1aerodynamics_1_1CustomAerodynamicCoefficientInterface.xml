<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface" kind="class" language="C++" prot="public">
    <compoundname>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</compoundname>
    <basecompoundref refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface" prot="public" virt="non-virtual">tudat::aerodynamics::AerodynamicCoefficientInterface</basecompoundref>
    <includes refid="d9/d50/customAerodynamicCoefficientInterface_8h" local="no">customAerodynamicCoefficientInterface.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1ad589065823450def13ec7455c3a5270d" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector6d(const std::vector&lt; double &gt; &amp;) &gt;</type>
        <definition>std::function&lt; Eigen::Vector6d( const std::vector&lt; double &gt;&amp; ) &gt; tudat::aerodynamics::CustomAerodynamicCoefficientInterface::coefficientFunction_</definition>
        <argsstring></argsstring>
        <name>coefficientFunction_</name>
        <briefdescription>
<para>Function returning the concatenated aerodynamic force and moment coefficients as function of the set of independent variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="217" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a87b37db10d4edb5675651d32cddccdf9" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(const double) &gt;</type>
        <definition>std::function&lt; void( const double ) &gt; tudat::aerodynamics::CustomAerodynamicCoefficientInterface::timeUpdateFunction_</definition>
        <argsstring></argsstring>
        <name>timeUpdateFunction_</name>
        <initializer>=  nullptr</initializer>
        <briefdescription>
<para>Function that sets the coefficients for the current arc (in an external class/function) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="220" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a7876bbad88c12d05b48dcaf158927514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::CustomAerodynamicCoefficientInterface::CustomAerodynamicCoefficientInterface</definition>
        <argsstring>(const std::function&lt; Eigen::Vector3d(const std::vector&lt; double &gt; &amp;) &gt; forceCoefficientFunction, const std::function&lt; Eigen::Vector3d(const std::vector&lt; double &gt; &amp;) &gt; momentCoefficientFunction, const double referenceLength, const double referenceArea, const double lateralReferenceLength, const Eigen::Vector3d &amp;momentReferencePoint, const std::vector&lt; AerodynamicCoefficientsIndependentVariables &gt; independentVariableNames, const bool areCoefficientsInAerodynamicFrame=true, const bool areCoefficientsInNegativeAxisDirection=true)</argsstring>
        <name>CustomAerodynamicCoefficientInterface</name>
        <param>
          <type>const std::function&lt; Eigen::Vector3d(const std::vector&lt; double &gt; &amp;) &gt;</type>
          <declname>forceCoefficientFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; Eigen::Vector3d(const std::vector&lt; double &gt; &amp;) &gt;</type>
          <declname>momentCoefficientFunction</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>referenceLength</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>referenceArea</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lateralReferenceLength</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>momentReferencePoint</declname>
        </param>
        <param>
          <type>const std::vector&lt; AerodynamicCoefficientsIndependentVariables &gt;</type>
          <declname>independentVariableNames</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>areCoefficientsInAerodynamicFrame</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>areCoefficientsInNegativeAxisDirection</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forceCoefficientFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the aerodynamic force coefficients as function of the set of independent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>momentCoefficientFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the aerodynamic force coefficients as function of the set of independent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference length with which aerodynamic moments (about x- and z- axes) are non-dimensionalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference area with which aerodynamic forces and moments are non-dimensionalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lateralReferenceLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference length with which aerodynamic moments (about y-axis) is non-dimensionalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>momentReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Point w.r.t. which aerodynamic moment is calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariableNames</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector with identifiers for the physical meaning of each independent variable of the aerodynamic coefficients. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>areCoefficientsInAerodynamicFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to define whether the aerodynamic coefficients are defined in the aerodynamic frame (drag, side, lift force) or in the body frame (typically denoted as Cx, Cy, Cz) (default true). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>areCoefficientsInNegativeAxisDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to define whether the aerodynamic coefficients are positiver along tyhe positive axes of the body or aerodynamic frame (see areCoefficientsInAerodynamicFrame). Note that for (drag, side, lift force), the coefficients are typically defined in negative direction (default true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="70" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="70" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a55dea6bb770a7a51b925bf0aa44317f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::CustomAerodynamicCoefficientInterface::CustomAerodynamicCoefficientInterface</definition>
        <argsstring>(const std::function&lt; Eigen::Vector6d(const std::vector&lt; double &gt; &amp;) &gt; coefficientFunction, const double referenceLength, const double referenceArea, const double lateralReferenceLength, const Eigen::Vector3d &amp;momentReferencePoint, const std::vector&lt; AerodynamicCoefficientsIndependentVariables &gt; independentVariableNames, const bool areCoefficientsInAerodynamicFrame=true, const bool areCoefficientsInNegativeAxisDirection=true)</argsstring>
        <name>CustomAerodynamicCoefficientInterface</name>
        <param>
          <type>const std::function&lt; Eigen::Vector6d(const std::vector&lt; double &gt; &amp;) &gt;</type>
          <declname>coefficientFunction</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>referenceLength</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>referenceArea</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lateralReferenceLength</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>momentReferencePoint</declname>
        </param>
        <param>
          <type>const std::vector&lt; AerodynamicCoefficientsIndependentVariables &gt;</type>
          <declname>independentVariableNames</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>areCoefficientsInAerodynamicFrame</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>areCoefficientsInNegativeAxisDirection</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficientFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the concatenated aerodynamic force and moment coefficients as function of the set of independent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference length with which aerodynamic moments (about x- and z- axes) are non-dimensionalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference area with which aerodynamic forces and moments are non-dimensionalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lateralReferenceLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference length with which aerodynamic moments (about y-axis) is non-dimensionalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>momentReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Point w.r.t. which aerodynamic moment is calculated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariableNames</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector with identifiers for the physical meaning of each independent variable of the aerodynamic coefficients. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>areCoefficientsInAerodynamicFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to define whether the aerodynamic coefficients are defined in the aerodynamic frame (drag, side, lift force) or in the body frame (typically denoted as Cx, Cy, Cz) (default true). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>areCoefficientsInNegativeAxisDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to define whether the aerodynamic coefficients are positiver along tyhe positive axes of the body or aerodynamic frame (see areCoefficientsInAerodynamicFrame). Note that for (drag, side, lift force), the coefficients are typically defined in negative direction (default true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="114" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="114" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a5e16bd11ab9a69d9d31c9c3c360042fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::aerodynamics::CustomAerodynamicCoefficientInterface::updateCurrentCoefficients</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;independentVariables, const double currentTime=TUDAT_NAN)</argsstring>
        <name>updateCurrentCoefficients</name>
        <reimplements refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a368494b2f082a82d39f83d1eb9ce103f">updateCurrentCoefficients</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>independentVariables</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <briefdescription>
<para>Compute the aerodynamic coefficients at current flight condition. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the aerodynamic coefficients at current flight conditions (independent variables). Input is a set of independent variables (doubles) which represent the variables from which the coefficients are calculated. The physical nature of these variables depends on the coefficientFunction_ variables. The size of the independent variable vector must be numberOfIndependentVariables_ <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>independentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Independent variables of force and moment coefficient determination implemented by derived class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to which coefficients are to be updated (used in the case of arc-wise constant coefficients). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="142" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="142" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a5149f2870beb0f51ca7ee1d0da411e17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::aerodynamics::CustomAerodynamicCoefficientInterface::resetConstantCoefficients</definition>
        <argsstring>(const Eigen::Vector6d &amp;constantCoefficients)</argsstring>
        <name>resetConstantCoefficients</name>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>constantCoefficients</declname>
        </param>
        <briefdescription>
<para>Function to reset the constant aerodynamic coefficients, only valid if coefficients are already constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to reset the constant aerodynamic coefficients, only valid if coefficients are already constant. Function checks if the numberOfIndependentVariables_ is equal to zero, and throws an error if it is not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>constantCoefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>New force and moment coefficients (in that order) expressed in the same frame as existing coefficients. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="173" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="173" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a84e8eb5196cb1e11d559a85c05835b5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector6d</type>
        <definition>Eigen::Vector6d tudat::aerodynamics::CustomAerodynamicCoefficientInterface::getConstantCoefficients</definition>
        <argsstring>()</argsstring>
        <name>getConstantCoefficients</name>
        <briefdescription>
<para>Function to retrieve constant aerodynamic coefficients, only valid if coefficients are already constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the constant aerodynamic coefficients, only valid if coefficients are already constant. Function checks if the numberOfIndependentVariables_ is equal to zero, and throws an error if it is not. <simplesect kind="return"><para>Force and moment coefficients (in that order) expressed in the same frame as existing coefficients. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="190" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1aeb416a9afa3e6d9aaa15975cfb39adfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::aerodynamics::CustomAerodynamicCoefficientInterface::setTimeDependentCoefficientClosure</definition>
        <argsstring>(std::function&lt; Eigen::Vector6d() &gt; coefficientFunction, std::function&lt; void(const double) &gt; timeUpdateFunction)</argsstring>
        <name>setTimeDependentCoefficientClosure</name>
        <param>
          <type>std::function&lt; Eigen::Vector6d() &gt;</type>
          <declname>coefficientFunction</declname>
        </param>
        <param>
          <type>std::function&lt; void(const double) &gt;</type>
          <declname>timeUpdateFunction</declname>
        </param>
        <briefdescription>
<para>Function to perform the closure for time-varying (arc-wise constant) coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to perform the closure for time-varying (arc-wise constant) coefficients <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficientFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function that returns the coefficients for the current arc </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeUpdateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function that sets the coefficients for the current arc (in an external class/function) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="206" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="206" bodyend="212"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Aerodynamic coefficient interface taking function pointers providing aerodynamics coefficients as a function of independent variables (doubles).</para>
<para>Aerodynamic coefficient interface taking function pointers providing aerodynamics coefficients as a function of independent variables (doubles). The origin of the coefficients or the nature of the independent variables is irrelevant for this class. A factory functios (createConstantCoefficientAerodynamicCoefficientInterface) is provided in the createFlightConditions file, which can be used to define constant coefficients. NOTE: Functionality of this class is tested in test_aerodynamic_coefficient_generator test suite. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</label>
        <link refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::AerodynamicCoefficientInterface</label>
        <link refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</label>
        <link refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::AerodynamicCoefficientInterface</label>
        <link refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" line="42" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customAerodynamicCoefficientInterface.h" bodystart="43" bodyend="222"/>
    <listofallmembers>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1afcf63dcf774ca65e91ce8449f3e22d74" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>AerodynamicCoefficientInterface</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a29e32be7cec1045dba10c7a60182ad05" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>areCoefficientsInAerodynamicFrame_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a6ede4ceff6ef3a4eb91e4061750e5c19" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>areCoefficientsInNegativeAxisDirection_</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1ad589065823450def13ec7455c3a5270d" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>coefficientFunction_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a904ec19864b2a25cd1db606bbb22aa81" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>controlSurfaceIncrementInterfaces_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1ab14a77a9c578c1153ec128fc927fc4f9" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>controlSurfaceNames_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1ac2e2b9a55f0269a611599a652a556c9a" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>currentForceCoefficients_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a421867bb3bd06711019c80621ac75473" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>currentMomentCoefficients_</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a7876bbad88c12d05b48dcaf158927514" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>CustomAerodynamicCoefficientInterface</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a55dea6bb770a7a51b925bf0aa44317f1" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>CustomAerodynamicCoefficientInterface</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1acc664214ae5fee886b3a2ffa22dce2d9" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getAreCoefficientsInAerodynamicFrame</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a55875655a4a678eaa5fdb80cb4827e9f" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getAreCoefficientsInNegativeAxisDirection</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a84e8eb5196cb1e11d559a85c05835b5f" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getConstantCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1ad5c005acfa80f3761f20850a855d1644" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getControlSurfaceIndependentVariableName</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a63f2ffc4d03a6902e0760f93b1931b5a" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getControlSurfaceIndependentVariables</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a69a2aa883a2fba8bc918dcd60a654eb9" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getControlSurfaceName</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a6b2eee400f93606c83e0429ab8b974d6" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getCurrentAerodynamicCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a1d482f3c4cba5a2354d12610319aa7af" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getCurrentForceCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a81b6c6f36bea4e10bdde1d67f95740d7" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getCurrentMomentCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a91798427fd03d66a696f97f9c01292c4" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getIndependentVariableName</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a605d78a84519402354ac1551e7eb2d0d" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getIndependentVariableNames</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1ac340c18b6cb008955c8dc426c31d6adb" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getLateralReferenceLength</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1ab940adb9ffb34d7910bdb11ca06143f6" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getMomentReferencePoint</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a1ca99957277b60ca79aaf4eb48e3f003" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getNumberOfControlSurfaceIndependentVariables</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1aeec44dc3a056968cb685dd3f0642bf5d" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getNumberOfControlSurfaces</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1af10cc21f485df4f2c877f827c7a38493" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getNumberOfIndependentVariables</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1aaf0325453208d06cfbf8aa7a854d6875" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getReferenceArea</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a8bf7126281dbe7017490e77768e23670" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getReferenceLength</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a116a427562ff47a5cfb717fc5931171b" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>getReferenceLengths</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a5e0570c4a1562fa17fde2fa5c5e2b3a8" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>independentVariableNames_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1addb200a9776750fdc60ae9d5f9291fc8" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>lateralReferenceLength_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a88e4085f5377db07dece01f46badc536" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>momentReferencePoint_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1ab8d9151ab40af2f5bce2cf0208020e1b" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>numberOfIndependentVariables_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1af4588066ab70f6866f5754016c7876c3" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>referenceArea_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a37ca00d965d756bbf54b727516a33a57" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>referenceLength_</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1af170e69f9c689cce254dbf9b7d0fb2ab" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>referenceLengths_</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a5149f2870beb0f51ca7ee1d0da411e17" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>resetConstantCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a5b6637fe09eee857978eae3ff94db959" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>setControlSurfaceIncrements</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1aeb416a9afa3e6d9aaa15975cfb39adfb" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>setTimeDependentCoefficientClosure</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a87b37db10d4edb5675651d32cddccdf9" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>timeUpdateFunction_</name></member>
      <member refid="dd/ded/classtudat_1_1aerodynamics_1_1CustomAerodynamicCoefficientInterface_1a5e16bd11ab9a69d9d31c9c3c360042fb" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>updateCurrentCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1a59727b07127b2e8ef0af43b3177a0808" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>updateCurrentControlSurfaceCoefficientsCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1aa32aa23f6d4e140130a44a74f60893dc" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>updateFullCurrentCoefficients</name></member>
      <member refid="de/dc2/classtudat_1_1aerodynamics_1_1AerodynamicCoefficientInterface_1aa1df9aca23300659cd752d9afa42efa4" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomAerodynamicCoefficientInterface</scope><name>~AerodynamicCoefficientInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
