<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial" kind="class" language="C++" prot="public">
    <compoundname>tudat::acceleration_partials::EmpiricalAccelerationPartial</compoundname>
    <basecompoundref refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial" prot="public" virt="non-virtual">tudat::acceleration_partials::AccelerationPartial</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1ae3a298c1f54c1e2e688d0d85c9e2d836" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="de/df3/classtudat_1_1basic__astrodynamics_1_1EmpiricalAcceleration" kindref="compound">basic_astrodynamics::EmpiricalAcceleration</ref> &gt;</type>
        <definition>std::shared_ptr&lt; basic_astrodynamics::EmpiricalAcceleration &gt; tudat::acceleration_partials::EmpiricalAccelerationPartial::empiricalAcceleration_</definition>
        <argsstring></argsstring>
        <name>empiricalAcceleration_</name>
        <briefdescription>
<para>Acceleration w.r.t. which partials are to be computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="216" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1aeff3805d6ff8f6d84c226b3ec4f042c6" prot="private" static="no" mutable="no">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::acceleration_partials::EmpiricalAccelerationPartial::currentPositionPartial_</definition>
        <argsstring></argsstring>
        <name>currentPositionPartial_</name>
        <briefdescription>
<para>Current partial of empirical acceleration w.r.t. position of body undergoing acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="219" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a928368a31c292d814f8e69f0c96c2786" prot="private" static="no" mutable="no">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::acceleration_partials::EmpiricalAccelerationPartial::currentVelocityPartial_</definition>
        <argsstring></argsstring>
        <name>currentVelocityPartial_</name>
        <briefdescription>
<para>Current partial of empirical acceleration w.r.t. velocity of body undergoing acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="222" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a99460ee5f5345463c4f91d086a1e1d0a" prot="private" static="no" mutable="no">
        <type>Eigen::Matrix&lt; double, 1, 6 &gt;</type>
        <definition>Eigen::Matrix&lt; double, 1, 6 &gt; tudat::acceleration_partials::EmpiricalAccelerationPartial::cartesianStateElementPerturbations</definition>
        <argsstring></argsstring>
        <name>cartesianStateElementPerturbations</name>
        <briefdescription>
<para>Perturbations to use on Cartesian state elements when computing partial of true anomaly w.r.t. state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="225" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a260e744dbc266056cf0f316162164a5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::acceleration_partials::EmpiricalAccelerationPartial::EmpiricalAccelerationPartial</definition>
        <argsstring>(std::shared_ptr&lt; basic_astrodynamics::EmpiricalAcceleration &gt; empiricalAcceleration, std::string acceleratedBody, std::string acceleratingBody)</argsstring>
        <name>EmpiricalAccelerationPartial</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="de/df3/classtudat_1_1basic__astrodynamics_1_1EmpiricalAcceleration" kindref="compound">basic_astrodynamics::EmpiricalAcceleration</ref> &gt;</type>
          <declname>empiricalAcceleration</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>acceleratedBody</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>acceleratingBody</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="47" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a562658f5b1897b49962ea04367bb7f7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtPositionOfAcceleratedBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAcceleratedBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a629ee1ab826d64e6493d1dbf0fe7586b">wrtPositionOfAcceleratedBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration and adding it to the existing partial block Update( ) function must have been called during current time step before calling this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of body undergoing acceleration where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="65" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a0a55d3f8c4af6ff8aba6236864dba22a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtPositionOfAcceleratingBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtPositionOfAcceleratingBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a779c9c208d2054d8425178f4ea8f6021">wrtPositionOfAcceleratingBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the position of body undergoing acceleration and adding it to the existing partial block. The <ref refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a935abdcf0f1f833f2481c8598fe36d57" kindref="member">update( )</ref> function must have been called during current time step before calling this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of body exerting acceleration where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="90" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1ac63f0c1979b302d4be0c365d2050e4b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtVelocityOfAcceleratedBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtVelocityOfAcceleratedBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ad3bb8ec281acf660baed8eb5127fcf5d">wrtVelocityOfAcceleratedBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body undergoing acceleration and adding it to the existing partial block Update( ) function must have been called during current time step before calling this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of body undergoing acceleration where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="114" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="114" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a0802e0ab5f9bbb2866a20aef969d0514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtVelocityOfAcceleratingBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtVelocityOfAcceleratingBody</name>
        <reimplements refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab411157f1ab0d7b8bdcb771024b4f5a9">wrtVelocityOfAcceleratingBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body undergoing acceleration.. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the acceleration w.r.t. the velocity of body undergoing acceleration and adding it to the existing partial block. The <ref refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a935abdcf0f1f833f2481c8598fe36d57" kindref="member">update( )</ref> function must have been called during current time step before calling this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of acceleration w.r.t. Cartesian position of body exerting acceleration where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="139" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="139" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a450c3f2be2a765c9f057ff93017e6167" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt; tudat::acceleration_partials::EmpiricalAccelerationPartial::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::VectorXd &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a849b14fede905e4e26ee2e752fbc95cc">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::VectorXd &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. Function returns empty function and zero size indicator for parameters with no dependency for current acceleration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="159" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.cpp" bodystart="79" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a935abdcf0f1f833f2481c8598fe36d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::update</definition>
        <argsstring>(const double currentTime=TUDAT_NAN)</argsstring>
        <name>update</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6801a8f31cc0fcdb9679c2db6be3b157">update</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <briefdescription>
<para>Function for updating common blocks of partial to current state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for updating common blocks of partial to current state. Position and velocity partials are computed and set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which partials are to be calculated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="167" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.cpp" bodystart="122" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1ad478262c51e7db5865d173ad954bc9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtArcWiseEmpiricalAccelerationCoefficient</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::ArcWiseEmpiricalAccelerationCoefficientsParameter &gt; parameter, Eigen::MatrixXd &amp;partialDerivativeMatrix)</argsstring>
        <name>wrtArcWiseEmpiricalAccelerationCoefficient</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/d48/classtudat_1_1estimatable__parameters_1_1ArcWiseEmpiricalAccelerationCoefficientsParameter" kindref="compound">estimatable_parameters::ArcWiseEmpiricalAccelerationCoefficientsParameter</ref> &gt;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>partialDerivativeMatrix</declname>
        </param>
        <briefdescription>
<para>Function to compute the partial w.r.t. arcwise empirical acceleration components. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the partial w.r.t. arcwise empirical acceleration components <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Object defining the properties of the arcwise components that are to be estimated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>partialDerivativeMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of partial derivatives of accelerations w.r.t. empirical accelerations (returned by reference) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="176" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.cpp" bodystart="189" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a8ebf1042df3af4c209aecf7bf3f25502" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtEmpiricalAccelerationCoefficient</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EmpiricalAccelerationCoefficientsParameter &gt; parameter, Eigen::MatrixXd &amp;partialDerivativeMatrix)</argsstring>
        <name>wrtEmpiricalAccelerationCoefficient</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d1/d3d/classtudat_1_1estimatable__parameters_1_1EmpiricalAccelerationCoefficientsParameter" kindref="compound">estimatable_parameters::EmpiricalAccelerationCoefficientsParameter</ref> &gt;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>partialDerivativeMatrix</declname>
        </param>
        <briefdescription>
<para>Function to compute the partial w.r.t. time-independent empirical acceleration components. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the partial w.r.t. time-independent empirical acceleration components <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Object defining the properties of the components that are to be estimated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>partialDerivativeMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of partial derivatives of accelerations w.r.t. empirical accelerations (returned by reference) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="187" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="187" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a894de2322ad9bcbef9a3c0ae25eb18d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::EmpiricalAccelerationPartial::wrtEmpiricalAccelerationCoefficientFromIndices</definition>
        <argsstring>(const int numberOfAccelerationComponents, const std::map&lt; basic_astrodynamics::EmpiricalAccelerationFunctionalShapes, std::vector&lt; int &gt; &gt; &amp;accelerationIndices, Eigen::MatrixXd &amp;partialDerivativeMatrix)</argsstring>
        <name>wrtEmpiricalAccelerationCoefficientFromIndices</name>
        <param>
          <type>const int</type>
          <declname>numberOfAccelerationComponents</declname>
        </param>
        <param>
          <type>const std::map&lt; basic_astrodynamics::EmpiricalAccelerationFunctionalShapes, std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>accelerationIndices</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>partialDerivativeMatrix</declname>
        </param>
        <briefdescription>
<para>Function to compute the partial w.r.t. time-independent empirical acceleration components. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the partial w.r.t. time-independent empirical acceleration components from list of components and functional shapes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfAccelerationComponents</parametername>
</parameternamelist>
<parameterdescription>
<para>Total number of empirical acceleration components w.r.t. which partials are to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accelerationIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Map denoting list of components of accelerations that are to be computed. Key: functional shape of empirical accelerations. Value: list of acceleration vaector entries that are to be used (0: radial (R), 1: along-track (S), 2: cross-track (W)). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>partialDerivativeMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of partial derivatives of accelerations w.r.t. empirical accelerations (returned by reference) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="207" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.cpp" bodystart="212" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::acceleration_partials::AccelerationPartial</label>
        <link refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::EmpiricalAccelerationPartial</label>
        <link refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::acceleration_partials::AccelerationPartial</label>
        <link refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>acceleratedBody_</edgelabel>
          <edgelabel>acceleratingBody_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
        <childnode refid="4" relation="usage">
          <edgelabel>isCurrentDoubleParameterPartialSetIterator_</edgelabel>
          <edgelabel>isCurrentVectorParameterPartialSetIterator_</edgelabel>
          <edgelabel>parameterDoublePartialFunctionIterator_</edgelabel>
          <edgelabel>parameterVectorPartialFunctionIterator_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::EmpiricalAccelerationPartial</label>
        <link refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" line="42" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/acceleration_partials/empiricalAccelerationPartial.h" bodystart="43" bodyend="227"/>
    <listofallmembers>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a655662aa6427373647cc9c26327e9565" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>acceleratedBody_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1aa0cb4d885b7833a39db39212a797ebd2" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>acceleratingBody_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ad4f4594c6e13138a1895dd008a14bf7e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>AccelerationPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aacaaf221e1d39de40b6d9e3b881b9e42" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>accelerationSize_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a32cc6c58e4aa187b2110b4c6c7d4ccf4" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>accelerationType_</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a99460ee5f5345463c4f91d086a1e1d0a" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>cartesianStateElementPerturbations</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6699f3159f79975406d3fcc1f9002d1b" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>currentDoubleParameterPartials_</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1aeff3805d6ff8f6d84c226b3ec4f042c6" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>currentPositionPartial_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1abbca0ac294a29b7d1efc16a68d7c4582" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>currentTime_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a1091be37858cb2fbef57b803e944ac60" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>currentVectorParameterPartials_</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a928368a31c292d814f8e69f0c96c2786" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>currentVelocityPartial_</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1ae3a298c1f54c1e2e688d0d85c9e2d836" prot="private" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>empiricalAcceleration_</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a260e744dbc266056cf0f316162164a5d" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>EmpiricalAccelerationPartial</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a0bf7d418855165be4d40b82cfbeb115c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ac74a861f66f3362524aec1f0266513cf" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a6b6e323de35eaeb1292e4bfb410da7b1" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getAccelerationType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ac31393221aeef20ea4ee5d7d0ad59aba" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getCurrentDoubleParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adf72962ebc3a9a2008170009c26f553c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1acdfcbf63330d5b2b04fbaeb3787c8f68" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a2ba60d5dd1c131412a8f1aae8dd47a21" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getCurrentVectorParameterPartial</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a1b40573f9d0a7ad203e379327f13757e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getDerivativeFunctionWrtStateOfIntegratedBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a01893338e6faedd93cc0410bb692ce12" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getIntegratedStateType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adbe24dfd4085ec6343ccf18478b52bc0" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getIntegrationReferencePoint</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a450c3f2be2a765c9f057ff93017e6167" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a69a7807aefb5f8d5972718d36a96635f" prot="public" virt="virtual" ambiguityscope="tudat::acceleration_partials::AccelerationPartial::"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aad4f9e664da456462d4cb8b764679f1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>integratedStateType_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a0c30598298c59647e997203dc0ad664c" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>integrationReferencePoint_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab6d26ee307ebc4bb8f2cdca9f53e5097" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isAccelerationPartialWrtAdditionalBodyNonnullptr</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ad91136949f633458e8b970a5baacb9ce" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isCurrentDoubleParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aebd9e9721d7194fea38a286e94391d97" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isCurrentDoubleParameterPartialSetIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a90cb1a317764b060601778e2a515d305" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isCurrentVectorParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adc2943bcf127c42d392e57e574b0fa1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isCurrentVectorParameterPartialSetIterator_</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a94b95390a37109627270bd8dfbca5342" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab05fd603c6228f4639e6f00ac4f9527c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>isStateDerivativeDependentOnIntegratedState</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a300a3a9234fd8eb9fd4f5d50778a4321" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>parameterDoublePartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3e7c12925372ee2844f8f76d2dae4a77" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>parameterDoublePartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae86be0f3c3a487ce1706e0829caca26e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>parameterVectorPartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a799da4695ca3bea29aaed8b761c9c3b3" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>parameterVectorPartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7b26a08bb4990220a7d2f40f3681274a" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>resetCurrentParameterValues</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3654d540045886559b6592dc4f30bab8" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>resetTime</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aa0245f5f6b58423905b64709dac39a4c" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>resetTimeOfMemberObjects</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a481fc771c0a87996bc469b34ead49db9" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a646f021c7c884446d482b9b0ab1e14f4" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a4827d172b38b466f65f4da68500f53ea" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>StateDerivativePartial</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a935abdcf0f1f833f2481c8598fe36d57" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>update</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7a6f8bf919e2a0c16bc254738123b5b4" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>updateParameterPartials</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a53491f7d5c94bd64b71c5190b9793a64" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>updateParameterPartialsOfMemberObjects</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1ad478262c51e7db5865d173ad954bc9b6" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtArcWiseEmpiricalAccelerationCoefficient</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a8ebf1042df3af4c209aecf7bf3f25502" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtEmpiricalAccelerationCoefficient</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a894de2322ad9bcbef9a3c0ae25eb18d9" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtEmpiricalAccelerationCoefficientFromIndices</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a781bc99dab9ab8dd805c63edf4e0d8f5" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtNonTranslationalStateOfAdditionalBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a17003fa377113426b3e556a78f147941" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtParameter</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae12101f97027e73084d3d80dbc7059b3" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtParameter</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a562658f5b1897b49962ea04367bb7f7e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtPositionOfAcceleratedBody</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a0a55d3f8c4af6ff8aba6236864dba22a" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtPositionOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab222ba1108201aa02e916c64ce82d599" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtPositionOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a0576a63608bc8bee1da8bf2aea0ea7b6" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtStateOfAcceleratedBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a8bfba67b7f9e9a3d6021b2b1759fc33e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtStateOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a8e21b7ff67f97af2e7e2a963cd0da3b2" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtStateOfAdditionalBody</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1ac63f0c1979b302d4be0c365d2050e4b8" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtVelocityOfAcceleratedBody</name></member>
      <member refid="dd/d46/classtudat_1_1acceleration__partials_1_1EmpiricalAccelerationPartial_1a0802e0ab5f9bbb2866a20aef969d0514" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtVelocityOfAcceleratingBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1a1566f99b2cfd42d523c06ee6c1559435" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>wrtVelocityOfAdditionalBody</name></member>
      <member refid="da/d55/classtudat_1_1acceleration__partials_1_1AccelerationPartial_1ab373fff70206231b312a988e59902038" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>~AccelerationPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a05f085a890b27518ca24446ac22bdb3e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::EmpiricalAccelerationPartial</scope><name>~StateDerivativePartial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
