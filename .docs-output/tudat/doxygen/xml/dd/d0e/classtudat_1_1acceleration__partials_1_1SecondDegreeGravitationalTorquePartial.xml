<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial" kind="class" language="C++" prot="public">
    <compoundname>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</compoundname>
    <basecompoundref refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial" prot="public" virt="non-virtual">tudat::acceleration_partials::TorquePartial</basecompoundref>
    <includes refid="d7/db8/secondDegreeGravitationalTorquePartial_8h" local="no">secondDegreeGravitationalTorquePartial.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a3f79faff3a04f93c4d8876b9b910af3e" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d6/d5e/classtudat_1_1gravitation_1_1SecondDegreeGravitationalTorqueModel" kindref="compound">gravitation::SecondDegreeGravitationalTorqueModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt; gravitation::SecondDegreeGravitationalTorqueModel &gt; tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::torqueModel_</definition>
        <argsstring></argsstring>
        <name>torqueModel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="195" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a954f365217ab4fa0900ccdde0ea0bc4e" prot="protected" static="no" mutable="no">
        <type>std::function&lt; double() &gt;</type>
        <definition>std::function&lt; double( ) &gt; tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::getInertiaTensorNormalizationFactor_</definition>
        <argsstring></argsstring>
        <name>getInertiaTensorNormalizationFactor_</name>
        <briefdescription>
<para>Function the inertia tensor normalization factor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="198" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a627b030731b3fbb463a28698cb1f3a13" prot="protected" static="no" mutable="no">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::currentQuaternionVector_</definition>
        <argsstring></argsstring>
        <name>currentQuaternionVector_</name>
        <briefdescription>
<para>Current quaternion elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="201" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a9b6cc0f542c1f9408efa0b7ca7c616d4" prot="protected" static="no" mutable="no">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::currentCoefficientPartialPremultiplier_</definition>
        <argsstring></argsstring>
        <name>currentCoefficientPartialPremultiplier_</name>
        <briefdescription>
<para>Current spherical harmonic coefficient pre-multiplier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="204" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1ab30a4bcb348acbdd4d5632a30c08fd06" prot="protected" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::currentBodyFixedRelativePosition_</definition>
        <argsstring></argsstring>
        <name>currentBodyFixedRelativePosition_</name>
        <briefdescription>
<para>Current reltive position of body undergoing acceleration w.r.t. that exerting acceleration, in body-fixed frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="207" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a41cccc18382fa75948cb1919ade700fd" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::Matrix3d &gt;</type>
        <definition>std::vector&lt; Eigen::Matrix3d &gt; tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::currentRotationMatrixDerivativesWrtQuaternion_</definition>
        <argsstring></argsstring>
        <name>currentRotationMatrixDerivativesWrtQuaternion_</name>
        <briefdescription>
<para>Current partial derivatives of rotation matrix from body-fixed to base frame w.r.t. quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="210" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a4ce9bc0a1bdca74912416e46aad332b5" prot="protected" static="no" mutable="no">
        <type>Eigen::Matrix&lt; double, 3, 4 &gt;</type>
        <definition>Eigen::Matrix&lt; double, 3, 4 &gt; tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::currentPartialDerivativeWrtQuaternion_</definition>
        <argsstring></argsstring>
        <name>currentPartialDerivativeWrtQuaternion_</name>
        <briefdescription>
<para>Current partial derivative of torque w.r.t. quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="213" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a4f4968193034ab11327aa2cbaee4796e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::SecondDegreeGravitationalTorquePartial</definition>
        <argsstring>(const std::shared_ptr&lt; gravitation::SecondDegreeGravitationalTorqueModel &gt; torqueModel, const std::function&lt; double() &gt; getInertiaTensorNormalizationFactor, const std::string acceleratedBody, const std::string acceleratingBody)</argsstring>
        <name>SecondDegreeGravitationalTorquePartial</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d6/d5e/classtudat_1_1gravitation_1_1SecondDegreeGravitationalTorqueModel" kindref="compound">gravitation::SecondDegreeGravitationalTorqueModel</ref> &gt;</type>
          <declname>torqueModel</declname>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>getInertiaTensorNormalizationFactor</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>acceleratedBody</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>acceleratingBody</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torqueModel</parametername>
</parameternamelist>
<parameterdescription>
<para>Torque model for which partial derivatives are to be computed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getInertiaTensorNormalizationFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>Function the inertia tensor normalization factor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleratedBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body undergoing torque </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleratingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body exerting torque </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="58" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="58" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1ace39e7f0b49ec777cee95a99429bf718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::~SecondDegreeGravitationalTorquePartial</definition>
        <argsstring>()</argsstring>
        <name>~SecondDegreeGravitationalTorquePartial</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="70" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a5000ecdbfaa71aad686a970663d1d198" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt; tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; double &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a69a7807aefb5f8d5972718d36a96635f">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; double &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a double parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a double parameter. Function returns empty function and zero size indicator for parameters with no dependency for current torque. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial (0 for no dependency, 1 otherwise). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="80" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="43" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a7578059084d9a216e133cb3020454a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt;</type>
        <definition>std::pair&lt; std::function&lt; void(Eigen::MatrixXd &amp;) &gt;, int &gt; tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::getParameterPartialFunction</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::VectorXd &gt; &gt; parameter)</argsstring>
        <name>getParameterPartialFunction</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a849b14fede905e4e26ee2e752fbc95cc">getParameterPartialFunction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::VectorXd &gt; &gt;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for setting up and retrieving a function returning a partial w.r.t. a vector parameter. Function returns empty function and zero size indicator for parameters with no dependency for current torque. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter w.r.t. which partial is to be taken. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of parameter partial function and number of columns in partial (0 for no dependency). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="89" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="66" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a2cf6f3ac27371a33d4b7cce436eb77c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::wrtOrientationOfAcceleratedBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const bool addContribution=1, const int startRow=0, const int startColumn=0)</argsstring>
        <name>wrtOrientationOfAcceleratedBody</name>
        <reimplements refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a38831ab1542356953153d3893e60e9e2">wrtOrientationOfAcceleratedBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>addContribution</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startRow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>startColumn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the torque w.r.t. the orientation of the accelerated body. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the torque w.r.t. the orientation of the accelerated body and adding it to the existing partial block. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of torque w.r.t. Orientation of body undergoing torque where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addContribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether to return the partial itself (true) or the negative partial (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startRow</parametername>
</parameternamelist>
<parameterdescription>
<para>First row in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>First column in partialMatrix block where the computed partial is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="102" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1aec785a36a4fab48930ca67263da3a469" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::isStateDerivativeDependentOnIntegratedAdditionalStateTypes</definition>
        <argsstring>(const std::pair&lt; std::string, std::string &gt; &amp;stateReferencePoint, const propagators::IntegratedStateType integratedStateType)</argsstring>
        <name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name>
        <reimplements refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1abd32c3a39bd48fe77a2223580d44ea57">isStateDerivativeDependentOnIntegratedAdditionalStateTypes</reimplements>
        <param>
          <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
          <declname>stateReferencePoint</declname>
        </param>
        <param>
          <type>const propagators::IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <briefdescription>
<para>Function for determining if the torque is dependent on a non-rotational integrated state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for determining if the torque is dependent on a non-rotational integrated state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference point id of propagated state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of propagated state for which dependency is to be determined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if dependency exists (non-zero partial), false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="123" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="123" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1aa85530bcc0f7a71702ffa8b4cb7ef057" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::wrtNonRotationalStateOfAdditionalBody</definition>
        <argsstring>(Eigen::Block&lt; Eigen::MatrixXd &gt; partialMatrix, const std::pair&lt; std::string, std::string &gt; &amp;stateReferencePoint, const propagators::IntegratedStateType integratedStateType)</argsstring>
        <name>wrtNonRotationalStateOfAdditionalBody</name>
        <reimplements refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a1c958e33def353759e8b37037b70b52b">wrtNonRotationalStateOfAdditionalBody</reimplements>
        <param>
          <type>Eigen::Block&lt; Eigen::MatrixXd &gt;</type>
          <declname>partialMatrix</declname>
        </param>
        <param>
          <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
          <declname>stateReferencePoint</declname>
        </param>
        <param>
          <type>const propagators::IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <briefdescription>
<para>Function for calculating the partial of the torque w.r.t. a non-rotational integrated state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for calculating the partial of the torque w.r.t. a non-rotational integrated state and adding it to the existing partial block. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partialMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Block of partial derivatives of where current partial is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateReferencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference point id of propagated state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of propagated state for which partial is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="149" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="134" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a0b0b872b220ff546290f1f8f7b5ea087" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::update</definition>
        <argsstring>(const double currentTime=TUDAT_NAN)</argsstring>
        <name>update</name>
        <reimplements refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6801a8f31cc0fcdb9679c2db6be3b157">update</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <briefdescription>
<para>Update partial model to current time. </para>
        </briefdescription>
        <detaileddescription>
<para>Update partial model to current time, retrieving information from consituent functions <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to which partial is to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="159" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="156" bodyend="177"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a07014178dc2c0cd689dbe06b5149418e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::wrtGravitationalParameterOfCentralBody</definition>
        <argsstring>(Eigen::MatrixXd &amp;gravitationalParameterPartial)</argsstring>
        <name>wrtGravitationalParameterOfCentralBody</name>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>gravitationalParameterPartial</declname>
        </param>
        <briefdescription>
<para>Function to compute partial of torque w.r.t. gravitational parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate central gravity partial w.r.t. central body gravitational parameter.</para>
<para>Function to compute partial of torque w.r.t. gravitational parameter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gravitationalParameterPartial</parametername>
</parameternamelist>
<parameterdescription>
<para>Computed partial of torque w.r.t. gravitational parameter (returned by reference) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="168" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="181" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a0e14fc7c47f440f30dd986237a6e3b6f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::wrtCosineSphericalHarmonicCoefficientsOfCentralBody</definition>
        <argsstring>(Eigen::MatrixXd &amp;sphericalHarmonicCoefficientPartial, const int c20Index, const int c21Index, const int c22Index)</argsstring>
        <name>wrtCosineSphericalHarmonicCoefficientsOfCentralBody</name>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>sphericalHarmonicCoefficientPartial</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>c20Index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>c21Index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>c22Index</declname>
        </param>
        <briefdescription>
<para>Function to compute partial of torque w.r.t. spherical harmonic cosine coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute partial of torque w.r.t. spherical harmonic cosine coefficients <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sphericalHarmonicCoefficientPartial</parametername>
</parameternamelist>
<parameterdescription>
<para>Computed partial of torque w.r.t. spherical harmonic cosine coefficients (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c20Index</parametername>
</parameternamelist>
<parameterdescription>
<para>for degree=2,order=0 coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c21Index</parametername>
</parameternamelist>
<parameterdescription>
<para>for degree=2,order=1 coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c22Index</parametername>
</parameternamelist>
<parameterdescription>
<para>for degree=2,order=2 coefficient </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="179" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="193" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a3144ee0bacd23cc41acc56ce746cbd1e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial::wrtSineSphericalHarmonicCoefficientsOfCentralBody</definition>
        <argsstring>(Eigen::MatrixXd &amp;sphericalHarmonicCoefficientPartial, const int s21Index, const int s22Index)</argsstring>
        <name>wrtSineSphericalHarmonicCoefficientsOfCentralBody</name>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>sphericalHarmonicCoefficientPartial</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>s21Index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>s22Index</declname>
        </param>
        <briefdescription>
<para>Function to compute partial of torque w.r.t. spherical harmonic sine coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute partial of torque w.r.t. spherical harmonic sine coefficients <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sphericalHarmonicCoefficientPartial</parametername>
</parameternamelist>
<parameterdescription>
<para>Computed partial of torque w.r.t. spherical harmonic sine coefficients (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s21Index</parametername>
</parameternamelist>
<parameterdescription>
<para>for degree=2,order=1 coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s22Index</parametername>
</parameternamelist>
<parameterdescription>
<para>for degree=2,order=2 coefficient </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="191" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.cpp" bodystart="225" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to calculate the partials of the central gravitational acceleration w.r.t. parameters and states. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
      </node>
      <node id="2">
        <label>tudat::acceleration_partials::TorquePartial</label>
        <link refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</label>
        <link refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>tudat::orbit_determination::StateDerivativePartial</label>
        <link refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial"/>
        <childnode refid="4" relation="usage">
          <edgelabel>isCurrentDoubleParameterPartialSetIterator_</edgelabel>
          <edgelabel>isCurrentVectorParameterPartialSetIterator_</edgelabel>
          <edgelabel>parameterDoublePartialFunctionIterator_</edgelabel>
          <edgelabel>parameterVectorPartialFunctionIterator_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>tudat::acceleration_partials::TorquePartial</label>
        <link refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>bodyExertingTorque_</edgelabel>
          <edgelabel>bodyUndergoingTorque_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</label>
        <link refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" line="46" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/rotational_dynamics_partials/secondDegreeGravitationalTorquePartial.h" bodystart="47" bodyend="215"/>
    <listofallmembers>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aacaaf221e1d39de40b6d9e3b881b9e42" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>accelerationSize_</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1ad7fec53792cf06fd95b5d77249262aa3" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>bodyExertingTorque_</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a87154b3cdc955401b5dbd4c57df6a768" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>bodyUndergoingTorque_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1ab30a4bcb348acbdd4d5632a30c08fd06" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentBodyFixedRelativePosition_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a9b6cc0f542c1f9408efa0b7ca7c616d4" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentCoefficientPartialPremultiplier_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a6699f3159f79975406d3fcc1f9002d1b" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentDoubleParameterPartials_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a4ce9bc0a1bdca74912416e46aad332b5" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentPartialDerivativeWrtQuaternion_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a627b030731b3fbb463a28698cb1f3a13" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentQuaternionVector_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a41cccc18382fa75948cb1919ade700fd" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentRotationMatrixDerivativesWrtQuaternion_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1abbca0ac294a29b7d1efc16a68d7c4582" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentTime_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a1091be37858cb2fbef57b803e944ac60" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>currentVectorParameterPartials_</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a25563b04d9f774820b14cea830a180b3" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getBodyExertingTorque</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a4565abdd57a8089e37072e7e2937d851" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getBodyUndergoingTorque</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ac31393221aeef20ea4ee5d7d0ad59aba" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getCurrentDoubleParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adf72962ebc3a9a2008170009c26f553c" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1acdfcbf63330d5b2b04fbaeb3787c8f68" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getCurrentParameterPartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a2ba60d5dd1c131412a8f1aae8dd47a21" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getCurrentVectorParameterPartial</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a00abe63e3789cd2f42bc1b0c7d1fdb9e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getDerivativeFunctionWrtStateOfIntegratedBody</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a954f365217ab4fa0900ccdde0ea0bc4e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getInertiaTensorNormalizationFactor_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a01893338e6faedd93cc0410bb692ce12" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getIntegratedStateType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adbe24dfd4085ec6343ccf18478b52bc0" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getIntegrationReferencePoint</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a5000ecdbfaa71aad686a970663d1d198" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a7578059084d9a216e133cb3020454a6c" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getParameterPartialFunction</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a8265a9582a46b95b9ece012142207f82" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>getTorqueType</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aad4f9e664da456462d4cb8b764679f1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>integratedStateType_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a0c30598298c59647e997203dc0ad664c" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>integrationReferencePoint_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ad91136949f633458e8b970a5baacb9ce" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>isCurrentDoubleParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aebd9e9721d7194fea38a286e94391d97" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>isCurrentDoubleParameterPartialSetIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a90cb1a317764b060601778e2a515d305" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>isCurrentVectorParameterPartialSet_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1adc2943bcf127c42d392e57e574b0fa1f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>isCurrentVectorParameterPartialSetIterator_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1aec785a36a4fab48930ca67263da3a469" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>isStateDerivativeDependentOnIntegratedAdditionalStateTypes</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a5e6b9ae0d2f7c1f35c19dbdca5832658" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>isTorquePartialWrtAdditionalBodyNonNull</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a300a3a9234fd8eb9fd4f5d50778a4321" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>parameterDoublePartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3e7c12925372ee2844f8f76d2dae4a77" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>parameterDoublePartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae86be0f3c3a487ce1706e0829caca26e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>parameterVectorPartialFunctionIterator_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a799da4695ca3bea29aaed8b761c9c3b3" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>parameterVectorPartialFunctions_</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7b26a08bb4990220a7d2f40f3681274a" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>resetCurrentParameterValues</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a3654d540045886559b6592dc4f30bab8" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>resetTime</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1aa0245f5f6b58423905b64709dac39a4c" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>resetTimeOfMemberObjects</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a4f4968193034ab11327aa2cbaee4796e" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>SecondDegreeGravitationalTorquePartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a481fc771c0a87996bc469b34ead49db9" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a646f021c7c884446d482b9b0ab1e14f4" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>setParameterPartialUpdateFunction</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a4827d172b38b466f65f4da68500f53ea" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>StateDerivativePartial</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a3f79faff3a04f93c4d8876b9b910af3e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>torqueModel_</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a299c5f5462d73b955f0af51e5823c39f" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>TorquePartial</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a3d4542f70bed87e5e15ef766e2a065e5" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>torqueType_</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a0b0b872b220ff546290f1f8f7b5ea087" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>update</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a7a6f8bf919e2a0c16bc254738123b5b4" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>updateParameterPartials</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a53491f7d5c94bd64b71c5190b9793a64" prot="protected" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>updateParameterPartialsOfMemberObjects</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a0e14fc7c47f440f30dd986237a6e3b6f" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtCosineSphericalHarmonicCoefficientsOfCentralBody</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a07014178dc2c0cd689dbe06b5149418e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtGravitationalParameterOfCentralBody</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1aa85530bcc0f7a71702ffa8b4cb7ef057" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtNonRotationalStateOfAdditionalBody</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a2cf6f3ac27371a33d4b7cce436eb77c4" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtOrientationOfAcceleratedBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1acdbf61da830ff7b43d9bf10df22e98e8" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtOrientationOfAcceleratingBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a7e1f33a40cb2590d9e47297179f03fac" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtOrientationOfAdditionalBody</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a17003fa377113426b3e556a78f147941" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtParameter</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1ae12101f97027e73084d3d80dbc7059b3" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtParameter</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a719cf5be0b45b2710009aa27988c56cb" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtRotationalStateOfAcceleratedBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a611d8d213abeb99286dd519340c10995" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtRotationalStateOfAcceleratingBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a79b5b432d9d68b85a95deb43ba52a476" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtRotationalStateOfAdditionalBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a207df1139b3ca8b14bb48ab132d5dbc6" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtRotationalVelocityOfAcceleratedBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a473ff90b6fa28e4234a97a42bd3a4cb7" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtRotationalVelocityOfAcceleratingBody</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1a3fdff9e53798d90a4e6350a8b35e3df3" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtRotationalVelocityOfAdditionalBody</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1a3144ee0bacd23cc41acc56ce746cbd1e" prot="protected" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>wrtSineSphericalHarmonicCoefficientsOfCentralBody</name></member>
      <member refid="dd/d0e/classtudat_1_1acceleration__partials_1_1SecondDegreeGravitationalTorquePartial_1ace39e7f0b49ec777cee95a99429bf718" prot="public" virt="non-virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>~SecondDegreeGravitationalTorquePartial</name></member>
      <member refid="de/db9/classtudat_1_1orbit__determination_1_1StateDerivativePartial_1a05f085a890b27518ca24446ac22bdb3e" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>~StateDerivativePartial</name></member>
      <member refid="d7/dd4/classtudat_1_1acceleration__partials_1_1TorquePartial_1aedbf70284739dca3507d31ae53f1866f" prot="public" virt="virtual"><scope>tudat::acceleration_partials::SecondDegreeGravitationalTorquePartial</scope><name>~TorquePartial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
