<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d0/d53/classtudat_1_1Time" kind="class" language="C++" prot="public">
    <compoundname>tudat::Time</compoundname>
    <includes refid="da/d6b/timeType_8h" local="no">timeType.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d0/d53/classtudat_1_1Time_1af615aaf0193f8f4a2b1074c53ca2585c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tudat::Time::daysToAdd</definition>
        <argsstring></argsstring>
        <name>daysToAdd</name>
        <briefdescription>
<para>Pre-declared variable used in often-called normalizeMembers function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="1009" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d53/classtudat_1_1Time_1ad7a0e18f0575f228009af6c8f6563c49" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tudat::Time::fullPeriods_</definition>
        <argsstring></argsstring>
        <name>fullPeriods_</name>
        <briefdescription>
<para>Number of full hours since epoch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="1012" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d53/classtudat_1_1Time_1a8187f3e83a486eefa45a37f29c186a24" prot="protected" static="no" mutable="no">
        <type>long double</type>
        <definition>long double tudat::Time::secondsIntoFullPeriod_</definition>
        <argsstring></argsstring>
        <name>secondsIntoFullPeriod_</name>
        <briefdescription>
<para>Number of seconds into current hour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="1015" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a0c0c014c20da523f9654b5dcf6be11b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::Time</definition>
        <argsstring>()</argsstring>
        <name>Time</name>
        <briefdescription>
<para>Constructor, initialize time to 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="41" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1afbf3067a4bdb2fb876510c1f0ef55ce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::Time</definition>
        <argsstring>(const int fullPeriods, const long double secondsIntoFullPeriod)</argsstring>
        <name>Time</name>
        <param>
          <type>const int</type>
          <declname>fullPeriods</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>secondsIntoFullPeriod</declname>
        </param>
        <briefdescription>
<para>Constructor, sets current hour and time into current hour directly. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets current hour and time into current hour directly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fullPeriods</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of full hours since epoch </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondsIntoFullPeriod</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds into current hour. Note that this value need not be in the range between 0 and 3600: the time representation is normalized upon construction to ensure that the internal representation is in this range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="51" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a9c7aa5e82b116e94dab3f825ce257d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::Time</definition>
        <argsstring>(const long double numberOfSeconds)</argsstring>
        <name>Time</name>
        <param>
          <type>const long double</type>
          <declname>numberOfSeconds</declname>
        </param>
        <briefdescription>
<para>Constructor, sets number of seconds since epoch (with long double representation as input) </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets number of seconds since epoch (with long double representation as input) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfSeconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds since epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="62" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a624d20b7623b8b740f86f3c996898436" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::Time</definition>
        <argsstring>(const double secondsIntoFullPeriod)</argsstring>
        <name>Time</name>
        <param>
          <type>const double</type>
          <declname>secondsIntoFullPeriod</declname>
        </param>
        <briefdescription>
<para>Constructor, sets number of seconds since epoch (with double representation as input) </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets number of seconds since epoch (with double representation as input) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsIntoFullPeriod</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds since epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="73" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1ac7cf36cf588e9da9b781a73502f87624" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::Time</definition>
        <argsstring>(const int secondsIntoFullPeriod)</argsstring>
        <name>Time</name>
        <param>
          <type>const int</type>
          <declname>secondsIntoFullPeriod</declname>
        </param>
        <briefdescription>
<para>Constructor, sets number of seconds since epoch (with int representation as input) </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets number of seconds since epoch (with int representation as input) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsIntoFullPeriod</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds since epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="84" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a0c34007af7e49b34a3a7230f880ac1e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::Time</definition>
        <argsstring>(const Time &amp;otherTime)</argsstring>
        <name>Time</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>otherTime</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>otherTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="95" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1aedcbd640c627656d49b1184c130c2bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
        <definition>Time&amp; tudat::Time::operator=</definition>
        <argsstring>(const Time &amp;timeToCopy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCopy</declname>
        </param>
        <briefdescription>
<para>Definition of = operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para>Definition of = operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be copied by operator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Assigned <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="107" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="107" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a9e1836bd588822d997e7c5cbfcc41ff9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator+=</definition>
        <argsstring>(const Time &amp;timeToAdd)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd</declname>
        </param>
        <briefdescription>
<para>Add and assign operator for adding a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Add and assign operator for adding a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="364" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a8569717b396abae3625c090aae733c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator+=</definition>
        <argsstring>(const double timeToAdd)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const double</type>
          <declname>timeToAdd</declname>
        </param>
        <briefdescription>
<para>Add and assign operator for adding a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Add and assign operator for adding a double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be added (in double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="376" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1ade04ad9e012e3afafd5c00785590b047" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator+=</definition>
        <argsstring>(const long double timeToAdd)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const long double</type>
          <declname>timeToAdd</declname>
        </param>
        <briefdescription>
<para>Add and assign operator for adding a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Add and assign operator for adding a double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be added (in long double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="387" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="387" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a54a080f4f4d563b402da7b4acf79615f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator-=</definition>
        <argsstring>(const Time &amp;timeToSubtract)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract</declname>
        </param>
        <briefdescription>
<para>Subtract and assign operator for adding a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Subtract and assign operator for subtracting a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="398" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="398" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a9195c01eca670d09e96c1e3275edf253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator-=</definition>
        <argsstring>(const double timeToSubtract)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const double</type>
          <declname>timeToSubtract</declname>
        </param>
        <briefdescription>
<para>Subtract and assign operator for adding a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Subtract and assign operator for subtracting a double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted (in double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="410" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="410" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a34d475b6c10c7f7700f03c6910806ba7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator-=</definition>
        <argsstring>(const long double timeToSubtract)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const long double</type>
          <declname>timeToSubtract</declname>
        </param>
        <briefdescription>
<para>Subtract and assign operator for adding a long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Subtract and assign operator for subtracting a long double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted (in long double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="421" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a290598017d980f65668ad7366fa7778b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator*=</definition>
        <argsstring>(const double timeToMultiply)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const double</type>
          <declname>timeToMultiply</declname>
        </param>
        <briefdescription>
<para>Multiply and assign operator for multiplying by double. </para>
        </briefdescription>
        <detaileddescription>
<para>Multiply and assign operator for multiplying by a double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToMultiply</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which time is to be multiplied (in double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="432" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="432" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a1e7bc3cdaa8761e556379282a76b7e68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator*=</definition>
        <argsstring>(const long double timeToMultiply)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const long double</type>
          <declname>timeToMultiply</declname>
        </param>
        <briefdescription>
<para>Multiply and assign operator for multiplying by long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Multiply and assign operator for multiplying by a long double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToMultiply</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which time is to be multiplied (in long double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="449" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="449" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a6247f2fadac51a1fe77d0c889b5e7c76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator/=</definition>
        <argsstring>(const double timeToDivide)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const double</type>
          <declname>timeToDivide</declname>
        </param>
        <briefdescription>
<para>Divided and assign operator for dividing by double. </para>
        </briefdescription>
        <detaileddescription>
<para>Divided and assign operator for dividing by double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToDivide</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which time is to be divided (in double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="466" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="466" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a323a8df2194a69e1a29a3992490c9b6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::operator/=</definition>
        <argsstring>(const long double timeToDivide)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const long double</type>
          <declname>timeToDivide</declname>
        </param>
        <briefdescription>
<para>Divided and assign operator for dividing by long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Divided and assign operator for dividing by long double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToDivide</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which time is to be divided (in long double representation) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="483" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="483" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1af63a09cdff7facf0a33e97d4557c5d52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarType</type>
          </param>
        </templateparamlist>
        <type>ScalarType</type>
        <definition>ScalarType tudat::Time::getSeconds</definition>
        <argsstring>() const</argsstring>
        <name>getSeconds</name>
        <briefdescription>
<para>Function to get the total seconds since epoch, in templated precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the total seconds since epoch, in templated precision <simplesect kind="return"><para>Total seconds since epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="939" column="16" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="939" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1abba86a5873a3883816e2cf1cb2708b68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::operator int</definition>
        <argsstring>() const</argsstring>
        <name>operator int</name>
        <briefdescription>
<para>Function to get the total seconds since epoch, in int precision (cast of <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to int) </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the total seconds since epoch, in int precision (cast of <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to int) <simplesect kind="return"><para>Total seconds int epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="950" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="950" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a7d7c4db665fd64c40ab360f33084230e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::operator double</definition>
        <argsstring>() const</argsstring>
        <name>operator double</name>
        <briefdescription>
<para>Function to get the total seconds since epoch, in int precision (cast of <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to double) </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the total seconds since epoch, in int precision (cast of <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to double) <simplesect kind="return"><para>Total seconds int epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="960" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="960" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a81d0f85b52c1bafe2c00ea6e92592c3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::Time::operator long double</definition>
        <argsstring>() const</argsstring>
        <name>operator long double</name>
        <briefdescription>
<para>Function to get the total seconds since epoch, in int precision (cast of <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to long sdouble) </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the total seconds since epoch, in int precision (cast of <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to long double) <simplesect kind="return"><para>Total seconds int epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="970" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="970" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a231fa52deea5fe52337c01af04045efb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tudat::Time::getFullPeriods</definition>
        <argsstring>() const</argsstring>
        <name>getFullPeriods</name>
        <briefdescription>
<para>Function to get the number of full hours since epoch. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the number of full hours since epoch <simplesect kind="return"><para>Number of full hours since epoch </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="980" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="980" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a13976ba149860b220832421066eeb694" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double tudat::Time::getSecondsIntoFullPeriod</definition>
        <argsstring>() const</argsstring>
        <name>getSecondsIntoFullPeriod</name>
        <briefdescription>
<para>Function to get the number of seconds into current hour. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the number of seconds into current hour <simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="990" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="990" bodyend="993"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ada13ce81f50cca6a7929ecf1e2715111" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator+</definition>
        <argsstring>(const Time &amp;timeToAdd1, const Time &amp;timeToAdd2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd2</declname>
        </param>
        <briefdescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time that is to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToAdd2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time that is to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, added together </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="130" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a5e9c7ddec18a8c5e909d721386500a35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator+</definition>
        <argsstring>(const double &amp;timeToAdd1, const Time &amp;timeToAdd2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const double &amp;</type>
          <declname>timeToAdd1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd2</declname>
        </param>
        <briefdescription>
<para>Addition operator for double variable with <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time that is to be added (as a double). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToAdd2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time that is to be added (as a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, added together as <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="143" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a81a49cc250f5d46d8fc652bcb3aa4c89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator+</definition>
        <argsstring>(const long double &amp;timeToAdd1, const Time &amp;timeToAdd2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const long double &amp;</type>
          <declname>timeToAdd1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd2</declname>
        </param>
        <briefdescription>
<para>Addition operator for long double variable with <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time that is to be added (as a long double). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToAdd2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time that is to be added (as a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, added together as <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="155" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a139ddbc5e3b4b93a368c404509334feb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator+</definition>
        <argsstring>(const Time &amp;timeToAdd2, const double &amp;timeToAdd1)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd2</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>timeToAdd1</declname>
        </param>
        <briefdescription>
<para>Addition operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time that is to be added (as <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToAdd2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time that is to be added (as a double). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, added together as <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="167" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ad6c6756b57a40443dce02fad7d3e3813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator+</definition>
        <argsstring>(const Time &amp;timeToAdd2, const long double &amp;timeToAdd1)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToAdd2</declname>
        </param>
        <param>
          <type>const long double &amp;</type>
          <declname>timeToAdd1</declname>
        </param>
        <briefdescription>
<para>Addition operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToAdd1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time that is to be added (as <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToAdd2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time that is to be added (as a long double). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, added together as <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="179" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a6d55218ba360b4c12999556f0cf6b35f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator-</definition>
        <argsstring>(const Time &amp;timeToSubtract1, const Time &amp;timeToSubtract2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract2</declname>
        </param>
        <briefdescription>
<para>Subtraction operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> from which second time is to be subtracted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToSubtract2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted from first input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, subtracted from one another </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="193" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a5148c9476a8aab1414684dea76346bff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator-</definition>
        <argsstring>(const Time &amp;timeToSubtract1, const double timeToSubtract2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToSubtract2</declname>
        </param>
        <briefdescription>
<para>Subtraction operator for double from <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> from which second time is to be subtracted (as a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToSubtract2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted from first input (as a double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, subtracted from one another </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="207" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a9f010abad33c1056d320912f89f7cd48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator-</definition>
        <argsstring>(const Time &amp;timeToSubtract1, const long double timeToSubtract2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToSubtract2</declname>
        </param>
        <briefdescription>
<para>Subtraction operator for double from <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> from which second time is to be subtracted (as a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToSubtract2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted from first input (as a long double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, subtracted from one another </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="220" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a6ea346d4961ca625df91e4fd81eb9568" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator-</definition>
        <argsstring>(const double timeToSubtract1, const Time &amp;timeToSubtract2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const double</type>
          <declname>timeToSubtract1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract2</declname>
        </param>
        <briefdescription>
<para>Subtraction operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object from double. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> from which second time is to be subtracted (as a double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToSubtract2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted from first input (as a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, subtracted from one another </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="232" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ae440cbdce69be6fea0f5f19ffe2a1f13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator-</definition>
        <argsstring>(const long double timeToSubtract1, const Time &amp;timeToSubtract2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const long double</type>
          <declname>timeToSubtract1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToSubtract2</declname>
        </param>
        <briefdescription>
<para>Subtraction operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object from long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToSubtract1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> from which second time is to be subtracted (as a long double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToSubtract2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be subtracted from first input (as a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Input arguments, subtracted from one another </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="245" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a6839a759ce0dc453d0c7ec4fcc64f0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator*</definition>
        <argsstring>(const long double timeToMultiply1, const Time &amp;timeToMultiply2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const long double</type>
          <declname>timeToMultiply1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToMultiply2</declname>
        </param>
        <briefdescription>
<para>Multiplication operator of a long double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) </para>
        </briefdescription>
        <detaileddescription>
<para>Multiplication operator of a long double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToMultiply1</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is to be multiplied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToMultiply2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be multiplied by first input argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplied <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="258" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1afb70b5fc1353e811708613de2fe6de89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator*</definition>
        <argsstring>(const Time &amp;timeToMultiply1, const long double timeToMultiply2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToMultiply1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToMultiply2</declname>
        </param>
        <briefdescription>
<para>Multiplication operator of a long double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) </para>
        </briefdescription>
        <detaileddescription>
<para>Multiplication operator of a long double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToMultiply1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be multiplied by second input argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToMultiply2</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is to be multiplied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplied <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="277" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a1957d457097d1513441d737c66175b5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator*</definition>
        <argsstring>(const double timeToMultiply1, const Time &amp;timeToMultiply2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const double</type>
          <declname>timeToMultiply1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToMultiply2</declname>
        </param>
        <briefdescription>
<para>Multiplication operator of a double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) </para>
        </briefdescription>
        <detaileddescription>
<para>Multiplication operator of a double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToMultiply1</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is to be multiplied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToMultiply2</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be multiplied by first input argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplied <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="289" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="289" bodyend="301"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a5ffc1c1d9c3ba8ad28cde5e1346946fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time operator*</definition>
        <argsstring>(const Time &amp;timeToMultiply1, const double timeToMultiply2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToMultiply1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToMultiply2</declname>
        </param>
        <briefdescription>
<para>Multiplication operator of a double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) </para>
        </briefdescription>
        <detaileddescription>
<para>Multiplication operator of a double with a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object (i.e. to rescale time) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToMultiply1</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be multiplied by second input argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToMultiply2</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is to be multiplied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplied <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="310" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a8e86a3cf7414d283552450a04bca61a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>const Time operator/</definition>
        <argsstring>(const Time &amp;original, const double doubleToDivideBy)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>original</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>doubleToDivideBy</declname>
        </param>
        <briefdescription>
<para>Division operator of a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double (i.e. to rescale time) </para>
        </briefdescription>
        <detaileddescription>
<para>Division operator of a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double (i.e. to rescale time) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be divided by second input argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doubleToDivideBy</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which first argument is to be divided. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Divided <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="322" column="23" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="322" bodyend="335"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ad1c3e65f0853debbe42a2f3efda557d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
        <definition>const Time operator/</definition>
        <argsstring>(const Time &amp;original, const long double doubleToDivideBy)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>original</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>doubleToDivideBy</declname>
        </param>
        <briefdescription>
<para>Division operator of a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double (i.e. to rescale time) </para>
        </briefdescription>
        <detaileddescription>
<para>Division operator of a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double (i.e. to rescale time) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> that is to be divided by second input argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doubleToDivideBy</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which first argument is to be divided. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Divided <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="345" column="23" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="345" bodyend="356"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a553562bc9f249dd59887948475bea35a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Time &amp;timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Equality operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Equality operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="503" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1aba7aa506d348cfba3bc46b039bbd977b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Inequality operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Inqquality operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>False if two times are fully equal; true if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="516" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="516" bodyend="519"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1af81c84cf88b193a1c58ee101a20f69e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Time &amp;timeToCompare1, const int timeToCompare2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with an integer. </para>
        </briefdescription>
        <detaileddescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with an integer. Comparison is performed at double precision (i.e. integer is cast to double and compared). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (in integer precision) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="529" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1abd8361248210d163e6171ca66a75cdd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Time &amp;timeToCompare1, const double timeToCompare2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. Comparison is performed at double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (in double precision) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="542" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="542" bodyend="545"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a3318549eba72846e5d558356cbad218c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. Comparison is performed at double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (in double precision) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="555" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ae5b5c0b139267fb22496536f8d7cf668" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const double timeToCompare2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. Comparison is performed at double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (in double precision) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="568" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="568" bodyend="571"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a1fcbf4e711d6e6d302cee7e79a16b215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. </para>
        </briefdescription>
        <detaileddescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a double. Comparison is performed at double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (in double precision) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="581" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="581" bodyend="584"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1af9a670966fe04d7b51b7239175f264c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Time &amp;timeToCompare1, const long double timeToCompare2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. Comparison is performed at lgon double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to long double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (in long double precision) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="594" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="594" bodyend="597"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a4add1bc319981108bbe81d607295cce2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const long double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const long double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Equality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. Comparison is performed at lgon double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to long double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (in long double precision) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="607" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="607" bodyend="610"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a15a040eb084c1f7af77be007cd72257a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const long double timeToCompare2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. Comparison is performed at lgon double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to long double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (in long double precision) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="620" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ad75349422ac4b7e127b5fc666d094f3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const long double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const long double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Inequality operator for a <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with a long double. Comparison is performed at lgon double precision (i.e. <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> is cast to long double and compared) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (in long double precision) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if two times are fully equal; false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="633" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="633" bodyend="636"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ac6f91d53abc7e1a2c41eb76bfef56615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Time &amp;timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="645" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="645" bodyend="660"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a072b03ebbf66532a11eaa69d15befc5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than-or-equal-to operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than-or-equal-to-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="669" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="669" bodyend="684"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a32d6a4b8c1ea68c754eb1fcdd6624c32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Time &amp;timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="693" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="693" bodyend="708"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ab1a1027f41db7b2750a0abefacb209a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than-or-equal-to operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than-or-equal-to-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="717" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="717" bodyend="732"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1ac204f415f95049f2bece8edf2e539b95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Time &amp;timeToCompare1, const double timeToCompare2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="741" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="741" bodyend="744"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a8a87ee3b43ecbab8f7a9e30431a1c866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Time &amp;timeToCompare1, const long double timeToCompare2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="753" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="753" bodyend="756"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a6ec7f250c725f03c68a21950a78a7460" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const double timeToCompare2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="765" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="765" bodyend="768"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1abb04b21fae09811cd82a00a98abe2c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const long double timeToCompare2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="777" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a8a1453a3f396420c4f23da89d4901095" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Time &amp;timeToCompare1, const double timeToCompare2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="789" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="789" bodyend="792"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1aaeab0108e0bbde4b8450a12f7ce5dc2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Time &amp;timeToCompare1, const long double timeToCompare2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="801" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="801" bodyend="804"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a355a29cec48bc15fb58e420c0d225cfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const double timeToCompare2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="813" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="813" bodyend="816"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a947f0a18e59f3503a284e55150ddde48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Time &amp;timeToCompare1, const long double timeToCompare2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare (as double) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="825" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a627d5807ead9b433124fb76bc6475258" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="837" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="837" bodyend="840"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a7d3cf444b5ef2a2a2121b5d63effd297" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const long double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const long double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as long double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="849" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="849" bodyend="852"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a77399f0e8c0e74db527e0b7f3a63a0e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="861" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a78685d7cd0ceeeef5f3671eec6e22ab8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const long double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const long double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Smaller-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Smaller-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as long double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is smaller than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="873" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="873" bodyend="876"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a6f407f276218352fa72931e748e148cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="885" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a784e2a0e9abdc2473ecbad9bc1bb17f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const long double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const long double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as long double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="897" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="897" bodyend="900"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a893dc2716b2f92398e51849d6a6bd980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="909" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="909" bodyend="912"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1a0d9171b54df8bd6b9495a3a1b59b1e70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const long double timeToCompare1, const Time &amp;timeToCompare2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const long double</type>
          <declname>timeToCompare1</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToCompare2</declname>
        </param>
        <briefdescription>
<para>Greater-than-or-equal operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object with long double. </para>
        </briefdescription>
        <detaileddescription>
<para>Greater-than-or-equal operator for two <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeToCompare1</parametername>
</parameternamelist>
<parameterdescription>
<para>First time to compare (as long double) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeToCompare2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second time to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if timeToCompare1 is larger than or equal to timeToCompare2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="921" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="921" bodyend="924"/>
      </memberdef>
      <memberdef kind="friend" id="d0/d53/classtudat_1_1Time_1aac7c1a215af3271486df0efd87d5911d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const Time &amp;timeToPrint)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>timeToPrint</declname>
        </param>
        <briefdescription>
<para>Output operator for <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="927" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="927" bodyend="931"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d0/d53/classtudat_1_1Time_1a647a6b72c532bbd11b4e819ec15b28f0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::Time::normalizeMembers</definition>
        <argsstring>()</argsstring>
        <name>normalizeMembers</name>
        <briefdescription>
<para>Function to renormalize the members of the <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> object, so that secondsIntoFullPeriod_ is between 0 and 3600. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="998" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="998" bodyend="1006"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for defining time with a resolution that is sub-fs for very long periods of time. </para>
    </briefdescription>
    <detaileddescription>
<para>Class for defining time with a resolution that is sub-fs for very long periods of time. Using double or long double precision as a representation of time, the issue of reduced quality will occur that over long time-period. For instance, over a period of 10^8 seconds (about 3 years), double and long double representations have resolution of about 10^-8 and 10^-11 s respectively, which is insufficient for various applications. This type uses an int to represent the number of hours since an epoch, and long double to represent the number of seconds into the present hour. This provides a resulution of &lt; 1 femtosecond, over a range of 2147483647 hours (about 300,000 years), which is more than sufficient for practical applications. </para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" line="36" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/basics/timeType.h" bodystart="37" bodyend="1017"/>
    <listofallmembers>
      <member refid="d0/d53/classtudat_1_1Time_1af615aaf0193f8f4a2b1074c53ca2585c" prot="protected" virt="non-virtual"><scope>tudat::Time</scope><name>daysToAdd</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ad7a0e18f0575f228009af6c8f6563c49" prot="protected" virt="non-virtual"><scope>tudat::Time</scope><name>fullPeriods_</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a231fa52deea5fe52337c01af04045efb" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>getFullPeriods</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1af63a09cdff7facf0a33e97d4557c5d52" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>getSeconds</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a13976ba149860b220832421066eeb694" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>getSecondsIntoFullPeriod</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a647a6b72c532bbd11b4e819ec15b28f0" prot="protected" virt="non-virtual"><scope>tudat::Time</scope><name>normalizeMembers</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a7d7c4db665fd64c40ab360f33084230e" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator double</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1abba86a5873a3883816e2cf1cb2708b68" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator int</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a81d0f85b52c1bafe2c00ea6e92592c3f" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator long double</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1aba7aa506d348cfba3bc46b039bbd977b" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator!=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ae5b5c0b139267fb22496536f8d7cf668" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator!=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a1fcbf4e711d6e6d302cee7e79a16b215" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator!=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a15a040eb084c1f7af77be007cd72257a" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator!=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ad75349422ac4b7e127b5fc666d094f3b" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator!=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a6839a759ce0dc453d0c7ec4fcc64f0c5" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator*</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1afb70b5fc1353e811708613de2fe6de89" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator*</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a1957d457097d1513441d737c66175b5d" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator*</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a5ffc1c1d9c3ba8ad28cde5e1346946fb" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator*</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a290598017d980f65668ad7366fa7778b" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator*=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a1e7bc3cdaa8761e556379282a76b7e68" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator*=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ada13ce81f50cca6a7929ecf1e2715111" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a5e9c7ddec18a8c5e909d721386500a35" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a81a49cc250f5d46d8fc652bcb3aa4c89" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a139ddbc5e3b4b93a368c404509334feb" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ad6c6756b57a40443dce02fad7d3e3813" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a9e1836bd588822d997e7c5cbfcc41ff9" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a8569717b396abae3625c090aae733c7e" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ade04ad9e012e3afafd5c00785590b047" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator+=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a6d55218ba360b4c12999556f0cf6b35f" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a5148c9476a8aab1414684dea76346bff" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a9f010abad33c1056d320912f89f7cd48" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a6ea346d4961ca625df91e4fd81eb9568" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ae440cbdce69be6fea0f5f19ffe2a1f13" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a54a080f4f4d563b402da7b4acf79615f" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a9195c01eca670d09e96c1e3275edf253" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a34d475b6c10c7f7700f03c6910806ba7" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator-=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a8e86a3cf7414d283552450a04bca61a8" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator/</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ad1c3e65f0853debbe42a2f3efda557d0" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator/</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a6247f2fadac51a1fe77d0c889b5e7c76" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator/=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a323a8df2194a69e1a29a3992490c9b6f" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator/=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a32d6a4b8c1ea68c754eb1fcdd6624c32" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ac204f415f95049f2bece8edf2e539b95" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a8a87ee3b43ecbab8f7a9e30431a1c866" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a627d5807ead9b433124fb76bc6475258" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a7d3cf444b5ef2a2a2121b5d63effd297" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1aac7c1a215af3271486df0efd87d5911d" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;&lt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ab1a1027f41db7b2750a0abefacb209a2" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a6ec7f250c725f03c68a21950a78a7460" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1abb04b21fae09811cd82a00a98abe2c7e" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a77399f0e8c0e74db527e0b7f3a63a0e1" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a78685d7cd0ceeeef5f3671eec6e22ab8" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&lt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1aedcbd640c627656d49b1184c130c2bd2" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a553562bc9f249dd59887948475bea35a" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator==</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1af81c84cf88b193a1c58ee101a20f69e8" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator==</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1abd8361248210d163e6171ca66a75cdd4" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator==</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a3318549eba72846e5d558356cbad218c" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator==</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1af9a670966fe04d7b51b7239175f264c1" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator==</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a4add1bc319981108bbe81d607295cce2" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator==</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ac6f91d53abc7e1a2c41eb76bfef56615" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a8a1453a3f396420c4f23da89d4901095" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1aaeab0108e0bbde4b8450a12f7ce5dc2b" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a6f407f276218352fa72931e748e148cf" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a784e2a0e9abdc2473ecbad9bc1bb17f7" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a072b03ebbf66532a11eaa69d15befc5a" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a355a29cec48bc15fb58e420c0d225cfa" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a947f0a18e59f3503a284e55150ddde48" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a893dc2716b2f92398e51849d6a6bd980" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a0d9171b54df8bd6b9495a3a1b59b1e70" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>operator&gt;=</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a8187f3e83a486eefa45a37f29c186a24" prot="protected" virt="non-virtual"><scope>tudat::Time</scope><name>secondsIntoFullPeriod_</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a0c0c014c20da523f9654b5dcf6be11b4" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>Time</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1afbf3067a4bdb2fb876510c1f0ef55ce1" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>Time</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a9c7aa5e82b116e94dab3f825ce257d76" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>Time</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a624d20b7623b8b740f86f3c996898436" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>Time</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1ac7cf36cf588e9da9b781a73502f87624" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>Time</name></member>
      <member refid="d0/d53/classtudat_1_1Time_1a0c34007af7e49b34a3a7230f880ac1e5" prot="public" virt="non-virtual"><scope>tudat::Time</scope><name>Time</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
