<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings" kind="class" language="C++" prot="public">
    <compoundname>tudat::simulation_setup::TabulatedAtmosphereSettings</compoundname>
    <basecompoundref refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings" prot="public" virt="non-virtual">tudat::simulation_setup::AtmosphereSettings</basecompoundref>
    <includes refid="da/d7a/createAtmosphereModel_8h" local="no">createAtmosphereModel.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1af4b20a6ccc03095744f34648d993b198" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, std::string &gt;</type>
        <definition>std::map&lt; int, std::string &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::atmosphereFile_</definition>
        <argsstring></argsstring>
        <name>atmosphereFile_</name>
        <briefdescription>
<para>File containing atmospheric properties. </para>
        </briefdescription>
        <detaileddescription>
<para>File containing atmospheric properties, file should contain columns of atmospheric data with at least density, pressure and temperature, (whose order is specified in dependentVariables), and with at least one indendent variables. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="795" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a52d45019e095e6757f812e99639345cc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; AtmosphereIndependentVariables &gt;</type>
        <definition>std::vector&lt; AtmosphereIndependentVariables &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::independentVariables_</definition>
        <argsstring></argsstring>
        <name>independentVariables_</name>
        <briefdescription>
<para>A vector of strings containing the names of the independent variables contained in the atmosphere file. </para>
        </briefdescription>
        <detaileddescription>
<para>A vector of strings containing the names of the independent variables contained in the atmosphere file, in the correct order (from left, being the first entry in the vector, to the right). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="802" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aa27ccb8287f69a65aa0586fe8242d07c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; AtmosphereDependentVariables &gt;</type>
        <definition>std::vector&lt; AtmosphereDependentVariables &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::dependentVariables_</definition>
        <argsstring></argsstring>
        <name>dependentVariables_</name>
        <briefdescription>
<para>A vector of strings containing the names of the variables contained in the atmosphere file. </para>
        </briefdescription>
        <detaileddescription>
<para>A vector of strings containing the names of the variables contained in the atmosphere file, in the correct order (from left, being the first entry in the vector, to the right). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="809" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aa2d0bfe89a764a8aa7fe1441ad27f5ba" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::simulation_setup::TabulatedAtmosphereSettings::specificGasConstant_</definition>
        <argsstring></argsstring>
        <name>specificGasConstant_</name>
        <briefdescription>
<para>Specific gas constant of the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Specific gas constant of the atmosphere. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="815" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1af9227493351186ea498f4d6fb658b3c1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::simulation_setup::TabulatedAtmosphereSettings::ratioOfSpecificHeats_</definition>
        <argsstring></argsstring>
        <name>ratioOfSpecificHeats_</name>
        <briefdescription>
<para>Ratio of specific heats of the atmosphere at constant pressure and constant volume. </para>
        </briefdescription>
        <detaileddescription>
<para>Ratio of specific heats of the atmosphere at constant pressure and constant volume. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="821" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a7c23e2fb42d2e32744313c3708992df1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt;</type>
        <definition>std::vector&lt; interpolators::BoundaryInterpolationType &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::boundaryHandling_</definition>
        <argsstring></argsstring>
        <name>boundaryHandling_</name>
        <briefdescription>
<para>Behavior of interpolator when independent variable is outside range. </para>
        </briefdescription>
        <detaileddescription>
<para>Behavior of interpolator when independent variable is outside range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="827" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a63bc00458b4f40ea9568d3aa4e0b40ea" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::defaultExtrapolationValue_</definition>
        <argsstring></argsstring>
        <name>defaultExtrapolationValue_</name>
        <briefdescription>
<para>Default value to be used for extrapolation. </para>
        </briefdescription>
        <detaileddescription>
<para>Default value to be used for extrapolation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="833" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="833" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a2534800a0246736d9789e60a369efadc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::simulation_setup::TabulatedAtmosphereSettings::TabulatedAtmosphereSettings</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames={ altitude_dependent_atmosphere }, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames={ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }, const double specificGasConstant=physical_constants::SPECIFIC_GAS_CONSTANT_AIR, const double ratioOfSpecificHeats=1.4, const std::vector&lt; interpolators::BoundaryInterpolationType &gt; &amp;boundaryHandling={ }, const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;defaultExtrapolationValue={ })</argsstring>
        <name>TabulatedAtmosphereSettings</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
          <defval>{ altitude_dependent_atmosphere }</defval>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
          <defval>{ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
          <defval>physical_constants::SPECIFIC_GAS_CONSTANT_AIR</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
          <defval>1.4</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt; &amp;</type>
          <declname>boundaryHandling</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
          <defval>{ }</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>List of methods for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>List of default values to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="547" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="547" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a3f3b3c42806d59e53359c989b53f9b68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::simulation_setup::TabulatedAtmosphereSettings::TabulatedAtmosphereSettings</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames, const double specificGasConstant, const double ratioOfSpecificHeats, const interpolators::BoundaryInterpolationType boundaryHandling, const double defaultExtrapolationValue=IdentityElement::getAdditionIdentity&lt; double &gt;())</argsstring>
        <name>TabulatedAtmosphereSettings</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref></type>
          <declname>boundaryHandling</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>defaultExtrapolationValue</declname>
          <defval><ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; double &gt;()</defval>
        </param>
        <briefdescription>
<para>Constructor with single boundary handling parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor with single boundary handling parameters. The specifier is assumed to be the same for each (in)dependent variable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="578" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="578" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1ae12301d07bd901fd38e9719b3f0bb1c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::simulation_setup::TabulatedAtmosphereSettings::TabulatedAtmosphereSettings</definition>
        <argsstring>(const std::string &amp;atmosphereTableFile, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames={ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }, const double specificGasConstant=physical_constants::SPECIFIC_GAS_CONSTANT_AIR, const double ratioOfSpecificHeats=1.4, const interpolators::BoundaryInterpolationType boundaryHandling=interpolators::use_boundary_value, const double defaultExtrapolationValue=IdentityElement::getAdditionIdentity&lt; double &gt;())</argsstring>
        <name>TabulatedAtmosphereSettings</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
          <defval>{ density_dependent_atmosphere, pressure_dependent_atmosphere, temperature_dependent_atmosphere }</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
          <defval>physical_constants::SPECIFIC_GAS_CONSTANT_AIR</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
          <defval>1.4</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref></type>
          <declname>boundaryHandling</declname>
          <defval>interpolators::use_boundary_value</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>defaultExtrapolationValue</declname>
          <defval><ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; double &gt;()</defval>
        </param>
        <briefdescription>
<para>Constructor compatible with old version. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor compatible with old version. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File containing atmospheric properties. The file name of the atmosphere table. The file should contain four columns of data, containing altitude (first column), and the associated density, pressure and density values in the second, third and fourth columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="608" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="608" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aefa4e161a61d4f3ebe126d595b611989" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::simulation_setup::TabulatedAtmosphereSettings::TabulatedAtmosphereSettings</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames, const std::vector&lt; interpolators::BoundaryInterpolationType &gt; &amp;boundaryHandling, const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;defaultExtrapolationValue={ })</argsstring>
        <name>TabulatedAtmosphereSettings</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt; &amp;</type>
          <declname>boundaryHandling</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
          <defval>{ }</defval>
        </param>
        <briefdescription>
<para>Constructor with no specific gas constant nor ratio of specific heats. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor with no specific gas constant nor ratio of specific heats. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>List of methods for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>List of default values to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="637" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="637" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a4cbc0672afeb6d48c82d5eee45bd3398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::simulation_setup::TabulatedAtmosphereSettings::TabulatedAtmosphereSettings</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames, const std::vector&lt; interpolators::BoundaryInterpolationType &gt; &amp;boundaryHandling, const std::vector&lt; double &gt; &amp;defaultExtrapolationValue)</argsstring>
        <name>TabulatedAtmosphereSettings</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt; &amp;</type>
          <declname>boundaryHandling</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
        </param>
        <briefdescription>
<para>Constructor with no specific gas constant nor ratio of specific heats. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor with no specific gas constant nor ratio of specific heats. These two values will be given the default Earth value, or are specified inside the atmosphere table file (and thus, inside the dependent variables vector). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>List of methods for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>List of default values to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="664" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="664" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a531f2eb90a457a40ffa82f22679ac9af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::simulation_setup::TabulatedAtmosphereSettings::TabulatedAtmosphereSettings</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;atmosphereTableFile, const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;independentVariablesNames, const std::vector&lt; AtmosphereDependentVariables &gt; &amp;dependentVariablesNames, const interpolators::BoundaryInterpolationType boundaryHandling, const double defaultExtrapolationValue=IdentityElement::getAdditionIdentity&lt; double &gt;())</argsstring>
        <name>TabulatedAtmosphereSettings</name>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>atmosphereTableFile</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereIndependentVariables &gt; &amp;</type>
          <declname>independentVariablesNames</declname>
        </param>
        <param>
          <type>const std::vector&lt; AtmosphereDependentVariables &gt; &amp;</type>
          <declname>dependentVariablesNames</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref></type>
          <declname>boundaryHandling</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>defaultExtrapolationValue</declname>
          <defval><ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; double &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor with no specific gas constant nor ratio of specific heats, and with single boundary handling parameters.</para>
<para>Constructor with no specific gas constant nor ratio of specific heats. These two values will be given the default Earth value, or are specified inside the atmosphere table file (and thus, inside the dependent variables vector). Only one boundary handling parameter is specified, which is then repeated for dimension. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atmosphereTableFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of files containing information on the atmosphere. The order of both independent and dependent parameters needs to be specified in the independentVariablesNames and dependentVariablesNames vectors, respectively. Note that specific gas constant and specific heat ratio will be given the default constant values for Earth, unless they are included in the file map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>independentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of independent parameters describing the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentVariablesNames</parametername>
</parameternamelist>
<parameterdescription>
<para>List of dependent parameters output by the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundaryHandling</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for interpolation behavior when independent variable is out of range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="712" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="712" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a234c41e28994c5fb8336b9f83aeccec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; int, std::string &gt;</type>
        <definition>std::map&lt; int, std::string &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::getAtmosphereFile</definition>
        <argsstring>()</argsstring>
        <name>getAtmosphereFile</name>
        <briefdescription>
<para>Function to return file containing atmospheric properties. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return file containing atmospheric properties. <simplesect kind="return"><para>Map of filenames containing atmospheric properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="732" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="732" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aa02ed9ae762dcd211c30690bd8cc61bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tudat::simulation_setup::TabulatedAtmosphereSettings::getAtmosphereFile</definition>
        <argsstring>(const unsigned int fileIndex)</argsstring>
        <name>getAtmosphereFile</name>
        <param>
          <type>const unsigned int</type>
          <declname>fileIndex</declname>
        </param>
        <briefdescription>
<para>Function to return file containing atmospheric properties. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return file containing atmospheric properties. <simplesect kind="return"><para>Filename containing atmospheric properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="739" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="739" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a3f9eb3f4f452dee67cbc54f5a1ed6abf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; AtmosphereIndependentVariables &gt;</type>
        <definition>std::vector&lt; AtmosphereIndependentVariables &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::getIndependentVariables</definition>
        <argsstring>()</argsstring>
        <name>getIndependentVariables</name>
        <briefdescription>
<para>Function to return independent variables names. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return independent variables names. <simplesect kind="return"><para>Independent variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="749" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="749" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a4f922f832176c80130da310ea685fef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; AtmosphereDependentVariables &gt;</type>
        <definition>std::vector&lt; AtmosphereDependentVariables &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::getDependentVariables</definition>
        <argsstring>()</argsstring>
        <name>getDependentVariables</name>
        <briefdescription>
<para>Function to return dependent variables names. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return dependent variables names. <simplesect kind="return"><para>Dependent variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="756" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="756" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1ae1750e204c4b7713927b4d027a5dd69f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::simulation_setup::TabulatedAtmosphereSettings::getSpecificGasConstant</definition>
        <argsstring>()</argsstring>
        <name>getSpecificGasConstant</name>
        <briefdescription>
<para>Function to return specific gas constant of the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return specific gas constant of the atmosphere. <simplesect kind="return"><para>Specific gas constant of the atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="763" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="763" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a5968098bbeffbe5053f97d60f9c002cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::simulation_setup::TabulatedAtmosphereSettings::getRatioOfSpecificHeats</definition>
        <argsstring>()</argsstring>
        <name>getRatioOfSpecificHeats</name>
        <briefdescription>
<para>Function to return ratio of specific heats of the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return ratio of specific heats of the atmosphere. <simplesect kind="return"><para>Ratio of specific heats of the atmosphere at constant pressure and constant volume. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="770" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="770" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a09a6643ddf9695e05aff601f3e8e9459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">interpolators::BoundaryInterpolationType</ref> &gt;</type>
        <definition>std::vector&lt; interpolators::BoundaryInterpolationType &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::getBoundaryHandling</definition>
        <argsstring>()</argsstring>
        <name>getBoundaryHandling</name>
        <briefdescription>
<para>Function to return boundary handling method. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return boundary handling method. <simplesect kind="return"><para>Boundary handling method for when independent variables are outside specified range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="777" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="777" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a6e317db3f266a33f912cc87f472f1cec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt; tudat::simulation_setup::TabulatedAtmosphereSettings::getDefaultExtrapolationValue</definition>
        <argsstring>()</argsstring>
        <name>getDefaultExtrapolationValue</name>
        <briefdescription>
<para>Function to return default extrapolation value. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return boundary handling method. <simplesect kind="return"><para>Boundary handling method for when independent variables are outside specified range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="784" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="784" bodyend="784"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings" kindref="compound">AtmosphereSettings</ref> for defining an atmosphere with tabulated data from file. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::simulation_setup::AtmosphereSettings</label>
        <link refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings"/>
      </node>
      <node id="1">
        <label>tudat::simulation_setup::TabulatedAtmosphereSettings</label>
        <link refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::simulation_setup::AtmosphereSettings</label>
        <link refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings"/>
      </node>
      <node id="1">
        <label>tudat::simulation_setup::TabulatedAtmosphereSettings</label>
        <link refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" line="528" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/environment_setup/createAtmosphereModel.h" bodystart="529" bodyend="835"/>
    <listofallmembers>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1af4b20a6ccc03095744f34648d993b198" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>atmosphereFile_</name></member>
      <member refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings_1a82760111a1975705c2bd939836e8486a" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>AtmosphereSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a7c23e2fb42d2e32744313c3708992df1" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>boundaryHandling_</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a63bc00458b4f40ea9568d3aa4e0b40ea" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>defaultExtrapolationValue_</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aa27ccb8287f69a65aa0586fe8242d07c" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>dependentVariables_</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a234c41e28994c5fb8336b9f83aeccec9" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getAtmosphereFile</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aa02ed9ae762dcd211c30690bd8cc61bd" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getAtmosphereFile</name></member>
      <member refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings_1aec4287b357a3bb6abc189f7c27474531" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getAtmosphereType</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a09a6643ddf9695e05aff601f3e8e9459" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getBoundaryHandling</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a6e317db3f266a33f912cc87f472f1cec" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getDefaultExtrapolationValue</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a4f922f832176c80130da310ea685fef9" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getDependentVariables</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a3f9eb3f4f452dee67cbc54f5a1ed6abf" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getIndependentVariables</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a5968098bbeffbe5053f97d60f9c002cd" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getRatioOfSpecificHeats</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1ae1750e204c4b7713927b4d027a5dd69f" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getSpecificGasConstant</name></member>
      <member refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings_1a65fbe7e983518c965f99b9b8cb4891e0" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>getWindSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a52d45019e095e6757f812e99639345cc" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>independentVariables_</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1af9227493351186ea498f4d6fb658b3c1" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>ratioOfSpecificHeats_</name></member>
      <member refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings_1ab140972c4f4657425eff7e21ed8f0631" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>setWindSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aa2d0bfe89a764a8aa7fe1441ad27f5ba" prot="private" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>specificGasConstant_</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a2534800a0246736d9789e60a369efadc" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>TabulatedAtmosphereSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a3f3b3c42806d59e53359c989b53f9b68" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>TabulatedAtmosphereSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1ae12301d07bd901fd38e9719b3f0bb1c4" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>TabulatedAtmosphereSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1aefa4e161a61d4f3ebe126d595b611989" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>TabulatedAtmosphereSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a4cbc0672afeb6d48c82d5eee45bd3398" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>TabulatedAtmosphereSettings</name></member>
      <member refid="d6/df2/classtudat_1_1simulation__setup_1_1TabulatedAtmosphereSettings_1a531f2eb90a457a40ffa82f22679ac9af" prot="public" virt="non-virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>TabulatedAtmosphereSettings</name></member>
      <member refid="d9/dab/classtudat_1_1simulation__setup_1_1AtmosphereSettings_1a5d315b52924a7f82d4e269402c60a51c" prot="public" virt="virtual"><scope>tudat::simulation_setup::TabulatedAtmosphereSettings</scope><name>~AtmosphereSettings</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
