<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d5/d72/sphericalStateConversions_8h" kind="file" language="C++">
    <compoundname>sphericalStateConversions.h</compoundname>
    <includes refid="d4/ddb/mathematicalConstants_8h" local="yes">tudat/math/basic/mathematicalConstants.h</includes>
    <includes refid="d0/dae/basicTypedefs_8h" local="yes">tudat/basics/basicTypedefs.h</includes>
    <includes refid="d1/dda/coordinateConversions_8h" local="yes">tudat/math/basic/coordinateConversions.h</includes>
    <includes refid="d8/d7e/stateVectorIndices_8h" local="yes">tudat/astro/basic_astro/stateVectorIndices.h</includes>
    <includes refid="d2/dfa/referenceFrameTransformations_8h" local="yes">tudat/astro/reference_frames/referenceFrameTransformations.h</includes>
    <includedby refid="d9/df8/basic__astro_8h" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro.h</includedby>
    <includedby refid="da/dd6/conversions_8h" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/conversions.h</includedby>
    <includedby refid="db/d3b/state_8h" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/propagation/state.h</includedby>
    <includedby refid="dd/d6a/simulation_8h" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/simulation.h</includedby>
    <includedby refid="d6/d55/sphericalStateConversions_8cpp" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/sphericalStateConversions.cpp</includedby>
    <includedby refid="d0/d83/aerodynamicAngleCalculator_8cpp" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/reference_frames/aerodynamicAngleCalculator.cpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>tudat/astro/basic_astro/stateVectorIndices.h</label>
        <link refid="d8/d7e/stateVectorIndices_8h_source"/>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/sphericalStateConversions.h</label>
        <link refid="d5/d72/sphericalStateConversions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="11">
        <label>tudat/astro/reference_frames/referenceFrameTransformations.h</label>
        <link refid="d2/dfa/referenceFrameTransformations_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>tudat/math/basic/basicMathematicsFunctions.h</label>
        <link refid="d8/d89/basicMathematicsFunctions_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Eigen/Geometry</label>
      </node>
      <node id="6">
        <label>tudat/basics/basicTypedefs.h</label>
        <link refid="d0/dae/basicTypedefs_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="15">
        <label>boost/random/mersenne_twister.hpp</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="2">
        <label>tudat/math/basic/mathematicalConstants.h</label>
        <link refid="d4/ddb/mathematicalConstants_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tudat/math/basic/coordinateConversions.h</label>
        <link refid="d1/dda/coordinateConversions_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>complex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust.h</label>
        <link refid="d1/d69/low__thrust_8h_source"/>
      </node>
      <node id="4">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/propagation/state.h</label>
        <link refid="db/d3b/state_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup.h</label>
        <link refid="d3/d74/estimation__setup_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/sphericalStateConversions.h</label>
        <link refid="d5/d72/sphericalStateConversions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridOptimisationSetup.h</label>
        <link refid="d2/d8a/hybridOptimisationSetup_8h_source"/>
      </node>
      <node id="16">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/simsFlanaganModel.h</label>
        <link refid="dd/d49/simsFlanaganModel_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation.h</label>
        <link refid="d9/dd0/estimation_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/simsFlanaganOptimisationSetup.h</label>
        <link refid="d0/df0/simsFlanaganOptimisationSetup_8h_source"/>
      </node>
      <node id="6">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/jsonInterface.h</label>
        <link refid="df/d09/jsonInterface_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/orbitDeterminationTestCases.h</label>
        <link refid="dc/d42/orbitDeterminationTestCases_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/lowThrustOptimisationSetup.h</label>
        <link refid="da/d0e/lowThrustOptimisationSetup_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/propagation/propagator.h</label>
        <link refid="d6/d71/propagator_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro.h</label>
        <link refid="d9/df8/basic__astro_8h_source"/>
      </node>
      <node id="11">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethodModel.h</label>
        <link refid="d7/d57/hybridMethodModel_8h_source"/>
      </node>
      <node id="10">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h</label>
        <link refid="d6/dc8/hybridMethod_8h_source"/>
      </node>
      <node id="22">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/propagation_setup.h</label>
        <link refid="dd/dcc/propagation__setup_8h_source"/>
      </node>
      <node id="23">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/propagation_setup/propagationPatchedConicFullProblem.h</label>
        <link refid="db/dd1/propagationPatchedConicFullProblem_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/jsonInterfaceVariational.h</label>
        <link refid="d0/d69/jsonInterfaceVariational_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/propagation_setup/propagationCR3BPFullProblem.h</label>
        <link refid="db/de7/propagationCR3BPFullProblem_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/simulation.h</label>
        <link refid="dd/d6a/simulation_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/jsonEstimationInterface.h</label>
        <link refid="d6/d72/jsonEstimationInterface_8h_source"/>
      </node>
      <node id="13">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/simsFlanagan.h</label>
        <link refid="de/db2/simsFlanagan_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/conversions.h</label>
        <link refid="da/dd6/conversions_8h_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="d6/d6d/namespacetudat">tudat</innernamespace>
    <innernamespace refid="d1/d3e/namespacetudat_1_1orbital__element__conversions">tudat::orbital_element_conversions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2010-2019,<sp/>Delft<sp/>University<sp/>of<sp/>Technology</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>All<sp/>rigths<sp/>reserved</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Tudat.<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted<sp/>exclusively</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Modified<sp/>BSD<sp/>license.<sp/>You<sp/>should<sp/>have<sp/>received</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>a<sp/>copy<sp/>of<sp/>the<sp/>license<sp/>with<sp/>this<sp/>file.<sp/>If<sp/>not,<sp/>please<sp/>or<sp/>visit:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>http://tudat.tudelft.nl/LICENSE.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TUDAT_SPHERICALSTATECONVERSIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TUDAT_SPHERICALSTATECONVERSIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/math/basic/mathematicalConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/basics/basicTypedefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/math/basic/coordinateConversions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/astro/basic_astro/stateVectorIndices.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/astro/reference_frames/referenceFrameTransformations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d6/d6d/namespacetudat" kindref="compound">tudat</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">orbital_element_conversions</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calculateHeadingAngle(</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>velocityInVerticalFrame<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calculateFlightPathAngle(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>velocityInVerticalFrame<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">Eigen::Vector6d<sp/>convertCartesianToSphericalOrbitalState(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector6d&amp;<sp/>bodyFixedCartesianState<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StateScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>6,<sp/>1<sp/>&gt;<sp/>convertSphericalOrbitalToCartesianState(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>6,<sp/>1<sp/>&gt;&amp;<sp/>sphericalOrbitalState<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>6,<sp/>1<sp/>&gt;<sp/>cartesianState;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>Cartesian<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>3,<sp/>1<sp/>&gt;<sp/>sphericalPosition<sp/>=<sp/>sphericalOrbitalState.segment(<sp/>0,<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>sphericalPosition(<sp/>1<sp/>)<sp/>=<sp/>mathematical_constants::getPi&lt;<sp/>StateScalarType<sp/>&gt;(<sp/>)<sp/>/</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mathematical_constants::getFloatingInteger&lt;<sp/>StateScalarType<sp/>&gt;(<sp/>2<sp/>)<sp/>-<sp/>sphericalOrbitalState(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cartesianState.segment(<sp/>0,<sp/>3<sp/>)<sp/>=<sp/>coordinate_conversions::convertSphericalToCartesian&lt;<sp/>StateScalarType<sp/>&gt;(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sphericalPosition<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>flight<sp/>path<sp/>angle<sp/>and<sp/>heading<sp/>angle<sp/>are<sp/>valid<sp/>(corresponding<sp/>velocity<sp/>components<sp/>are<sp/>zero<sp/>otherwise)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFlightPathAngleValid<sp/>=<sp/>(<sp/>sphericalOrbitalState(<sp/>flightPathIndex<sp/>)<sp/>==<sp/>sphericalOrbitalState(<sp/>flightPathIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHeadingAngleValid<sp/>=<sp/>(<sp/>sphericalOrbitalState(<sp/>headingAngleIndex<sp/>)<sp/>==<sp/>sphericalOrbitalState(<sp/>headingAngleIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>velocity<sp/>in<sp/>vertical<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>3,<sp/>1<sp/>&gt;<sp/>velocityInVerticalFrame<sp/>=<sp/>Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>3,<sp/>1<sp/>&gt;::Zero(<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isFlightPathAngleValid<sp/>&amp;&amp;<sp/>isHeadingAngleValid<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityInVerticalFrame(<sp/>0<sp/>)<sp/>=<sp/>sphericalOrbitalState(<sp/>speedIndex<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cos(<sp/>sphericalOrbitalState(<sp/>flightPathIndex<sp/>)<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cos(<sp/>sphericalOrbitalState(<sp/>headingAngleIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityInVerticalFrame(<sp/>1<sp/>)<sp/>=<sp/>sphericalOrbitalState(<sp/>speedIndex<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cos(<sp/>sphericalOrbitalState(<sp/>flightPathIndex<sp/>)<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sin(<sp/>sphericalOrbitalState(<sp/>headingAngleIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isFlightPathAngleValid<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityInVerticalFrame(<sp/>2<sp/>)<sp/>=<sp/>-sphericalOrbitalState(<sp/>speedIndex<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sin(<sp/>sphericalOrbitalState(<sp/>flightPathIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>velocity<sp/>in<sp/>body-fixed<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>cartesianState.segment(<sp/>3,<sp/>3<sp/>)<sp/>=<sp/>reference_frames::getLocalVerticalToRotatingPlanetocentricFrameTransformationQuaternion(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sphericalOrbitalState(<sp/>longitudeIndex<sp/>),<sp/>sphericalOrbitalState(<sp/>latitudeIndex<sp/>)<sp/>)<sp/>*<sp/>velocityInVerticalFrame;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cartesianState;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StateScalarType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>6,<sp/>1<sp/>&gt;<sp/>convertSphericalOrbitalToCartesianState(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateScalarType<sp/>radialDistance,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateScalarType<sp/>latitude,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateScalarType<sp/>longitude,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateScalarType<sp/>speed,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateScalarType<sp/>flightPathAngle,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateScalarType<sp/>headingAngle<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convertSphericalOrbitalToCartesianState&lt;<sp/>StateScalarType<sp/>&gt;(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>Eigen::Matrix&lt;<sp/>StateScalarType,<sp/>6,<sp/>1<sp/>&gt;(<sp/>)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radialDistance,<sp/>latitude,<sp/>longitude,<sp/>speed,<sp/>flightPathAngle,<sp/>headingAngle<sp/>).finished(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>orbital_element_conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tudat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TUDAT_SPHERICALSTATECONVERSIONS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/sphericalStateConversions.h"/>
  </compounddef>
</doxygen>
