<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere" kind="class" language="C++" prot="public">
    <compoundname>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</compoundname>
    <basecompoundref refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere" prot="public" virt="non-virtual">tudat::aerodynamics::StandardAtmosphere</basecompoundref>
    <includes refid="d2/d5c/customConstantTemperatureAtmosphere_8h" local="no">customConstantTemperatureAtmosphere.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a28c2c588ea4fed783754106dccef2f2c" prot="public" static="no">
        <type>std::function&lt; double(const double, const double, const double, const double) &gt;</type>
        <definition>typedef std::function&lt; double( const double, const double, const double, const double ) &gt; tudat::aerodynamics::CustomConstantTemperatureAtmosphere::DensityFunction</definition>
        <argsstring></argsstring>
        <name>DensityFunction</name>
        <briefdescription>
<para>Typedef for density function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="118" column="2" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a4e24a006a6361d2f981d0b2536a4171c" prot="private" static="no" mutable="no">
        <type><ref refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a28c2c588ea4fed783754106dccef2f2c" kindref="member">DensityFunction</ref></type>
        <definition>DensityFunction tudat::aerodynamics::CustomConstantTemperatureAtmosphere::densityFunction_</definition>
        <argsstring></argsstring>
        <name>densityFunction_</name>
        <briefdescription>
<para>Function to compute the density at the current conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the density at the current conditions. Note that the independent variables need to be altitude, longitude, latitude and time, in this precise order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="280" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a16eb8db11c0730b1a62c7bc8fb31379a" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::constantTemperature_</definition>
        <argsstring></argsstring>
        <name>constantTemperature_</name>
        <briefdescription>
<para>Constant temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>The atmospheric temperature (constant, property of exponential atmosphere) in Kelvin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="286" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a5f469edcd668b25cd1029c9563c46fda" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::specificGasConstant_</definition>
        <argsstring></argsstring>
        <name>specificGasConstant_</name>
        <briefdescription>
<para>Specific gas constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Specific gas constant of the atmosphere, its value is assumed constant, due to the assumption of constant atmospheric composition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="293" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1adfd9fa95ad67d0fc0bf670abe1035cd2" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::ratioOfSpecificHeats_</definition>
        <argsstring></argsstring>
        <name>ratioOfSpecificHeats_</name>
        <briefdescription>
<para>Ratio of specific heats at constant pressure and constant volume. </para>
        </briefdescription>
        <detaileddescription>
<para>Ratio of specific heats of the atmosphere at constant pressure and constant volume. This value is set to a constant, implying constant atmospheric composition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="300" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a845d5af381e7a9c365f9d8e316f50872" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::CustomConstantTemperatureAtmosphere::CustomConstantTemperatureAtmosphere</definition>
        <argsstring>(const DensityFunction &amp;densityFunction, const double constantTemperature, const double specificGasConstant=physical_constants::SPECIFIC_GAS_CONSTANT_AIR, const double ratioOfSpecificHeats=1.4)</argsstring>
        <name>CustomConstantTemperatureAtmosphere</name>
        <param>
          <type>const <ref refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a28c2c588ea4fed783754106dccef2f2c" kindref="member">DensityFunction</ref> &amp;</type>
          <declname>densityFunction</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>constantTemperature</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
          <defval>physical_constants::SPECIFIC_GAS_CONSTANT_AIR</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
          <defval>1.4</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default constructor setting all parameters manually. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>densityFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to retireve the density at the current altitude, longitude, latitude and time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constantTemperature</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant atmospheric temperature. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="129" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a477c4ec395b693338f7080d24a043bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::CustomConstantTemperatureAtmosphere::CustomConstantTemperatureAtmosphere</definition>
        <argsstring>(const AvailableConstantTemperatureAtmosphereModels densityFunctionType, const double constantTemperature, const double specificGasConstant, const double ratioOfSpecificHeats, const std::vector&lt; double &gt; &amp;modelSpecificParameters)</argsstring>
        <name>CustomConstantTemperatureAtmosphere</name>
        <param>
          <type>const AvailableConstantTemperatureAtmosphereModels</type>
          <declname>densityFunctionType</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>constantTemperature</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>modelSpecificParameters</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor which uses one of the built-in density functions as input.</para>
<para>Constructor which uses one of the built-in density functions as input. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>densityFunctionType</parametername>
</parameternamelist>
<parameterdescription>
<para>Enumeration denoting which density function to implement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constantTemperature</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant atmospheric temperature. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modelSpecificParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of parameters to be used to set up the density function. Both meaning and number of parameters depends on the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="150" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/customConstantTemperatureAtmosphere.cpp" bodystart="54" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a0d504b59d098305d040d6bbb8a2aefff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a28c2c588ea4fed783754106dccef2f2c" kindref="member">DensityFunction</ref></type>
        <definition>DensityFunction tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getDensityFunction</definition>
        <argsstring>()</argsstring>
        <name>getDensityFunction</name>
        <briefdescription>
<para>Get the function to compute the density at the current conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the function to compute the density at the current conditions. <simplesect kind="return"><para>Function to compute the density at the current conditions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="162" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a498ed8e94489ff82fd72859bd2abb717" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::aerodynamics::CustomConstantTemperatureAtmosphere::setDensityFunction</definition>
        <argsstring>(DensityFunction &amp;newDensityFunction)</argsstring>
        <name>setDensityFunction</name>
        <param>
          <type><ref refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a28c2c588ea4fed783754106dccef2f2c" kindref="member">DensityFunction</ref> &amp;</type>
          <declname>newDensityFunction</declname>
        </param>
        <briefdescription>
<para>Set the function to compute the density at the current conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to reset the function to compute the density at the current conditions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newDensityFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>New function to compute the density at the current conditions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="169" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1adedf8e7997a9cde79830a47dbda40fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getConstantTemperature</definition>
        <argsstring>()</argsstring>
        <name>getConstantTemperature</name>
        <briefdescription>
<para>Get constant temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the atmospheric temperature (constant, property of exponential atmosphere) in Kelvin. <simplesect kind="return"><para>Constant atmospheric temperature in exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="180" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a970cd51dfe65c43123be1d6cd4d635db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getSpecificGasConstant</definition>
        <argsstring>()</argsstring>
        <name>getSpecificGasConstant</name>
        <briefdescription>
<para>Get specific gas constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the specific gas constant of the atmosphere in J/(kg K), its value is assumed constant, due to the assumption of constant atmospheric composition. <simplesect kind="return"><para>Specific gas constant in exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="188" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1ae3d20ee007db40cbcd925d8d3862c361" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getRatioOfSpecificHeats</definition>
        <argsstring>()</argsstring>
        <name>getRatioOfSpecificHeats</name>
        <briefdescription>
<para>Get ratio of specific heats. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the ratio of specific hears of the atmosphere, its value is assumed constant, due to the assumption of constant atmospheric composition. <simplesect kind="return"><para>Ratio of specific heats exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="196" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1aec4c635662ac4326a258050198566bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getDensity</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getDensity</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1a85b7e8803277496e8f5abc9bb36d5bf6">getDensity</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local density. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local density of the atmosphere in kg per meter^3. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric density at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="207" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1aa528e85b47ff5d2c79c4de81cc0600de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getPressure</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getPressure</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1aedd2b6b8824cebea8dea628bfec0e236">getPressure</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local pressure. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local pressure of the atmosphere in Newton per meter^2. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric pressure at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="222" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1afe9798b9b989e94972f321b70b0c1e78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getTemperature</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getTemperature</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1ac5b9a16a96cbb496a4ee76b3dc495543">getTemperature</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local temperature of the atmosphere in Kelvin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which temperature is to be computed (not used since temperature is assumed to be constant). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which temperature is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which temperature is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which temperature is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constantTemperature Atmospheric temperature at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="241" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="241" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1afe035645c57295795ff76feb18993378" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::CustomConstantTemperatureAtmosphere::getSpeedOfSound</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getSpeedOfSound</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1a9992c99f7994882307b05161e19fc298">getSpeedOfSound</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local speed of sound in the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the speed of sound in the atmosphere in m/s. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which speed of sounds is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which speed of sounds is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which speed of sounds is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which speed of sounds is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric speed of sounds at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="263" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="263" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Custom constant temperature atmosphere class. </para>
    </briefdescription>
    <detaileddescription>
<para>Custom constant temperature atmosphere class. This atmosphere model is initialized by giving as input a function for the density which may depend on altitude, longitude, latitude and time. The pressure is then determined with the ideal gas law, and the temperature is assumed to be constant throughtout the atmosphere domain. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>tudat::aerodynamics::AtmosphereModel</label>
        <link refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel"/>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::StandardAtmosphere</label>
        <link refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</label>
        <link refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>tudat::aerodynamics::AtmosphereModel</label>
        <link refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel"/>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::StandardAtmosphere</label>
        <link refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</label>
        <link refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" line="112" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/customConstantTemperatureAtmosphere.h" bodystart="113" bodyend="302"/>
    <listofallmembers>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a16eb8db11c0730b1a62c7bc8fb31379a" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>constantTemperature_</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a845d5af381e7a9c365f9d8e316f50872" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>CustomConstantTemperatureAtmosphere</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a477c4ec395b693338f7080d24a043bc5" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>CustomConstantTemperatureAtmosphere</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a28c2c588ea4fed783754106dccef2f2c" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>DensityFunction</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a4e24a006a6361d2f981d0b2536a4171c" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>densityFunction_</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1adedf8e7997a9cde79830a47dbda40fa5" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getConstantTemperature</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1aec4c635662ac4326a258050198566bd2" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getDensity</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a0d504b59d098305d040d6bbb8a2aefff" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getDensityFunction</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1aa528e85b47ff5d2c79c4de81cc0600de" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getPressure</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1ae3d20ee007db40cbcd925d8d3862c361" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getRatioOfSpecificHeats</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a970cd51dfe65c43123be1d6cd4d635db" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getSpecificGasConstant</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1afe035645c57295795ff76feb18993378" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getSpeedOfSound</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1afe9798b9b989e94972f321b70b0c1e78" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getTemperature</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1aa6948868e4d053536cdd97d70bea63e4" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>getWindModel</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1adfd9fa95ad67d0fc0bf670abe1035cd2" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>ratioOfSpecificHeats_</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a498ed8e94489ff82fd72859bd2abb717" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>setDensityFunction</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1abed0c184d0864d3f7f7860240f09fa22" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>setWindModel</name></member>
      <member refid="d5/dc8/classtudat_1_1aerodynamics_1_1CustomConstantTemperatureAtmosphere_1a5f469edcd668b25cd1029c9563c46fda" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>specificGasConstant_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1a02355eaebd0b2c00f2f2fd1836ac9697" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>windModel_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1a1ceb7bfb8c497ca6b6a0ccbade902ed7" prot="public" virt="virtual"><scope>tudat::aerodynamics::CustomConstantTemperatureAtmosphere</scope><name>~AtmosphereModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
