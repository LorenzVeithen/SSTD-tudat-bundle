<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d5/d92/namespacetudat_1_1estimatable__parameters" kind="namespace" language="C++">
    <compoundname>tudat::estimatable_parameters</compoundname>
    <innerclass refid="d0/d25/classtudat_1_1estimatable__parameters_1_1ConstantDragCoefficient" prot="public">tudat::estimatable_parameters::ConstantDragCoefficient</innerclass>
    <innerclass refid="d5/dbe/classtudat_1_1estimatable__parameters_1_1ArcWiseConstantDragCoefficient" prot="public">tudat::estimatable_parameters::ArcWiseConstantDragCoefficient</innerclass>
    <innerclass refid="d3/d35/classtudat_1_1estimatable__parameters_1_1ConstantRotationalOrientation" prot="public">tudat::estimatable_parameters::ConstantRotationalOrientation</innerclass>
    <innerclass refid="dd/de0/classtudat_1_1estimatable__parameters_1_1RotationRate" prot="public">tudat::estimatable_parameters::RotationRate</innerclass>
    <innerclass refid="d3/dbe/classtudat_1_1estimatable__parameters_1_1CoreFactor" prot="public">tudat::estimatable_parameters::CoreFactor</innerclass>
    <innerclass refid="df/dcf/classtudat_1_1estimatable__parameters_1_1DesaturationDeltaV" prot="public">tudat::estimatable_parameters::DesaturationDeltaV</innerclass>
    <innerclass refid="d7/d9a/classtudat_1_1estimatable__parameters_1_1DirectTidalTimeLag" prot="public">tudat::estimatable_parameters::DirectTidalTimeLag</innerclass>
    <innerclass refid="d1/d3d/classtudat_1_1estimatable__parameters_1_1EmpiricalAccelerationCoefficientsParameter" prot="public">tudat::estimatable_parameters::EmpiricalAccelerationCoefficientsParameter</innerclass>
    <innerclass refid="da/d48/classtudat_1_1estimatable__parameters_1_1ArcWiseEmpiricalAccelerationCoefficientsParameter" prot="public">tudat::estimatable_parameters::ArcWiseEmpiricalAccelerationCoefficientsParameter</innerclass>
    <innerclass refid="d4/da0/classtudat_1_1estimatable__parameters_1_1EquivalencePrincipleLpiViolationParameter" prot="public">tudat::estimatable_parameters::EquivalencePrincipleLpiViolationParameter</innerclass>
    <innerclass refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" prot="public">tudat::estimatable_parameters::EstimatableParameter</innerclass>
    <innerclass refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" prot="public">tudat::estimatable_parameters::EstimatableParameterSet</innerclass>
    <innerclass refid="d7/d74/classtudat_1_1estimatable__parameters_1_1FreeCoreNutationRate" prot="public">tudat::estimatable_parameters::FreeCoreNutationRate</innerclass>
    <innerclass refid="db/d28/classtudat_1_1estimatable__parameters_1_1GravitationalParameter" prot="public">tudat::estimatable_parameters::GravitationalParameter</innerclass>
    <innerclass refid="dc/d00/classtudat_1_1estimatable__parameters_1_1GroundStationPosition" prot="public">tudat::estimatable_parameters::GroundStationPosition</innerclass>
    <innerclass refid="d5/dc8/classtudat_1_1estimatable__parameters_1_1InitialRotationalStateParameter" prot="public">tudat::estimatable_parameters::InitialRotationalStateParameter</innerclass>
    <innerclass refid="dc/d3b/classtudat_1_1estimatable__parameters_1_1InitialTranslationalStateParameter" prot="public">tudat::estimatable_parameters::InitialTranslationalStateParameter</innerclass>
    <innerclass refid="da/d2f/classtudat_1_1estimatable__parameters_1_1ArcWiseInitialTranslationalStateParameter" prot="public">tudat::estimatable_parameters::ArcWiseInitialTranslationalStateParameter</innerclass>
    <innerclass refid="dd/d89/classtudat_1_1estimatable__parameters_1_1MeanMomentOfInertiaParameter" prot="public">tudat::estimatable_parameters::MeanMomentOfInertiaParameter</innerclass>
    <innerclass refid="de/d27/classtudat_1_1estimatable__parameters_1_1ConstantObservationBiasParameter" prot="public">tudat::estimatable_parameters::ConstantObservationBiasParameter</innerclass>
    <innerclass refid="dc/ddb/classtudat_1_1estimatable__parameters_1_1ArcWiseObservationBiasParameter" prot="public">tudat::estimatable_parameters::ArcWiseObservationBiasParameter</innerclass>
    <innerclass refid="dc/d2a/classtudat_1_1estimatable__parameters_1_1PeriodicSpinVariation" prot="public">tudat::estimatable_parameters::PeriodicSpinVariation</innerclass>
    <innerclass refid="d6/dc7/classtudat_1_1estimatable__parameters_1_1PolarMotionAmplitude" prot="public">tudat::estimatable_parameters::PolarMotionAmplitude</innerclass>
    <innerclass refid="da/da3/classtudat_1_1estimatable__parameters_1_1PPNParameterGamma" prot="public">tudat::estimatable_parameters::PPNParameterGamma</innerclass>
    <innerclass refid="d1/dfa/classtudat_1_1estimatable__parameters_1_1PPNParameterBeta" prot="public">tudat::estimatable_parameters::PPNParameterBeta</innerclass>
    <innerclass refid="d3/dc8/classtudat_1_1estimatable__parameters_1_1RadiationPressureCoefficient" prot="public">tudat::estimatable_parameters::RadiationPressureCoefficient</innerclass>
    <innerclass refid="d7/d71/classtudat_1_1estimatable__parameters_1_1ArcWiseRadiationPressureCoefficient" prot="public">tudat::estimatable_parameters::ArcWiseRadiationPressureCoefficient</innerclass>
    <innerclass refid="d6/d3c/classtudat_1_1estimatable__parameters_1_1SphericalHarmonicsCosineCoefficients" prot="public">tudat::estimatable_parameters::SphericalHarmonicsCosineCoefficients</innerclass>
    <innerclass refid="db/dfc/classtudat_1_1estimatable__parameters_1_1SphericalHarmonicsSineCoefficients" prot="public">tudat::estimatable_parameters::SphericalHarmonicsSineCoefficients</innerclass>
    <innerclass refid="da/d3c/classtudat_1_1estimatable__parameters_1_1TidalLoveNumber" prot="public">tudat::estimatable_parameters::TidalLoveNumber</innerclass>
    <innerclass refid="df/de2/classtudat_1_1estimatable__parameters_1_1FullDegreeTidalLoveNumber" prot="public">tudat::estimatable_parameters::FullDegreeTidalLoveNumber</innerclass>
    <innerclass refid="d2/d70/classtudat_1_1estimatable__parameters_1_1SingleDegreeVariableTidalLoveNumber" prot="public">tudat::estimatable_parameters::SingleDegreeVariableTidalLoveNumber</innerclass>
    <innerclass refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" prot="public">tudat::estimatable_parameters::EstimatableParameterSettings</innerclass>
    <innerclass refid="d9/d8a/classtudat_1_1estimatable__parameters_1_1SphericalHarmonicEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::SphericalHarmonicEstimatableParameterSettings</innerclass>
    <innerclass refid="db/d7c/classtudat_1_1estimatable__parameters_1_1ConstantObservationBiasEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::ConstantObservationBiasEstimatableParameterSettings</innerclass>
    <innerclass refid="d8/d21/classtudat_1_1estimatable__parameters_1_1ArcWiseConstantObservationBiasEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::ArcWiseConstantObservationBiasEstimatableParameterSettings</innerclass>
    <innerclass refid="d4/df6/classtudat_1_1estimatable__parameters_1_1InitialTranslationalStateEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::InitialTranslationalStateEstimatableParameterSettings</innerclass>
    <innerclass refid="d5/dc4/classtudat_1_1estimatable__parameters_1_1ArcWiseInitialTranslationalStateEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::ArcWiseInitialTranslationalStateEstimatableParameterSettings</innerclass>
    <innerclass refid="d0/da8/classtudat_1_1estimatable__parameters_1_1InitialRotationalStateEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::InitialRotationalStateEstimatableParameterSettings</innerclass>
    <innerclass refid="db/d28/classtudat_1_1estimatable__parameters_1_1EmpiricalAccelerationEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::EmpiricalAccelerationEstimatableParameterSettings</innerclass>
    <innerclass refid="d8/d84/classtudat_1_1estimatable__parameters_1_1ArcWiseEmpiricalAccelerationEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::ArcWiseEmpiricalAccelerationEstimatableParameterSettings</innerclass>
    <innerclass refid="d8/d7a/classtudat_1_1estimatable__parameters_1_1ArcWiseRadiationPressureCoefficientEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::ArcWiseRadiationPressureCoefficientEstimatableParameterSettings</innerclass>
    <innerclass refid="d3/dc1/classtudat_1_1estimatable__parameters_1_1ArcWiseDragCoefficientEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::ArcWiseDragCoefficientEstimatableParameterSettings</innerclass>
    <innerclass refid="dd/d10/classtudat_1_1estimatable__parameters_1_1FullDegreeTidalLoveNumberEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::FullDegreeTidalLoveNumberEstimatableParameterSettings</innerclass>
    <innerclass refid="da/d98/classtudat_1_1estimatable__parameters_1_1SingleDegreeVariableTidalLoveNumberEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::SingleDegreeVariableTidalLoveNumberEstimatableParameterSettings</innerclass>
    <innerclass refid="db/d03/classtudat_1_1estimatable__parameters_1_1DirectTidalTimeLagEstimatableParameterSettings" prot="public">tudat::estimatable_parameters::DirectTidalTimeLagEstimatableParameterSettings</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8" prot="public" static="no" strong="no">
        <type></type>
        <name>EstimatebleParametersEnum</name>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a2d228b3b7f9518b7bc6e3563e6d9b7d5" prot="public">
          <name>arc_wise_initial_body_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8aeb76decc0de1cb858d75afa95bf516d7" prot="public">
          <name>initial_body_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a18bb76da270d53a3fb3aa6243127e241" prot="public">
          <name>initial_rotational_body_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a5016837b6c2f28600317dd2c9671cf71" prot="public">
          <name>gravitational_parameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a4a4eb5abc67b90276eaba7a5ab3d9d80" prot="public">
          <name>constant_drag_coefficient</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a3f3efb9b507f8f37940872156f32e950" prot="public">
          <name>radiation_pressure_coefficient</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a5e80c5e839b6e107b737bb9efadb2d5c" prot="public">
          <name>arc_wise_radiation_pressure_coefficient</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a98c4e20dbcfff1a32c70e68e0829c300" prot="public">
          <name>spherical_harmonics_cosine_coefficient_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a37970ca87efef5970c010ad1beb38ea1" prot="public">
          <name>spherical_harmonics_sine_coefficient_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a750c2d0a6f395f44caf3358b6c186e7d" prot="public">
          <name>constant_rotation_rate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8aaf9d7bdb57ac8a29ba503dc5a7faaf88" prot="public">
          <name>rotation_pole_position</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a3ca2a999cc0b18b04b86318b2b6a98ad" prot="public">
          <name>constant_additive_observation_bias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8af1b82498b02e4c4a22240028bd8c80c0" prot="public">
          <name>arcwise_constant_additive_observation_bias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8ae3671fea45e6848b61819d553348296e" prot="public">
          <name>constant_relative_observation_bias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a8971688d3e754e2918c3efdc1a18dfee" prot="public">
          <name>arcwise_constant_relative_observation_bias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a9be11152a6138c73c6dfd75cdc6e3aff" prot="public">
          <name>ppn_parameter_gamma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a1dbeab363b4fe098217f327c5dce0d91" prot="public">
          <name>ppn_parameter_beta</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a610122aa079bfce218da04cef3f3c3e3" prot="public">
          <name>ground_station_position</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a6cb89bd5fef31f912e525e0be869bc38" prot="public">
          <name>equivalence_principle_lpi_violation_parameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8af6c9848c08666365d79b57d21d2d5c11" prot="public">
          <name>empirical_acceleration_coefficients</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8ab02a576d155f3a5de2e60b8f2590ddfc" prot="public">
          <name>arc_wise_empirical_acceleration_coefficients</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a804804dc8b189cd9935096903801e253" prot="public">
          <name>full_degree_tidal_love_number</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a16c15818b924be4054e8c32aa943b392" prot="public">
          <name>single_degree_variable_tidal_love_number</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a6b62df445bb6e4453ef8051c3b799dc4" prot="public">
          <name>direct_dissipation_tidal_time_lag</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a2f79892a9267ba328d030ca2503a86fe" prot="public">
          <name>mean_moment_of_inertia</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a3b5bc3de73776f30126df3b9c351c775" prot="public">
          <name>arc_wise_constant_drag_coefficient</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a083fbf1c2c2308159b1cec2bb9bcf84e" prot="public">
          <name>periodic_spin_variation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a75c8a4f2631a3a630ace376b63359e06" prot="public">
          <name>polar_motion_amplitude</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8abc5105065cc88162e7ff919af2d9c275" prot="public">
          <name>core_factor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8a75321c6bfe8adad95aabe929cc509a14" prot="public">
          <name>free_core_nutation_rate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d2d/estimatableParameter_8h_1aa6910f86d3240d08f92b4541f4032ca8aaf9cb409a2750379e11c80673003bc58" prot="public">
          <name>desaturation_delta_v_values</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List of parameters that can be estimated by the orbit determination code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="34" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="35" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="da/d2d/estimatableParameter_8h_1a62f1a23030576659d0fa6b023e199dce" prot="public" static="no">
        <type>std::pair&lt; EstimatebleParametersEnum, std::pair&lt; std::string, std::string &gt; &gt;</type>
        <definition>typedef std::pair&lt; EstimatebleParametersEnum, std::pair&lt; std::string, std::string &gt; &gt; tudat::estimatable_parameters::EstimatebleParameterIdentifier</definition>
        <argsstring></argsstring>
        <name>EstimatebleParameterIdentifier</name>
        <briefdescription>
<para>Typedef for full parameter identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="113" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d9/d15/tidalLoveNumber_8h_1a482a712eccbf402e02a38aeaacbfd2f9" prot="public" static="yes" mutable="no">
        <type>const std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>const std::vector&lt; std::vector&lt; int &gt; &gt; tudat::estimatable_parameters::fullDegreeOrders</definition>
        <argsstring></argsstring>
        <name>fullDegreeOrders</name>
        <initializer>=
{ { 0, 1, 2 }, { 0, 1, 2, 3 }, { 0, 1, 2, 3, 4 }, { 0, 1, 2, 3, 4, 5 }, { 0, 1, 2, 3, 4, 5, 6 } }</initializer>
        <briefdescription>
<para>List of all orders in a single degree (starting at 2) </para>
        </briefdescription>
        <detaileddescription>
<para>List of all orders in a single degree (starting at 2), generated at compile time and used for tidal love number partial interface function calls over a full degree. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/tidalLoveNumber.h" line="30" column="26" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/tidalLoveNumber.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d2a/parameter_8h_1af6b27857a069850fbd4b757ee91067c1" prot="public" static="yes" mutable="no">
        <type>std::map&lt; EstimatebleParametersEnum, std::string &gt;</type>
        <definition>std::map&lt; EstimatebleParametersEnum, std::string &gt; tudat::estimatable_parameters::estimatedParameterTypes</definition>
        <argsstring></argsstring>
        <name>estimatedParameterTypes</name>
        <initializer>=
{
    { arc_wise_initial_body_state, &quot;arcWiseInitialBodyState&quot; },
    { initial_body_state, &quot;initialBodyState&quot; },
    { gravitational_parameter, &quot;gravitationalParameter&quot; },
    { constant_drag_coefficient, &quot;constantDragCoefficient&quot; },
    { radiation_pressure_coefficient, &quot;radiationPressureCoefficient&quot; },
    { arc_wise_radiation_pressure_coefficient, &quot;arcWiseRadiationPressureCoefficient&quot; },
    { spherical_harmonics_cosine_coefficient_block, &quot;sphericalHarmonicsCosineCoefficientBlock&quot; },
    { spherical_harmonics_sine_coefficient_block, &quot;sphericalHarmonicsSineCoefficientBlock&quot; },
    { constant_rotation_rate, &quot;constantRotationRate&quot; },
    { rotation_pole_position, &quot;rotationPolePosition&quot; },
    { constant_additive_observation_bias, &quot;constantAdditiveObservationBias&quot; },
    { arcwise_constant_additive_observation_bias, &quot;arcwiseConstantAdditiveObservationBias&quot; },
    { constant_relative_observation_bias, &quot;constantRelativeObservationBias&quot; },
    { arcwise_constant_relative_observation_bias, &quot;arcwiseConstantRelativeObservationBias&quot; },
    { ppn_parameter_gamma, &quot;ppnParameterGamma&quot; },
    { ppn_parameter_beta, &quot;ppnParameterBeta&quot; },
    { ground_station_position, &quot;groundStationPosition&quot; },
    { equivalence_principle_lpi_violation_parameter, &quot;equivalencePrincipleLpiViolationParameter&quot; },
    { empirical_acceleration_coefficients, &quot;empiricalAccelerationCoefficients&quot; },
    { arc_wise_empirical_acceleration_coefficients, &quot;arcWiseEmpiricalAccelerationCoefficients&quot; },
    { full_degree_tidal_love_number, &quot;fullDegreeTidalLoveNumber&quot; },
    { single_degree_variable_tidal_love_number, &quot;singleDegreeVariableTidalLoveNumber&quot; },
    { direct_dissipation_tidal_time_lag, &quot;directDissipationTidalTimeLag&quot; }
}</initializer>
        <briefdescription>
<para>Map of <computeroutput>PropagationDependentVariables</computeroutput> string representations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" line="28" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a64040d779a12c985966d367732e973a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tudat::estimatable_parameters::getParameterTypeString</definition>
        <argsstring>(const EstimatebleParametersEnum parameterType)</argsstring>
        <name>getParameterTypeString</name>
        <param>
          <type>const EstimatebleParametersEnum</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" line="19" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" bodystart="19" bodyend="123" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" declline="69" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a7dd14b01381c51648f635a5dfb893611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::estimatable_parameters::isParameterDynamicalPropertyInitialState</definition>
        <argsstring>(const EstimatebleParametersEnum parameterType)</argsstring>
        <name>isParameterDynamicalPropertyInitialState</name>
        <param>
          <type>const EstimatebleParametersEnum</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Function to determine whether the given parameter represents an initial dynamical state, or a static parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to determine whether the given parameter represents an initial dynamical state, or a static parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterType</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if parameter is an initial dynamical state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" line="126" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" bodystart="126" bodyend="145" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a797b5813bdacd4763d752db449abc03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::estimatable_parameters::isDoubleParameter</definition>
        <argsstring>(const EstimatebleParametersEnum parameterType)</argsstring>
        <name>isDoubleParameter</name>
        <param>
          <type>const EstimatebleParametersEnum</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Function to determine whether the given (non-dynamical) parameter is a double or vector parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to determine whether the given (non-dynamical) parameter is a double or vector parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterType</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if parameter is a double parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" line="148" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" bodystart="148" bodyend="242" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a0a90dfd3a8219db7d492413ec401a27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::estimatable_parameters::isParameterRotationMatrixProperty</definition>
        <argsstring>(const EstimatebleParametersEnum parameterType)</argsstring>
        <name>isParameterRotationMatrixProperty</name>
        <param>
          <type>const EstimatebleParametersEnum</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Function to determine whether the given (non-dynamical) parameter influences a body&apos;s orientation. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to determine whether the given (non-dynamical) parameter influences a body&apos;s orientation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterType</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if parameter is a property of rotation model </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" line="245" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" bodystart="245" bodyend="276" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a33a5086289962239dc78996bf074796f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::estimatable_parameters::isParameterObservationLinkProperty</definition>
        <argsstring>(const EstimatebleParametersEnum parameterType)</argsstring>
        <name>isParameterObservationLinkProperty</name>
        <param>
          <type>const EstimatebleParametersEnum</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Function to determine whether the given parameter influences an observation link directly. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to determine whether the given parameter influences an observation link directly, such as observation biases or clock parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterType</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if parameter is a property of an observation link </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" line="279" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" bodystart="279" bodyend="301" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a710e2b8197fdc6df446d1a9efac59633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::estimatable_parameters::isParameterTidalProperty</definition>
        <argsstring>(const EstimatebleParametersEnum parameterType)</argsstring>
        <name>isParameterTidalProperty</name>
        <param>
          <type>const EstimatebleParametersEnum</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Function to determine whether the given parameter influences a body&apos;s tidal gravity field variations. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to determine whether the given parameter influences a body&apos;s tidal gravity field variations. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterType</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if parameter influences a body&apos;s tidal gravity field variations. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" line="304" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/estimatableParameter.cpp" bodystart="304" bodyend="320" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1aa7f8800cb057dd5c3579faac43ff0fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ParameterType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool tudat::estimatable_parameters::isDynamicalParameterSingleArc</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameter&lt; Eigen::Matrix&lt; ParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; parameterToCheck)</argsstring>
        <name>isDynamicalParameterSingleArc</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">EstimatableParameter</ref>&lt; Eigen::Matrix&lt; ParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt;</type>
          <declname>parameterToCheck</declname>
        </param>
        <briefdescription>
<para>Function to determine if an initial state parameter is a single- or multi-arc parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to determine if an initial state parameter is a single- or multi-arc parameter. Function throws an error, if input is not an initial state parameter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterToCheck</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter object for which the check is to be performed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True of parameter is single-arc, false if multi-arc </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="241" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="241" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a837fa5381b570e17bec5c50e88afff63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StateScalarType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">estimatable_parameters::EstimatableParameterSet</ref>&lt; StateScalarType &gt; &gt;</type>
        <definition>std::shared_ptr&lt; estimatable_parameters::EstimatableParameterSet&lt; StateScalarType &gt; &gt; tudat::estimatable_parameters::createEstimatableParameterSetArcSubSet</definition>
        <argsstring>(std::shared_ptr&lt; estimatable_parameters::EstimatableParameterSet&lt; StateScalarType &gt; &gt; parametersToEstimate, const bool getSingleArcParameters)</argsstring>
        <name>createEstimatableParameterSetArcSubSet</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">estimatable_parameters::EstimatableParameterSet</ref>&lt; StateScalarType &gt; &gt;</type>
          <declname>parametersToEstimate</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>getSingleArcParameters</declname>
        </param>
        <briefdescription>
<para>Function to create a subset of all estimated parameters, with either only single-arc or multi-arc initial state parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create a subset of all estimated parameters, with either only single-arc or multi-arc initial state parameter. All non-dynamical state parameters are copied from the input to the output <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parametersToEstimate</parametername>
</parameternamelist>
<parameterdescription>
<para>Total set of parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getSingleArcParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether single- or multi-arc initial state parameters are to be kept </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subset of all estimated parameters, with either only single-arc or multi-arc initial state parameter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="827" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="827" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a24e7e2302c629c49d6cbe7f0fdbe9d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::estimatable_parameters::printEstimatableParameterEntries</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>printEstimatableParameterEntries</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="848" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="848" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a4a5de45a9ae15457c3c58fa446d722d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; tudat::estimatable_parameters::getListOfBodiesWithTranslationalStateToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfBodiesWithTranslationalStateToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to get the list of names of bodies for which initial translational dynamical state is estimated. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the list of names of bodies for which initial translational dynamical state is estimated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Object containing all parameters that are to be estimated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of names of bodies for which initial state is estimated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="890" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="890" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a78d860ff4123f35c9878fe4c703c855c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; tudat::estimatable_parameters::getListOfBodiesWithRotationalStateToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfBodiesWithRotationalStateToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to get the list of names of bodies for which initial rotational dynamical state is estimated. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the list of names of bodies for which initial rotational dynamical state is estimated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Object containing all parameters that are to be estimated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of names of bodies for which initial rotational state is estimated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="919" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="919" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1aaa659916a532630937e4bd648b89b49d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">EstimatableParameter</ref>&lt; Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::shared_ptr&lt; EstimatableParameter&lt;Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; &gt; tudat::estimatable_parameters::getListOfBodiesWithTranslationalMultiArcStateToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfBodiesWithTranslationalMultiArcStateToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the list of bodies for which the translational state is estimated in a multi-arc fashion. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the list of bodies for which the translational state is estimated in a multi-arc fashion <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Full set of estimated parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of parameters (with body names as keys) used for the multi-arc estimation of initial translational state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="949" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="949" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a2f1b09194f873770c14fe6dc1d220b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::map&lt; propagators::IntegratedStateType, std::vector&lt; std::string &gt; &gt;</type>
        <definition>std::map&lt; propagators::IntegratedStateType, std::vector&lt; std::string &gt; &gt; tudat::estimatable_parameters::getListOfBodiesToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfBodiesToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the list of bodies for which an initial dynamical state is to be estimated. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the list of bodies for which an initial dynamical state is to be estimated <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Full set of estimated parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of bodies for which an initial dynamical state is estimated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="980" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="980" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1ac278f4c332c5802592b068ea03bc9bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; &gt; tudat::estimatable_parameters::getListOfTranslationalStateParametersToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfTranslationalStateParametersToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the list of translational state parameters from full parameter list. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the list of translational state parameters from full parameter list <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Full set of estimated parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of translational state parameters </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="1014" column="2" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="1014" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a7ad55dbd6544e5be8f4b67e48742ab5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="d7/d7c/classtudat_1_1estimatable__parameters_1_1EstimatableParameter" kindref="compound">estimatable_parameters::EstimatableParameter</ref>&lt; Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; estimatable_parameters::EstimatableParameter&lt; Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; &gt; &gt; &gt; tudat::estimatable_parameters::getListOfRotationalStateParametersToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfRotationalStateParametersToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the list of rotational state parameters from full parameter list. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the list of rotational state parameters from full parameter list <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Full set of estimated parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of rotational state parameters </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="1044" column="2" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="1044" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a1ebb8d45fabd0720b3ccef74e4b53f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::map&lt; propagators::IntegratedStateType, std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; &gt;</type>
        <definition>std::map&lt; propagators::IntegratedStateType, std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; &gt; tudat::estimatable_parameters::getListOfInitialDynamicalStateParametersEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getListOfInitialDynamicalStateParametersEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to get the complete list of initial dynamical states that are to be estimated, sorted by dynamics type. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the complete list of initial dynamical states that are to be estimated, sorted by dynamics type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Object containing all parameters that are to be estimated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Map containing dynamics type (key) and vector of pairs: list of bodies (first in pair) with reference point identifier (second in pair; empty if not relevant) for which given dynamics type is estimated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="1074" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="1074" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="da/d2d/estimatableParameter_8h_1a338f0dcc3a844e7dd9a76edf76306372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt;</type>
        <definition>Eigen::Matrix&lt; InitialStateParameterType, Eigen::Dynamic, 1 &gt; tudat::estimatable_parameters::getInitialStateVectorOfBodiesToEstimate</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters)</argsstring>
        <name>getInitialStateVectorOfBodiesToEstimate</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <briefdescription>
<para>Function to get initial state vector of estimated dynamical states. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get initial state vector of estimated dynamical states (i.e. presently estimated state at propagation start time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Object containing all parameters that are to be estimated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State vector of estimated dynamics at propagation start time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" line="1110" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/estimatableParameter.h" bodystart="1110" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="da/d91/initialTranslationalState_8h_1a87eae3d539c4f075598ec90e63b59728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tudat::estimatable_parameters::getSingleArcParameterSetSize</definition>
        <argsstring>(std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameterSet)</argsstring>
        <name>getSingleArcParameterSetSize</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameterSet</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the size of the estimatable parameter set. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the size of the estimatable parameter set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameterSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of estimatable parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of parameter set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/initialTranslationalState.h" line="276" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/initialTranslationalState.h" bodystart="276" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="da/d91/initialTranslationalState_8h_1ab9e4298c97b34817f903ea8d68c3fcec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tudat::estimatable_parameters::getSingleArcInitialDynamicalStateParameterSetSize</definition>
        <argsstring>(std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameterSet)</argsstring>
        <name>getSingleArcInitialDynamicalStateParameterSetSize</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameterSet</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the size of the dynamical state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the size of the dynamical state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameterSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of estimatable parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the initial dynamical state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/initialTranslationalState.h" line="309" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/initialTranslationalState.h" bodystart="309" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="da/d91/initialTranslationalState_8h_1a082c68cbb02570b670a8d071d811dbfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InitialStateParameterType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; tudat::estimatable_parameters::getMultiArcStateEstimationArcStartTimes</definition>
        <argsstring>(const std::shared_ptr&lt; EstimatableParameterSet&lt; InitialStateParameterType &gt; &gt; estimatableParameters, const bool throwErrorOnSingleArcDynamics=true)</argsstring>
        <name>getMultiArcStateEstimationArcStartTimes</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="de/d00/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSet" kindref="compound">EstimatableParameterSet</ref>&lt; InitialStateParameterType &gt; &gt;</type>
          <declname>estimatableParameters</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>throwErrorOnSingleArcDynamics</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Function to get arc start times from list of estimated parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get arc start times from list of estimated parameters. Function throws an error if multiple arc-wise estimations are found, but arc times are not compatible <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimatableParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>List of estimated parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>throwErrorOnSingleArcDynamics</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether to throw an exception if single arc dynamics are used (default true) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Start times for estimation arcs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/initialTranslationalState.h" line="326" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/initialTranslationalState.h" bodystart="326" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="d7/d71/sphericalHarmonicCosineCoefficients_8h_1ae9d2d15428f76166564bab4a48907367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::estimatable_parameters::getKaulaConstraintVector</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; blockIndices, const double constraintMultiplier)</argsstring>
        <name>getKaulaConstraintVector</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; int, int &gt; &gt;</type>
          <declname>blockIndices</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>constraintMultiplier</declname>
        </param>
        <briefdescription>
<para>Function to get a list of Kaula constraint values for gravity field coefficients at given degrees and indices. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get a list of Kaula constraint values for gravity field coefficients at given degrees and indices <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>List of indices (degree and order) of coefficients for which Kaula constraint is to be given </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constraintMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplier A for Kaula constraint, obtained from A/l^{2}, which l the current coefficient&apos;s degree </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of Kaula constraint values on gravity field coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/sphericalHarmonicCosineCoefficients.cpp" line="47" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/sphericalHarmonicCosineCoefficients.cpp" bodystart="47" bodyend="58" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/sphericalHarmonicCosineCoefficients.h" declline="170" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d7/d71/sphericalHarmonicCosineCoefficients_8h_1a0e6ee768c70449d6499a1d915ba5ee8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::estimatable_parameters::getKaulaConstraintVector</definition>
        <argsstring>(const std::shared_ptr&lt; SphericalHarmonicsCosineCoefficients &gt; parameter, const double constraintMultiplier)</argsstring>
        <name>getKaulaConstraintVector</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d6/d3c/classtudat_1_1estimatable__parameters_1_1SphericalHarmonicsCosineCoefficients" kindref="compound">SphericalHarmonicsCosineCoefficients</ref> &gt;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>constraintMultiplier</declname>
        </param>
        <briefdescription>
<para>Function to get a list of Kaula constraint values for gravity field coefficients for given parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get a list of Kaula constraint values for gravity field coefficients for given parameter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter that defines the list of cosine spherical harmonic coefficients </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constraintMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplier A for Kaula constraint, obtained from A/l^{2}, which l the current coefficient&apos;s degree </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of Kaula constraint values on gravity field coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/sphericalHarmonicCosineCoefficients.cpp" line="61" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/sphericalHarmonicCosineCoefficients.cpp" bodystart="61" bodyend="66" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/sphericalHarmonicCosineCoefficients.h" declline="181" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="dc/ddb/sphericalHarmonicSineCoefficients_8h_1af93dd9f53b79596fd064ad2190eced29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::estimatable_parameters::getKaulaConstraintVector</definition>
        <argsstring>(const std::shared_ptr&lt; SphericalHarmonicsSineCoefficients &gt; parameter, const double constraintMultiplier)</argsstring>
        <name>getKaulaConstraintVector</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="db/dfc/classtudat_1_1estimatable__parameters_1_1SphericalHarmonicsSineCoefficients" kindref="compound">SphericalHarmonicsSineCoefficients</ref> &gt;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>constraintMultiplier</declname>
        </param>
        <briefdescription>
<para>Function to get a list of Kaula constraint values for gravity field coefficients for given parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get a list of Kaula constraint values for gravity field coefficients for given parameter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter that defines the list of sine spherical harmonic coefficients </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constraintMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplier A for Kaula constraint, obtained from A/l^{2}, which l the current coefficient&apos;s degree </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of Kaula constraint values on gravity field coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/sphericalHarmonicSineCoefficients.cpp" line="48" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/orbit_determination/estimatable_parameters/sphericalHarmonicSineCoefficients.cpp" bodystart="48" bodyend="53" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/sphericalHarmonicSineCoefficients.h" declline="168" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d2/d2a/parameter_8h_1a9352be78e26037a1b57cd596577a2898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::estimatable_parameters::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const EstimatebleParametersEnum &amp;parameterType)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const EstimatebleParametersEnum &amp;</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>PropagationDependentVariables</computeroutput> to <computeroutput>json</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" line="57" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d2/d2a/parameter_8h_1a505c80cff74563a28c07d196c3af696e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::estimatable_parameters::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, EstimatebleParametersEnum &amp;parameterType)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>EstimatebleParametersEnum &amp;</type>
          <declname>parameterType</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>json</computeroutput> to <computeroutput>PropagationDependentVariables</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" line="63" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d2/d2a/parameter_8h_1a9defaafd5162e7fa1a5db1a732a095bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::estimatable_parameters::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const std::shared_ptr&lt; EstimatableParameterSettings &gt; &amp;parameterSettings)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt; &amp;</type>
          <declname>parameterSettings</declname>
        </param>
        <briefdescription>
<para>Create a <computeroutput>json</computeroutput> object from a shared pointer to a <computeroutput><ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a <computeroutput>json</computeroutput> object from a shared pointer to a <computeroutput>SingleDependentVariableSaveSettings</computeroutput> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/estimation/parameter.cpp" line="25" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/estimation/parameter.cpp" bodystart="25" bodyend="246" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d2/d2a/parameter_8h_1a5a7554296bb8ab70d84c24f1937f7e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::estimatable_parameters::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, std::shared_ptr&lt; EstimatableParameterSettings &gt; &amp;parameterSettings)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt; &amp;</type>
          <declname>parameterSettings</declname>
        </param>
        <briefdescription>
<para>Create a shared pointer to a <computeroutput><ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref></computeroutput> object from a <computeroutput>json</computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a shared pointer to a <computeroutput>SingleDependentVariableSaveSettings</computeroutput> object from a <computeroutput>json</computeroutput> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/estimation/parameter.cpp" line="249" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/estimation/parameter.cpp" bodystart="249" bodyend="485" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/estimation/parameter.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a3d08f243cb442c582da8ddbb15d79ac0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; int, int &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; int, int &gt; &gt; tudat::estimatable_parameters::getSphericalHarmonicBlockIndices</definition>
        <argsstring>(const int minimumDegree, const int minimumOrder, const int maximumDegree, const int maximumOrder)</argsstring>
        <name>getSphericalHarmonicBlockIndices</name>
        <param>
          <type>const int</type>
          <declname>minimumDegree</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minimumOrder</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maximumDegree</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maximumOrder</declname>
        </param>
        <briefdescription>
<para>Function to retrieve full list of degree/order of spherical harmonic coeficients for given range of degrees and orders. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve full list of degree/order of spherical harmonic coeficients for given range of degrees and orders <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minimumDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum degree of field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minimumOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum order of field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximumDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum degree of field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximumOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum order of field </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of paird containing (degree,order) of field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="73" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a50e63d7321ad2d96e39a525bdcd790ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::gravitationalParameter</definition>
        <argsstring>(const std::string bodyName)</argsstring>
        <name>gravitationalParameter</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="723" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="723" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a19ff6b278ef201ea115137a875a9e139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::constantDragCoefficient</definition>
        <argsstring>(const std::string bodyName)</argsstring>
        <name>constantDragCoefficient</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="728" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="728" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a166564bf77ca67be4e8c382bf53a827d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::radiationPressureCoefficient</definition>
        <argsstring>(const std::string bodyName)</argsstring>
        <name>radiationPressureCoefficient</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="733" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="733" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a4978c5dc6b344e390635d3def9355578" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::sphericalHarmonicsCosineBlock</definition>
        <argsstring>(const std::string bodyName, const int minimumDegree, const int minimumOrder, const int maximumDegree, const int maximumOrder)</argsstring>
        <name>sphericalHarmonicsCosineBlock</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minimumDegree</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minimumOrder</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maximumDegree</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maximumOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="738" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="738" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1ab6f06944b6ae3169a87762d7260bd2c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::sphericalHarmonicsCosineBlock</definition>
        <argsstring>(const std::string bodyName, const std::vector&lt; std::pair&lt; int, int &gt; &gt; blockIndices)</argsstring>
        <name>sphericalHarmonicsCosineBlock</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::pair&lt; int, int &gt; &gt;</type>
          <declname>blockIndices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="750" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="750" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a7e6a4c78be9fd586b4ca54d8d0f7e32f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::sphericalHarmonicsSineBlock</definition>
        <argsstring>(const std::string bodyName, const int minimumDegree, const int minimumOrder, const int maximumDegree, const int maximumOrder)</argsstring>
        <name>sphericalHarmonicsSineBlock</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minimumDegree</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minimumOrder</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maximumDegree</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maximumOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="758" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="758" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a849e19423326f3793953646880b88b7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::sphericalHarmonicsSineBlock</definition>
        <argsstring>(const std::string bodyName, const std::vector&lt; std::pair&lt; int, int &gt; &gt; blockIndices)</argsstring>
        <name>sphericalHarmonicsSineBlock</name>
        <param>
          <type>const std::string</type>
          <declname>bodyName</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::pair&lt; int, int &gt; &gt;</type>
          <declname>blockIndices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="770" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="770" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a1ee1bda438c41537a114b054514e8d9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::arcwiseRadiationPressureCoefficient</definition>
        <argsstring>(std::string associatedBody, const std::vector&lt; double &gt; arcStartTimeList)</argsstring>
        <name>arcwiseRadiationPressureCoefficient</name>
        <param>
          <type>std::string</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>arcStartTimeList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="779" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="779" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a0d12aaf02bf809033b50bdb91689d6a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::arcwiseDragCoefficient</definition>
        <argsstring>(std::string associatedBody, const std::vector&lt; double &gt; arcStartTimeList)</argsstring>
        <name>arcwiseDragCoefficient</name>
        <param>
          <type>std::string</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>arcStartTimeList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="787" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="787" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a8c61a3eb6405feb5168ee035926fdef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::constantRotationRate</definition>
        <argsstring>(std::string bodyName)</argsstring>
        <name>constantRotationRate</name>
        <param>
          <type>std::string</type>
          <declname>bodyName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="795" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="795" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1aa34a93293b6fbd5b2efbc82bc6473cae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::rotationPolePosition</definition>
        <argsstring>(std::string bodyName)</argsstring>
        <name>rotationPolePosition</name>
        <param>
          <type>std::string</type>
          <declname>bodyName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="801" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="801" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a5ddab43bab29b6de52d488640d090604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::observationBias</definition>
        <argsstring>(const observation_models::LinkEnds &amp;linkEnds, const observation_models::ObservableType observableType)</argsstring>
        <name>observationBias</name>
        <param>
          <type>const observation_models::LinkEnds &amp;</type>
          <declname>linkEnds</declname>
        </param>
        <param>
          <type>const observation_models::ObservableType</type>
          <declname>observableType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="807" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="807" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a2c70be051131ad306ee6be948a4bea6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::relativeObservationBias</definition>
        <argsstring>(const observation_models::LinkEnds &amp;linkEnds, const observation_models::ObservableType observableType)</argsstring>
        <name>relativeObservationBias</name>
        <param>
          <type>const observation_models::LinkEnds &amp;</type>
          <declname>linkEnds</declname>
        </param>
        <param>
          <type>const observation_models::ObservableType</type>
          <declname>observableType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="815" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="815" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a57e5641aa86cc43a29da921d2389de73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::arcwiseObservationBias</definition>
        <argsstring>(const observation_models::LinkEnds &amp;linkEnds, const observation_models::ObservableType observableType, const std::vector&lt; double &gt; arcStartTimes, const observation_models::LinkEndType linkEndForTime=observation_models::receiver)</argsstring>
        <name>arcwiseObservationBias</name>
        <param>
          <type>const observation_models::LinkEnds &amp;</type>
          <declname>linkEnds</declname>
        </param>
        <param>
          <type>const observation_models::ObservableType</type>
          <declname>observableType</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>arcStartTimes</declname>
        </param>
        <param>
          <type>const observation_models::LinkEndType</type>
          <declname>linkEndForTime</declname>
          <defval>observation_models::receiver</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="823" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="823" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1adbbda53f8ebdfca8a0ebab47d68dd9c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::arcwiseRelativeObservationBias</definition>
        <argsstring>(const observation_models::LinkEnds &amp;linkEnds, const observation_models::ObservableType observableType, const std::vector&lt; double &gt; arcStartTimes, const observation_models::LinkEndType linkEndForTime=observation_models::receiver)</argsstring>
        <name>arcwiseRelativeObservationBias</name>
        <param>
          <type>const observation_models::LinkEnds &amp;</type>
          <declname>linkEnds</declname>
        </param>
        <param>
          <type>const observation_models::ObservableType</type>
          <declname>observableType</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>arcStartTimes</declname>
        </param>
        <param>
          <type>const observation_models::LinkEndType</type>
          <declname>linkEndForTime</declname>
          <defval>observation_models::receiver</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="833" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="833" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a0003f20edd5081cb8316d3d4d9a1ea4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::constantEmpiricalAccelerationMagnitudes</definition>
        <argsstring>(const std::string associatedBody, const std::string centralBody)</argsstring>
        <name>constantEmpiricalAccelerationMagnitudes</name>
        <param>
          <type>const std::string</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>centralBody</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="844" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="844" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1af86ec49036e900a0b45c888ced87929e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::empiricalAccelerationMagnitudes</definition>
        <argsstring>(const std::string associatedBody, const std::string centralBody, const std::map&lt; basic_astrodynamics::EmpiricalAccelerationComponents, std::vector&lt; basic_astrodynamics::EmpiricalAccelerationFunctionalShapes &gt; &gt; componentsToEstimate)</argsstring>
        <name>empiricalAccelerationMagnitudes</name>
        <param>
          <type>const std::string</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>centralBody</declname>
        </param>
        <param>
          <type>const std::map&lt; basic_astrodynamics::EmpiricalAccelerationComponents, std::vector&lt; basic_astrodynamics::EmpiricalAccelerationFunctionalShapes &gt; &gt;</type>
          <declname>componentsToEstimate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="862" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="862" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a70af431a251f54a34543235b362d7b20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::constantArcWiseEmpiricalAccelerationMagnitudes</definition>
        <argsstring>(const std::string associatedBody, const std::string centralBody, const std::vector&lt; double &gt; arcStartTimes)</argsstring>
        <name>constantArcWiseEmpiricalAccelerationMagnitudes</name>
        <param>
          <type>const std::string</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>centralBody</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>arcStartTimes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="872" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="872" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1aa89ad68654f684ade886d6214ec59ca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::arcWiseEmpiricalAccelerationMagnitudes</definition>
        <argsstring>(const std::string associatedBody, const std::string centralBody, const std::map&lt; basic_astrodynamics::EmpiricalAccelerationComponents, std::vector&lt; basic_astrodynamics::EmpiricalAccelerationFunctionalShapes &gt; &gt; componentsToEstimate, const std::vector&lt; double &gt; arcStartTimes)</argsstring>
        <name>arcWiseEmpiricalAccelerationMagnitudes</name>
        <param>
          <type>const std::string</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>centralBody</declname>
        </param>
        <param>
          <type>const std::map&lt; basic_astrodynamics::EmpiricalAccelerationComponents, std::vector&lt; basic_astrodynamics::EmpiricalAccelerationFunctionalShapes &gt; &gt;</type>
          <declname>componentsToEstimate</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt;</type>
          <declname>arcStartTimes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="891" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="891" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1aca436ce46a56da6e74ca8d693291216d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::ppnParameterGamma</definition>
        <argsstring>()</argsstring>
        <name>ppnParameterGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="903" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="903" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1ae21a791e2eef167304ccd2597deb48b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::ppnParameterBeta</definition>
        <argsstring>(const std::string &amp;body, const std::string &amp;groundStationName)</argsstring>
        <name>ppnParameterBeta</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>groundStationName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="908" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="908" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a9912185510621c51bbcd03c9576e5bee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::groundStationPosition</definition>
        <argsstring>(const std::string &amp;body, const std::string &amp;groundStationName)</argsstring>
        <name>groundStationPosition</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>groundStationName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="915" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="915" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a5aed3410a8992cd7242df91f192fd178" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::directTidalDissipationLagTime</definition>
        <argsstring>(const std::string &amp;body, const std::vector&lt; std::string &gt; &amp;deformingBodies)</argsstring>
        <name>directTidalDissipationLagTime</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>deformingBodies</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="922" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="922" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1ac93553c08ee7b089bd53147342255e30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::directTidalDissipationLagTime</definition>
        <argsstring>(const std::string &amp;body, const std::string &amp;deformingBody)</argsstring>
        <name>directTidalDissipationLagTime</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>deformingBody</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="931" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="931" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a2382edbef4aa5faa5c486b5ccb9e8d9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::meanMomentOfInertia</definition>
        <argsstring>(const std::string &amp;body)</argsstring>
        <name>meanMomentOfInertia</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="938" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="938" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1ab16a52f7b05a450b32782e0c4767a367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::orderInvariantKLoveNumber</definition>
        <argsstring>(const std::string &amp;associatedBody, const int degree, const std::string deformingBody, const bool useComplexValue=0)</argsstring>
        <name>orderInvariantKLoveNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>deformingBody</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useComplexValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="946" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="946" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a03327ed535dbd3db9cca5aa9c8ba7a3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::orderInvariantKLoveNumber</definition>
        <argsstring>(const std::string &amp;associatedBody, const int degree, const std::vector&lt; std::string &gt; &amp;deformingBodies, const bool useComplexValue=0)</argsstring>
        <name>orderInvariantKLoveNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>deformingBodies</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useComplexValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="957" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="957" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1aac603bb57a05dd66adaddb99f438b682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::orderInvariantKLoveNumber</definition>
        <argsstring>(const std::string &amp;associatedBody, const int degree, const bool useComplexValue=0)</argsstring>
        <name>orderInvariantKLoveNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useComplexValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="968" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="968" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a02f1ff69ed9b474d7b405111e1b17e0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::orderVaryingKLoveNumber</definition>
        <argsstring>(const std::string &amp;associatedBody, const int degree, const std::vector&lt; int &gt; &amp;orders, const std::string deformingBody, const bool useComplexValue=0)</argsstring>
        <name>orderVaryingKLoveNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>orders</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>deformingBody</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useComplexValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="977" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="977" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a0db3bd6894d4f6fa13c8de9f773e5e29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::orderVaryingKLoveNumber</definition>
        <argsstring>(const std::string &amp;associatedBody, const int degree, const std::vector&lt; int &gt; &amp;orders, const std::vector&lt; std::string &gt; &amp;deformingBodies, const bool useComplexValue=0)</argsstring>
        <name>orderVaryingKLoveNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>orders</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>deformingBodies</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useComplexValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="989" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="989" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="d2/d83/estimatableParameterSettings_8h_1a8945be01b25d51ecfc2efbbbcfab1c98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dcd/classtudat_1_1estimatable__parameters_1_1EstimatableParameterSettings" kindref="compound">EstimatableParameterSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EstimatableParameterSettings &gt; tudat::estimatable_parameters::orderVaryingKLoveNumber</definition>
        <argsstring>(const std::string &amp;associatedBody, const int degree, const std::vector&lt; int &gt; &amp;orders, const bool useComplexValue=0)</argsstring>
        <name>orderVaryingKLoveNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>associatedBody</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>orders</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useComplexValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" line="1001" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/simulation/estimation_setup/estimatableParameterSettings.h" bodystart="1001" bodyend="1009"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/orbit_determination/estimatable_parameters/constantDragCoefficient.h" line="21" column="1"/>
  </compounddef>
</doxygen>
