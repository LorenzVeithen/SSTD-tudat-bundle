<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator" kind="class" language="C++" prot="public">
    <compoundname>tudat::reference_frames::AerodynamicAngleCalculator</compoundname>
    <basecompoundref refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator" prot="public" virt="non-virtual">tudat::reference_frames::DependentOrientationCalculator</basecompoundref>
    <includes refid="d5/ddc/aerodynamicAngleCalculator_8h" local="no">aerodynamicAngleCalculator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a6679c5047d5111a6cc37c75a93db97a7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="da/d9f/classtudat_1_1aerodynamics_1_1WindModel" kindref="compound">aerodynamics::WindModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt; aerodynamics::WindModel &gt; tudat::reference_frames::AerodynamicAngleCalculator::windModel_</definition>
        <argsstring></argsstring>
        <name>windModel_</name>
        <briefdescription>
<para>Model that computes the atmospheric wind as a function of position and time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="278" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a0358b0ca77c90de9e27595c3997c2b8b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d8/d35/classtudat_1_1basic__astrodynamics_1_1BodyShapeModel" kindref="compound">basic_astrodynamics::BodyShapeModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt; basic_astrodynamics::BodyShapeModel &gt; tudat::reference_frames::AerodynamicAngleCalculator::shapeModel_</definition>
        <argsstring></argsstring>
        <name>shapeModel_</name>
        <briefdescription>
<para>Shape model of central body, used in computation of altitude that is required for wind calculation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="281" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1af430e11b3d22803d3ac907bbe406ebae" prot="private" static="no" mutable="no">
        <type>std::map&lt; AerodynamicsReferenceFrameAngles, double &gt;</type>
        <definition>std::map&lt; AerodynamicsReferenceFrameAngles, double &gt; tudat::reference_frames::AerodynamicAngleCalculator::currentAerodynamicAngles_</definition>
        <argsstring></argsstring>
        <name>currentAerodynamicAngles_</name>
        <briefdescription>
<para>Map of current angles, as calculated by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref> function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="284" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a3baefebfa9fc98a5d0f7a59839dda76c" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::pair&lt; AerodynamicsReferenceFrames, AerodynamicsReferenceFrames &gt;, Eigen::Quaterniond &gt;</type>
        <definition>std::map&lt; std::pair&lt; AerodynamicsReferenceFrames, AerodynamicsReferenceFrames &gt;, Eigen::Quaterniond &gt; tudat::reference_frames::AerodynamicAngleCalculator::currentRotationMatrices_</definition>
        <argsstring></argsstring>
        <name>currentRotationMatrices_</name>
        <briefdescription>
<para>Map of current transformation quaternions, as calculated since previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref> function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="288" column="2" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a0b98cba5db5f51849a9c6ed2feb1d7fb" prot="private" static="no" mutable="no">
        <type>Eigen::Vector6d</type>
        <definition>Eigen::Vector6d tudat::reference_frames::AerodynamicAngleCalculator::currentBodyFixedAirspeedBasedState_</definition>
        <argsstring></argsstring>
        <name>currentBodyFixedAirspeedBasedState_</name>
        <briefdescription>
<para>Current airspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="291" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a1be04681ab6a47a0183d6828c47a0317" prot="private" static="no" mutable="no">
        <type>Eigen::Vector6d</type>
        <definition>Eigen::Vector6d tudat::reference_frames::AerodynamicAngleCalculator::currentBodyFixedGroundSpeedBasedState_</definition>
        <argsstring></argsstring>
        <name>currentBodyFixedGroundSpeedBasedState_</name>
        <briefdescription>
<para>Current groundspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="294" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ab2f758387d851fe518945bfb10793e0f" prot="private" static="no" mutable="no">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::reference_frames::AerodynamicAngleCalculator::currentRotationFromCorotatingToInertialFrame_</definition>
        <argsstring></argsstring>
        <name>currentRotationFromCorotatingToInertialFrame_</name>
        <briefdescription>
<para>Current rotation from central-body-corotating to inertial frame, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="297" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ab776cc079b3cb38799cac439f3276ad9" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector6d() &gt;</type>
        <definition>std::function&lt; Eigen::Vector6d( ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::bodyFixedStateFunction_</definition>
        <argsstring></argsstring>
        <name>bodyFixedStateFunction_</name>
        <briefdescription>
<para>Vehicle state in a frame fixed w.r.t. the central body. </para>
        </briefdescription>
        <detaileddescription>
<para>Vehicle state in a frame fixed w.r.t. the central body. Note that this state is w.r.t. the body itself, not w.r.t. the local atmosphere </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="304" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1af291d7a392cae3fb97fce1c927bdef6a" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Quaterniond() &gt;</type>
        <definition>std::function&lt; Eigen::Quaterniond( ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::rotationFromCorotatingToInertialFrame_</definition>
        <argsstring></argsstring>
        <name>rotationFromCorotatingToInertialFrame_</name>
        <briefdescription>
<para>Function returning the quaternion that rotates from the corotating to the inertial frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="307" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a8fdb44a58a0c5b2fc7e6eeb3c95f1de2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tudat::reference_frames::AerodynamicAngleCalculator::centralBodyName_</definition>
        <argsstring></argsstring>
        <name>centralBodyName_</name>
        <briefdescription>
<para>Name of central body w.r.t. which the angles are computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="310" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a2618722b7d1d5f85e602cbcce5c6004c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::reference_frames::AerodynamicAngleCalculator::calculateVerticalToAerodynamicFrame_</definition>
        <argsstring></argsstring>
        <name>calculateVerticalToAerodynamicFrame_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boolean to determine whether to determine vertical &lt;-&gt; aerodynamic frame conversion when calling update function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="314" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a439b8a1e72498ce157e6e9cafdff397c" prot="private" static="no" mutable="no">
        <type>std::function&lt; double() &gt;</type>
        <definition>std::function&lt; double( ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::angleOfAttackFunction_</definition>
        <argsstring></argsstring>
        <name>angleOfAttackFunction_</name>
        <briefdescription>
<para>Function to determine the angle of attack of the vehicle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="317" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a0c85c2b7f35b695251d25924b5594e5b" prot="private" static="no" mutable="no">
        <type>std::function&lt; double() &gt;</type>
        <definition>std::function&lt; double( ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::angleOfSideslipFunction_</definition>
        <argsstring></argsstring>
        <name>angleOfSideslipFunction_</name>
        <briefdescription>
<para>Function to determine the angle of sideslip of the vehicle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="320" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a335733c1061d8bd0df7b8e8232f8f35e" prot="private" static="no" mutable="no">
        <type>std::function&lt; double() &gt;</type>
        <definition>std::function&lt; double( ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::bankAngleFunction_</definition>
        <argsstring></argsstring>
        <name>bankAngleFunction_</name>
        <briefdescription>
<para>Function to determine the bank angle of the vehicle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="323" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ad06c1d9cb61763f215527f21093e537b" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(const double) &gt;</type>
        <definition>std::function&lt; void( const double ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::angleUpdateFunction_</definition>
        <argsstring></argsstring>
        <name>angleUpdateFunction_</name>
        <briefdescription>
<para>Function to update the bank, attack and sideslip angles to current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="326" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acae0b56e306799e426d79664a9a240f0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::reference_frames::AerodynamicAngleCalculator::currentBodyAngleTime_</definition>
        <argsstring></argsstring>
        <name>currentBodyAngleTime_</name>
        <briefdescription>
<para>Current time to which the bank, attack and sideslip angles have been updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="329" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1aaf9df26702216b21f37d64716b2c882c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::reference_frames::AerodynamicAngleCalculator::AerodynamicAngleCalculator</definition>
        <argsstring>(const std::function&lt; Eigen::Vector6d() &gt; bodyFixedStateFunction, const std::function&lt; Eigen::Quaterniond() &gt; rotationFromCorotatingToInertialFrame, const std::string centralBodyName, const bool calculateVerticalToAerodynamicFrame=false, const std::function&lt; double() &gt; angleOfAttackFunction=std::function&lt; double() &gt;(), const std::function&lt; double() &gt; angleOfSideslipFunction=std::function&lt; double() &gt;(), const std::function&lt; double() &gt; bankAngleFunction=std::function&lt; double() &gt;(), const std::function&lt; void(const double) &gt; angleUpdateFunction=std::function&lt; void(const double) &gt;())</argsstring>
        <name>AerodynamicAngleCalculator</name>
        <param>
          <type>const std::function&lt; Eigen::Vector6d() &gt;</type>
          <declname>bodyFixedStateFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; Eigen::Quaterniond() &gt;</type>
          <declname>rotationFromCorotatingToInertialFrame</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>centralBodyName</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>calculateVerticalToAerodynamicFrame</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>angleOfAttackFunction</declname>
          <defval>std::function&lt; double() &gt;()</defval>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>angleOfSideslipFunction</declname>
          <defval>std::function&lt; double() &gt;()</defval>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>bankAngleFunction</declname>
          <defval>std::function&lt; double() &gt;()</defval>
        </param>
        <param>
          <type>const std::function&lt; void(const double) &gt;</type>
          <declname>angleUpdateFunction</declname>
          <defval>std::function&lt; void(const double) &gt;()</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyFixedStateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Vehicle state in a frame fixed w.r.t. the central body. Note that this state is w.r.t. the body itself, not w.r.t. the local atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationFromCorotatingToInertialFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the quaternion that rotates from the corotating to the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of central body w.r.t. which the angles are computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calculateVerticalToAerodynamicFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to determine whether to determine vertical &lt;-&gt; aerodynamic frame conversion when calling update function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleOfAttackFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to determine the angle of attack of the vehicle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleOfSideslipFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to determine the angle of sideslip of the vehicle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bankAngleFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to determine the bank angle of the vehicle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleUpdateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to update the aerodynamic angles to the current time (default none). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="81" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="81" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a320f0f3606f77679e9a9d22a500713ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::reference_frames::AerodynamicAngleCalculator::setWindModel</definition>
        <argsstring>(const std::shared_ptr&lt; aerodynamics::WindModel &gt; windModel, const std::shared_ptr&lt; basic_astrodynamics::BodyShapeModel &gt; shapeModel)</argsstring>
        <name>setWindModel</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="da/d9f/classtudat_1_1aerodynamics_1_1WindModel" kindref="compound">aerodynamics::WindModel</ref> &gt;</type>
          <declname>windModel</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d8/d35/classtudat_1_1basic__astrodynamics_1_1BodyShapeModel" kindref="compound">basic_astrodynamics::BodyShapeModel</ref> &gt;</type>
          <declname>shapeModel</declname>
        </param>
        <briefdescription>
<para>Function to set the atmospheric wind model. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set the atmospheric wind model <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>windModel</parametername>
</parameternamelist>
<parameterdescription>
<para>Model that computes the atmospheric wind as a function of position and time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shapeModel</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape model of central body, used in computation of altitude that is required for wind calculation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="107" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ae8de3add4e5d89be447eb707f17fbd13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::reference_frames::AerodynamicAngleCalculator::getRotationToLocalFrame</definition>
        <argsstring>()</argsstring>
        <name>getRotationToLocalFrame</name>
        <reimplements refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1ae55893820994179e02ec6189cd9fb00b">getRotationToLocalFrame</reimplements>
        <briefdescription>
<para>Function to get the current rotation from the global (propagation/inertial) to the local (body-fixed) frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the current rotation from the global (propagation/inertial) to the local (body-fixed) frame. Implementation of pure virtual base class function, calls getRotationQuaternionBetweenFrames function. <simplesect kind="return"><para>Current rotation from the global (propagation/inertial) to the local (body-fixed) frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="121" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ae7b951843ce6578117c64db9c7a54720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::reference_frames::AerodynamicAngleCalculator::getRotationToGlobalFrame</definition>
        <argsstring>()</argsstring>
        <name>getRotationToGlobalFrame</name>
        <reimplements refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a1b34033b2b7a0a65fa88482b3cbb46af">getRotationToGlobalFrame</reimplements>
        <briefdescription>
<para>Function to get the current rotation from the local (body-fixed) to the global (propagation/inertial) frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the current rotation from the local (body-fixed) to the global (propagation/inertial) frame. Implementation of pure virtual base class function, calls getRotationQuaternionBetweenFrames function. <simplesect kind="return"><para>Current rotation from the local (body-fixed) to the global (propagation/inertial) frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="132" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1aceb968e26cbe6d3f40590c4f7faeba21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::reference_frames::AerodynamicAngleCalculator::updateCalculator</definition>
        <argsstring>(const double currentTime)</argsstring>
        <name>updateCalculator</name>
        <reimplements refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a801bc21f0df6beecea976cf5728c79ce">updateCalculator</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Function to update the orientation angles to the current state. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to update the orientation angles to the current state, implements base class pure virtual function; calls update function. Note, when calling this function, the bank angle, angle of attack and sideslip angle are NOT updated (due to possible cross-dependency with aerodynamic coefficients). <simplesect kind="see"><para><ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">AerodynamicAngleCalculator::update</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="144" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::reference_frames::AerodynamicAngleCalculator::update</definition>
        <argsstring>(const double currentTime, const bool updateBodyOrientation)</argsstring>
        <name>update</name>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>updateBodyOrientation</declname>
        </param>
        <briefdescription>
<para>Function to update the orientation angles to the current state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function updates all requires orientation angles to the current state of the vehicle. The current state is retrieved from the bodyFixedStateFunction_ member variable function pointer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to which angle calculator is to be updated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updateBodyOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether the trajectory&lt;-&gt;body-fixed angles are to be updated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="157" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/reference_frames/aerodynamicAngleCalculator.cpp" bodystart="103" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a589f1ac87019bd9ec7cebb366fc7a700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::reference_frames::AerodynamicAngleCalculator::getRotationQuaternionBetweenFrames</definition>
        <argsstring>(const AerodynamicsReferenceFrames originalFrame, const AerodynamicsReferenceFrames targetFrame)</argsstring>
        <name>getRotationQuaternionBetweenFrames</name>
        <param>
          <type>const AerodynamicsReferenceFrames</type>
          <declname>originalFrame</declname>
        </param>
        <param>
          <type>const AerodynamicsReferenceFrames</type>
          <declname>targetFrame</declname>
        </param>
        <briefdescription>
<para>Function to get the rotation quaternion between two frames. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the rotation quaternion between two frames. This function uses the values calculated by the previous call of the <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref> function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Id for &apos;current&apos; frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Id for frame to which transformation object should transfrom a vector (from originalFrame). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion from originalFrame to targetFrame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="168" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/reference_frames/aerodynamicAngleCalculator.cpp" bodystart="187" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a046c0984a8160da347721200c5148b3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::reference_frames::AerodynamicAngleCalculator::getRotationMatrixBetweenFrames</definition>
        <argsstring>(const AerodynamicsReferenceFrames originalFrame, const AerodynamicsReferenceFrames targetFrame)</argsstring>
        <name>getRotationMatrixBetweenFrames</name>
        <param>
          <type>const AerodynamicsReferenceFrames</type>
          <declname>originalFrame</declname>
        </param>
        <param>
          <type>const AerodynamicsReferenceFrames</type>
          <declname>targetFrame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="172" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1adf020e81f7cc48e456d133670c087671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::reference_frames::AerodynamicAngleCalculator::getAerodynamicAngle</definition>
        <argsstring>(const AerodynamicsReferenceFrameAngles angleId)</argsstring>
        <name>getAerodynamicAngle</name>
        <param>
          <type>const AerodynamicsReferenceFrameAngles</type>
          <declname>angleId</declname>
        </param>
        <briefdescription>
<para>Function to get a single orientation angle. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get a single orientation angle, as calculated by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref> function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angleId</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of requested angle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of requested angle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="186" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/reference_frames/aerodynamicAngleCalculator.cpp" bodystart="362" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a46f750afdc8fb8be5f1d34be4a968244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::reference_frames::AerodynamicAngleCalculator::setOrientationAngleFunctions</definition>
        <argsstring>(const std::function&lt; double() &gt; angleOfAttackFunction=std::function&lt; double() &gt;(), const std::function&lt; double() &gt; angleOfSideslipFunction=std::function&lt; double() &gt;(), const std::function&lt; double() &gt; bankAngleFunction=std::function&lt; double() &gt;(), const std::function&lt; void(const double) &gt; angleUpdateFunction=std::function&lt; void(const double) &gt;())</argsstring>
        <name>setOrientationAngleFunctions</name>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>angleOfAttackFunction</declname>
          <defval>std::function&lt; double() &gt;()</defval>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>angleOfSideslipFunction</declname>
          <defval>std::function&lt; double() &gt;()</defval>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>bankAngleFunction</declname>
          <defval>std::function&lt; double() &gt;()</defval>
        </param>
        <param>
          <type>const std::function&lt; void(const double) &gt;</type>
          <declname>angleUpdateFunction</declname>
          <defval>std::function&lt; void(const double) &gt;()</defval>
        </param>
        <briefdescription>
<para>Function to set the trajectory&lt;-&gt;body-fixed orientation angles. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set the trajectory&lt;-&gt;body-fixed orientation angles. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angleOfAttackFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to return the angle of attack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleOfSideslipFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to return the angle of sideslip. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bankAngleFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to return the bank angle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleUpdateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to update the angles to the current time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="196" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/reference_frames/aerodynamicAngleCalculator.cpp" bodystart="379" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a7c2ca8de8fe95544225c74e6f26a975e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::reference_frames::AerodynamicAngleCalculator::setOrientationAngleFunctions</definition>
        <argsstring>(const double angleOfAttack=TUDAT_NAN, const double angleOfSideslip=TUDAT_NAN, const double bankAngle=TUDAT_NAN)</argsstring>
        <name>setOrientationAngleFunctions</name>
        <param>
          <type>const double</type>
          <declname>angleOfAttack</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>angleOfSideslip</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>bankAngle</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <briefdescription>
<para>Function to set constant trajectory&lt;-&gt;body-fixed orientation angles. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set constant trajectory&lt;-&gt;body-fixed orientation angles. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angleOfAttack</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant angle of attack (default NaN, used if no angle is to be defined). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleOfSideslip</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant angle of sideslip (default NaN, used if no angle is to be defined). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bankAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant bank angle (default NaN, used if no angle is to be defined). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="209" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/reference_frames/aerodynamicAngleCalculator.cpp" bodystart="423" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acd3aa521a096beefd13c7802c79b705f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::function&lt; Eigen::Quaterniond() &gt;</type>
        <definition>std::function&lt; Eigen::Quaterniond( ) &gt; tudat::reference_frames::AerodynamicAngleCalculator::getRotationFromCorotatingToInertialFrame</definition>
        <argsstring>()</argsstring>
        <name>getRotationFromCorotatingToInertialFrame</name>
        <briefdescription>
<para>Function to get the function returning the quaternion that rotates from the corotating to the inertial frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the function returning the quaternion that rotates from the corotating to the inertial frame. <simplesect kind="return"><para>Function returning the quaternion that rotates from the corotating to the inertial frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="219" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a9929cecdca0cfc997f41f8fd1bf6d1ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tudat::reference_frames::AerodynamicAngleCalculator::getCentralBodyName</definition>
        <argsstring>()</argsstring>
        <name>getCentralBodyName</name>
        <briefdescription>
<para>Function to get the name of central body w.r.t. which the angles are computed. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the name of central body w.r.t. which the angles are computed. <simplesect kind="return"><para>Name of central body w.r.t. which the angles are computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="229" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a9e91195dfdd0a2d1e28af2745c238fb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector6d</type>
        <definition>Eigen::Vector6d tudat::reference_frames::AerodynamicAngleCalculator::getCurrentAirspeedBasedBodyFixedState</definition>
        <argsstring>()</argsstring>
        <name>getCurrentAirspeedBasedBodyFixedState</name>
        <briefdescription>
<para>Function to get the current airspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the current airspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. <simplesect kind="return"><para>Current airspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="239" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a3c8059094fcf0351de929f61b095c513" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector6d</type>
        <definition>Eigen::Vector6d tudat::reference_frames::AerodynamicAngleCalculator::getCurrentGroundspeedBasedBodyFixedState</definition>
        <argsstring>()</argsstring>
        <name>getCurrentGroundspeedBasedBodyFixedState</name>
        <briefdescription>
<para>Function to get the current groundspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the current groundspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. <simplesect kind="return"><para>Current groundspeed-based body-fixed state of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="249" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a802e2372f02d16a3daef18fdf40d8189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::reference_frames::AerodynamicAngleCalculator::getCurrentGroundspeedBasedBodyFixedVelocity</definition>
        <argsstring>()</argsstring>
        <name>getCurrentGroundspeedBasedBodyFixedVelocity</name>
        <briefdescription>
<para>Function to get the current groundspeed-based body-fixed velocity of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the current groundspeed-based body-fixed velocity of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. <simplesect kind="return"><para>Current groundspeed-based body-fixed velocity of vehicle, as set by previous call to <ref refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" kindref="member">update( )</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="259" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1af68c8b73b9ec1e17d6e36cadd525e633" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::reference_frames::AerodynamicAngleCalculator::resetDerivedClassTime</definition>
        <argsstring>(const double currentTime=TUDAT_NAN)</argsstring>
        <name>resetDerivedClassTime</name>
        <reimplements refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1adc03930adf46bdc8cb9702d0f62055c1">resetDerivedClassTime</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <briefdescription>
<para>Function to reset the value of the currentBodyAngleTime_ variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to reset the value of the currentBodyAngleTime_ variable. Typically used to reset the time to NaN, signalling the need to recompute all quantities upon the next relevant function call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para>New current time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="270" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="270" bodyend="273"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Object to calculate aerodynamic orientation angles from current vehicle state. </para>
    </briefdescription>
    <detaileddescription>
<para>Object to calculate aerodynamic orientation angles from current vehicle state. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::reference_frames::DependentOrientationCalculator</label>
        <link refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator"/>
      </node>
      <node id="1">
        <label>tudat::reference_frames::AerodynamicAngleCalculator</label>
        <link refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::reference_frames::DependentOrientationCalculator</label>
        <link refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator"/>
      </node>
      <node id="1">
        <label>tudat::reference_frames::AerodynamicAngleCalculator</label>
        <link refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" line="62" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/reference_frames/aerodynamicAngleCalculator.h" bodystart="63" bodyend="331"/>
    <listofallmembers>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1aaf9df26702216b21f37d64716b2c882c" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>AerodynamicAngleCalculator</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a439b8a1e72498ce157e6e9cafdff397c" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>angleOfAttackFunction_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a0c85c2b7f35b695251d25924b5594e5b" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>angleOfSideslipFunction_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ad06c1d9cb61763f215527f21093e537b" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>angleUpdateFunction_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a335733c1061d8bd0df7b8e8232f8f35e" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>bankAngleFunction_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ab776cc079b3cb38799cac439f3276ad9" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>bodyFixedStateFunction_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a2618722b7d1d5f85e602cbcce5c6004c" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>calculateVerticalToAerodynamicFrame_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a8fdb44a58a0c5b2fc7e6eeb3c95f1de2" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>centralBodyName_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a35657f88248dcd967407407683ae0c3b" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>computeAndGetRotationToLocalFrame</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1af430e11b3d22803d3ac907bbe406ebae" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentAerodynamicAngles_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acae0b56e306799e426d79664a9a240f0" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentBodyAngleTime_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a0b98cba5db5f51849a9c6ed2feb1d7fb" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentBodyFixedAirspeedBasedState_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a1be04681ab6a47a0183d6828c47a0317" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentBodyFixedGroundSpeedBasedState_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ab2f758387d851fe518945bfb10793e0f" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentRotationFromCorotatingToInertialFrame_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a3baefebfa9fc98a5d0f7a59839dda76c" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentRotationMatrices_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a0db024b775687211d42a35f004522d98" prot="protected" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>currentTime_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a412b359df31e4a698f7b8163fcfd917c" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>DependentOrientationCalculator</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1adf020e81f7cc48e456d133670c087671" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getAerodynamicAngle</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a9929cecdca0cfc997f41f8fd1bf6d1ad" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getCentralBodyName</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a9e91195dfdd0a2d1e28af2745c238fb8" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getCurrentAirspeedBasedBodyFixedState</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a3c8059094fcf0351de929f61b095c513" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getCurrentGroundspeedBasedBodyFixedState</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a802e2372f02d16a3daef18fdf40d8189" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getCurrentGroundspeedBasedBodyFixedVelocity</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acd3aa521a096beefd13c7802c79b705f" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationFromCorotatingToInertialFrame</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a046c0984a8160da347721200c5148b3d" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationMatrixBetweenFrames</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1ac03e98cfae11d58bca82653b4efa569c" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationMatrixToGlobalFrame</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1acfce5f24e3b395cfb907cff85723ce34" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationMatrixToLocalFrame</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a589f1ac87019bd9ec7cebb366fc7a700" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationQuaternionBetweenFrames</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ae7b951843ce6578117c64db9c7a54720" prot="public" virt="virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationToGlobalFrame</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1adc0c3adf1fa3997907446579de013a95" prot="public" virt="non-virtual" ambiguityscope="tudat::reference_frames::DependentOrientationCalculator::"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationToGlobalFrame</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1ae8de3add4e5d89be447eb707f17fbd13" prot="public" virt="virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>getRotationToLocalFrame</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1ab6633244ee25cfb6b24335ea899ec145" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>resetCurrentTime</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1af68c8b73b9ec1e17d6e36cadd525e633" prot="public" virt="virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>resetDerivedClassTime</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1af291d7a392cae3fb97fce1c927bdef6a" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>rotationFromCorotatingToInertialFrame_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a46f750afdc8fb8be5f1d34be4a968244" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>setOrientationAngleFunctions</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a7c2ca8de8fe95544225c74e6f26a975e" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>setOrientationAngleFunctions</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a320f0f3606f77679e9a9d22a500713ff" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>setWindModel</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a0358b0ca77c90de9e27595c3997c2b8b" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>shapeModel_</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1acdeec390f822d521bcb3c09168da5a57" prot="public" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>update</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1aceb968e26cbe6d3f40590c4f7faeba21" prot="public" virt="virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>updateCalculator</name></member>
      <member refid="d9/d02/classtudat_1_1reference__frames_1_1AerodynamicAngleCalculator_1a6679c5047d5111a6cc37c75a93db97a7" prot="private" virt="non-virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>windModel_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1aea8faf33883c339c4a9542e330d4bde2" prot="public" virt="virtual"><scope>tudat::reference_frames::AerodynamicAngleCalculator</scope><name>~DependentOrientationCalculator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
