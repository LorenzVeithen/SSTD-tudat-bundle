<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod" kind="class" language="C++" prot="public">
    <compoundname>low_thrust_trajectories::HybridMethod</compoundname>
    <basecompoundref prot="public" virt="non-virtual">low_thrust_trajectories::LowThrustLeg</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a3aba7cd2330ff59eaf0d41aff4adbadc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double low_thrust_trajectories::HybridMethod::maximumThrust_</definition>
        <argsstring></argsstring>
        <name>maximumThrust_</name>
        <briefdescription>
<para>Maximum allowed thrust. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="191" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a7a685e5032013e259061bc902f4245aa" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double low_thrust_trajectories::HybridMethod::specificImpulse_</definition>
        <argsstring></argsstring>
        <name>specificImpulse_</name>
        <briefdescription>
<para>Specific impulse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="194" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a55853e2f16b7dbfa252f62a50b00cb4c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; simulation_setup::OptimisationSettings &gt;</type>
        <definition>std::shared_ptr&lt; simulation_setup::OptimisationSettings &gt; low_thrust_trajectories::HybridMethod::optimisationSettings_</definition>
        <argsstring></argsstring>
        <name>optimisationSettings_</name>
        <briefdescription>
<para>Optimisation settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="197" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1abeaac3daa1e9d99783337a11cf26762e" prot="private" static="no" mutable="no">
        <type>std::pair&lt; std::vector&lt; double &gt;, double &gt;</type>
        <definition>std::pair&lt; std::vector&lt; double &gt;, double &gt; low_thrust_trajectories::HybridMethod::initialGuessThrustModel_</definition>
        <argsstring></argsstring>
        <name>initialGuessThrustModel_</name>
        <briefdescription>
<para>Initial guess for the optimisation. The first element contains the thrust throttles corresponding to the initial guess for the thrust model. The second element defines the bounds around the initial time (in percentage). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="202" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a6ac26c2341160d0c83e3954382c29801" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; low_thrust_trajectories::HybridMethod::championFitness_</definition>
        <argsstring></argsstring>
        <name>championFitness_</name>
        <briefdescription>
<para>Fitness vector of the optimisation best individual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="205" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a0ede11e68d7014e8aa8f8db8e5dc7dba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; low_thrust_trajectories::HybridMethod::championDesignVariables_</definition>
        <argsstring></argsstring>
        <name>championDesignVariables_</name>
        <briefdescription>
<para>Design variables vector corresponding to the optimisation best individual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="208" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1acc612a3374565659544d50e7bde7080d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double low_thrust_trajectories::HybridMethod::initialSpacecraftMass_</definition>
        <argsstring></argsstring>
        <name>initialSpacecraftMass_</name>
        <briefdescription>
<para>Initial mass of the spacecraft. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="211" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a0ed2c0dffe4778ea4e5d32c0cb287754" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; HybridMethodModel &gt;</type>
        <definition>std::shared_ptr&lt; HybridMethodModel &gt; low_thrust_trajectories::HybridMethod::hybridMethodModel_</definition>
        <argsstring></argsstring>
        <name>hybridMethodModel_</name>
        <briefdescription>
<para>Hybrid method leg corresponding to the best optimisation output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="214" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a5e498add0e74463f8766aef63577509a" prot="private" static="no" mutable="no">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; low_thrust_trajectories::HybridMethod::initialAndFinalMEEcostatesBounds_</definition>
        <argsstring></argsstring>
        <name>initialAndFinalMEEcostatesBounds_</name>
        <briefdescription>
<para>Lower and upper bounds for the initial and final MEE costates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="217" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a6e0ad789d9b5631a956fa1e4ddfacbe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>low_thrust_trajectories::HybridMethod::HybridMethod</definition>
        <argsstring>(const Eigen::Vector6d &amp;stateAtDeparture, const Eigen::Vector6d &amp;stateAtArrival, const double maximumThrust, const double specificImpulse, const double timeOfFlight, std::shared_ptr&lt; simulation_setup::OptimisationSettings &gt; optimisationSettings, const std::pair&lt; double, double &gt; initialAndFinalMEEcostatesBounds=std::make_pair(- 10.0, 10.0))</argsstring>
        <name>HybridMethod</name>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>stateAtDeparture</declname>
        </param>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>stateAtArrival</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>maximumThrust</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>specificImpulse</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeOfFlight</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; simulation_setup::OptimisationSettings &gt;</type>
          <declname>optimisationSettings</declname>
        </param>
        <param>
          <type>const std::pair&lt; double, double &gt;</type>
          <declname>initialAndFinalMEEcostatesBounds</declname>
          <defval>std::make_pair(- 10.0, 10.0)</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="31" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="31" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1afce80bfc8e38a2daa4c961e1402a665c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>low_thrust_trajectories::HybridMethod::~HybridMethod</definition>
        <argsstring>()</argsstring>
        <name>~HybridMethod</name>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="92" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a50ae41515f82227d272ac8643391cf9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double low_thrust_trajectories::HybridMethod::convertTimeToIndependentVariable</definition>
        <argsstring>(const double time)</argsstring>
        <name>convertTimeToIndependentVariable</name>
        <param>
          <type>const double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Convert time to independent variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="95" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a595d332d9768ae60ad5ea39de3bd5faf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double low_thrust_trajectories::HybridMethod::convertIndependentVariableToTime</definition>
        <argsstring>(const double independentVariable)</argsstring>
        <name>convertIndependentVariableToTime</name>
        <param>
          <type>const double</type>
          <declname>independentVariable</declname>
        </param>
        <briefdescription>
<para>Convert independent variable to time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="101" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1af591c5b35b81349648422743eb050926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; double &gt;, std::vector&lt; double &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; double &gt;, std::vector&lt; double &gt; &gt; tudat::low_thrust_trajectories::HybridMethod::performOptimisation</definition>
        <argsstring>()</argsstring>
        <name>performOptimisation</name>
        <briefdescription>
<para>Perform optimisation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="107" column="15" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="28" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a5b93a658710e163f3501f42e4684f0b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double low_thrust_trajectories::HybridMethod::computeDeltaV</definition>
        <argsstring>()</argsstring>
        <name>computeDeltaV</name>
        <briefdescription>
<para>Compute DeltaV. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="110" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a4776ee7b0dbe086e60acc3e7c6ecc3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector6d</type>
        <definition>Eigen::Vector6d tudat::low_thrust_trajectories::HybridMethod::computeCurrentStateVector</definition>
        <argsstring>(const double currentTime)</argsstring>
        <name>computeCurrentStateVector</name>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Compute current cartesian state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="116" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="246" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a7d03bc778a6e0814153477da9c87e213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void low_thrust_trajectories::HybridMethod::getTrajectory</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;epochsVector, std::map&lt; double, Eigen::Vector6d &gt; &amp;propagatedTrajectory)</argsstring>
        <name>getTrajectory</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>epochsVector</declname>
        </param>
        <param>
          <type>std::map&lt; double, Eigen::Vector6d &gt; &amp;</type>
          <declname>propagatedTrajectory</declname>
        </param>
        <briefdescription>
<para>Compute state history. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="119" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a34bc3520d5d7fd46e502b457430fbd28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::low_thrust_trajectories::HybridMethod::computeCurrentThrustForce</definition>
        <argsstring>(double time, std::function&lt; double(const double) &gt; specificImpulseFunction, std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt; integratorSettings)</argsstring>
        <name>computeCurrentThrustForce</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>std::function&lt; double(const double) &gt;</type>
          <declname>specificImpulseFunction</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt;</type>
          <declname>integratorSettings</declname>
        </param>
        <briefdescription>
<para>Compute current thrust vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="127" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="77" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1ab3e1fb9631af049d96893ea312a2b783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::low_thrust_trajectories::HybridMethod::getThrustForceProfile</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;epochsVector, std::map&lt; double, Eigen::VectorXd &gt; &amp;thrustProfile, std::function&lt; double(const double) &gt; specificImpulseFunction, std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt; integratorSettings)</argsstring>
        <name>getThrustForceProfile</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>epochsVector</declname>
        </param>
        <param>
          <type>std::map&lt; double, Eigen::VectorXd &gt; &amp;</type>
          <declname>thrustProfile</declname>
        </param>
        <param>
          <type>std::function&lt; double(const double) &gt;</type>
          <declname>specificImpulseFunction</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt;</type>
          <declname>integratorSettings</declname>
        </param>
        <briefdescription>
<para>Return thrust profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="132" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="123" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a0c8d923248d59d0e8a021516b782be26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::low_thrust_trajectories::HybridMethod::computeCurrentThrustAccelerationDirection</definition>
        <argsstring>(double currentTime)</argsstring>
        <name>computeCurrentThrustAccelerationDirection</name>
        <param>
          <type>double</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Compute direction thrust acceleration in cartesian coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="138" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="197" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1aa3100810093bc7b9a3930fdbb5c8efbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::low_thrust_trajectories::HybridMethod::computeCurrentThrustAccelerationMagnitude</definition>
        <argsstring>(double currentTime, std::function&lt; double(const double) &gt; specificImpulseFunction, std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt; integratorSettings)</argsstring>
        <name>computeCurrentThrustAccelerationMagnitude</name>
        <param>
          <type>double</type>
          <declname>currentTime</declname>
        </param>
        <param>
          <type>std::function&lt; double(const double) &gt;</type>
          <declname>specificImpulseFunction</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt;</type>
          <declname>integratorSettings</declname>
        </param>
        <briefdescription>
<para>Compute magnitude thrust acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="142" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="183" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a063b2a53dc3dee567bd09c7f91e36f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::low_thrust_trajectories::HybridMethod::getThrustAccelerationProfile</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;epochsVector, std::map&lt; double, Eigen::VectorXd &gt; &amp;thrustAccelerationProfile, std::function&lt; double(const double) &gt; specificImpulseFunction, std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt; integratorSettings)</argsstring>
        <name>getThrustAccelerationProfile</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>epochsVector</declname>
        </param>
        <param>
          <type>std::map&lt; double, Eigen::VectorXd &gt; &amp;</type>
          <declname>thrustAccelerationProfile</declname>
        </param>
        <param>
          <type>std::function&lt; double(const double) &gt;</type>
          <declname>specificImpulseFunction</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt;</type>
          <declname>integratorSettings</declname>
        </param>
        <briefdescription>
<para>Return thrust acceleration profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="147" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="212" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1afadae07a5f951bd72250f3e05ade2d6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; low_thrust_trajectories::HybridMethod::getBestIndividual</definition>
        <argsstring>()</argsstring>
        <name>getBestIndividual</name>
        <briefdescription>
<para>Return best individual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="155" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1aa5b32360c88042a5f4e852f68bdecb4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; low_thrust_trajectories::HybridMethod::getBestIndividualFitness</definition>
        <argsstring>()</argsstring>
        <name>getBestIndividualFitness</name>
        <briefdescription>
<para>Return fitness of best individual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="161" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a9674d3503bf8138640e75d1dd73b14eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; HybridMethodModel &gt;</type>
        <definition>std::shared_ptr&lt; HybridMethodModel &gt; low_thrust_trajectories::HybridMethod::getOptimalHybridMethodModel</definition>
        <argsstring>()</argsstring>
        <name>getOptimalHybridMethodModel</name>
        <briefdescription>
<para>Return best hybrid method leg after optimisation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="167" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1ae4fadb1bb4c7610337042fab47f64693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>basic_astrodynamics::AccelerationMap</type>
        <definition>basic_astrodynamics::AccelerationMap tudat::low_thrust_trajectories::HybridMethod::retrieveLowThrustAccelerationMap</definition>
        <argsstring>(const simulation_setup::SystemOfBodies &amp;bodies, const std::string &amp;bodyToPropagate, const std::string &amp;centralBody, const std::function&lt; double(const double) &gt; specificImpulseFunction, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt; integratorSettings)</argsstring>
        <name>retrieveLowThrustAccelerationMap</name>
        <param>
          <type>const simulation_setup::SystemOfBodies &amp;</type>
          <declname>bodies</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>bodyToPropagate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>centralBody</declname>
        </param>
        <param>
          <type>const std::function&lt; double(const double) &gt;</type>
          <declname>specificImpulseFunction</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt;</type>
          <declname>integratorSettings</declname>
        </param>
        <briefdescription>
<para>Retrieve acceleration map (thrust and central gravity accelerations). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="174" column="42" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="264" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a6dcc78d9ca986a041d50e6010b04b3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::shared_ptr&lt; propagators::TranslationalStatePropagatorSettings&lt; double &gt; &gt;, std::shared_ptr&lt; propagators::TranslationalStatePropagatorSettings&lt; double &gt; &gt; &gt;</type>
        <definition>std::pair&lt; std::shared_ptr&lt; propagators::TranslationalStatePropagatorSettings&lt; double &gt; &gt;, std::shared_ptr&lt; propagators::TranslationalStatePropagatorSettings&lt; double &gt; &gt; &gt; tudat::low_thrust_trajectories::HybridMethod::createLowThrustTranslationalStatePropagatorSettings</definition>
        <argsstring>(basic_astrodynamics::AccelerationMap accelerationModelMap, std::shared_ptr&lt; propagators::DependentVariableSaveSettings &gt; dependentVariablesToSave)</argsstring>
        <name>createLowThrustTranslationalStatePropagatorSettings</name>
        <param>
          <type>basic_astrodynamics::AccelerationMap</type>
          <declname>accelerationModelMap</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; propagators::DependentVariableSaveSettings &gt;</type>
          <declname>dependentVariablesToSave</declname>
        </param>
        <briefdescription>
<para>Define appropriate translational state propagator settings for the full propagation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="183" column="2" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/low_thrust/hybridMethod.cpp" bodystart="278" bodyend="310"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>low_thrust_trajectories::LowThrustLeg</label>
      </node>
      <node id="1">
        <label>low_thrust_trajectories::HybridMethod</label>
        <link refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>low_thrust_trajectories::LowThrustLeg</label>
      </node>
      <node id="1">
        <label>low_thrust_trajectories::HybridMethod</label>
        <link refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" line="26" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/low_thrust/hybridMethod.h" bodystart="27" bodyend="219"/>
    <listofallmembers>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a0ede11e68d7014e8aa8f8db8e5dc7dba" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>championDesignVariables_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a6ac26c2341160d0c83e3954382c29801" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>championFitness_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a4776ee7b0dbe086e60acc3e7c6ecc3f4" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>computeCurrentStateVector</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a0c8d923248d59d0e8a021516b782be26" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>computeCurrentThrustAccelerationDirection</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1aa3100810093bc7b9a3930fdbb5c8efbf" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>computeCurrentThrustAccelerationMagnitude</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a34bc3520d5d7fd46e502b457430fbd28" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>computeCurrentThrustForce</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a5b93a658710e163f3501f42e4684f0b8" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>computeDeltaV</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a595d332d9768ae60ad5ea39de3bd5faf" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>convertIndependentVariableToTime</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a50ae41515f82227d272ac8643391cf9d" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>convertTimeToIndependentVariable</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a6dcc78d9ca986a041d50e6010b04b3b8" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>createLowThrustTranslationalStatePropagatorSettings</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1afadae07a5f951bd72250f3e05ade2d6c" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>getBestIndividual</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1aa5b32360c88042a5f4e852f68bdecb4d" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>getBestIndividualFitness</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a9674d3503bf8138640e75d1dd73b14eb" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>getOptimalHybridMethodModel</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a063b2a53dc3dee567bd09c7f91e36f3a" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>getThrustAccelerationProfile</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1ab3e1fb9631af049d96893ea312a2b783" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>getThrustForceProfile</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a7d03bc778a6e0814153477da9c87e213" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>getTrajectory</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a6e0ad789d9b5631a956fa1e4ddfacbe1" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>HybridMethod</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a0ed2c0dffe4778ea4e5d32c0cb287754" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>hybridMethodModel_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a5e498add0e74463f8766aef63577509a" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>initialAndFinalMEEcostatesBounds_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1abeaac3daa1e9d99783337a11cf26762e" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>initialGuessThrustModel_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1acc612a3374565659544d50e7bde7080d" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>initialSpacecraftMass_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a3aba7cd2330ff59eaf0d41aff4adbadc" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>maximumThrust_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a55853e2f16b7dbfa252f62a50b00cb4c" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>optimisationSettings_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1af591c5b35b81349648422743eb050926" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>performOptimisation</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1ae4fadb1bb4c7610337042fab47f64693" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>retrieveLowThrustAccelerationMap</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1a7a685e5032013e259061bc902f4245aa" prot="private" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>specificImpulse_</name></member>
      <member refid="db/d2c/classlow__thrust__trajectories_1_1HybridMethod_1afce80bfc8e38a2daa4c961e1402a665c" prot="public" virt="non-virtual"><scope>low_thrust_trajectories::HybridMethod</scope><name>~HybridMethod</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
