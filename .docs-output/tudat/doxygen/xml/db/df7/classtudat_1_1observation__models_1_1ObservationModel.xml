<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="db/df7/classtudat_1_1observation__models_1_1ObservationModel" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tudat::observation_models::ObservationModel</compoundname>
    <includes refid="d4/d31/observationModel_8h" local="no">observationModel.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>ObservationSize</declname>
        <defname>ObservationSize</defname>
        <defval>Eigen::Dynamic</defval>
      </param>
      <param>
        <type>typename ObservationScalarType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename TimeType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename std::enable_if&lt; <ref refid="d8/d50/structtudat_1_1is__state__scalar__and__time__type" kindref="compound">is_state_scalar_and_time_type</ref>&lt; ObservationScalarType, TimeType &gt;::value, int &gt;::type</type>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a0117fc5ab1859bdad1124ddd12be3620" prot="protected" static="no" mutable="no">
        <type>ObservableType</type>
        <definition>ObservableType tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::observableType_</definition>
        <argsstring></argsstring>
        <name>observableType_</name>
        <briefdescription>
<para>Type of observable, used for derived class type identification without explicit casts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="258" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a18d177b43452e3d1af4de8fa876b6df7" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d8/dab/classtudat_1_1observation__models_1_1ObservationBias" kindref="compound">ObservationBias</ref>&lt; ObservationSize &gt; &gt;</type>
        <definition>std::shared_ptr&lt; ObservationBias&lt; ObservationSize &gt; &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::observationBiasCalculator_</definition>
        <argsstring></argsstring>
        <name>observationBiasCalculator_</name>
        <briefdescription>
<para>Object for calculating system-dependent errors in the observable. </para>
        </briefdescription>
        <detaileddescription>
<para>Object for calculating system-dependent errors in the observable, i.e. deviations from the physically true observable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="265" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1ad22ad8c1f124d042c0110246da92fe24" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::isBiasnullptr_</definition>
        <argsstring></argsstring>
        <name>isBiasnullptr_</name>
        <briefdescription>
<para>Boolean set by constructor to denote whether observationBiasCalculator_ is nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="268" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a4e166ee91d8e8d52a4625d1daad99fd3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::linkEndTimes_</definition>
        <argsstring></argsstring>
        <name>linkEndTimes_</name>
        <briefdescription>
<para>Pre-define list of times used when calling function returning link-end states/times from interface function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="272" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1ac5e15b533fd970380b801078b822e66d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::Matrix&lt; double, 6, 1 &gt; &gt;</type>
        <definition>std::vector&lt; Eigen::Matrix&lt; double, 6, 1 &gt; &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::linkEndStates_</definition>
        <argsstring></argsstring>
        <name>linkEndStates_</name>
        <briefdescription>
<para>Pre-define list of states used when calling function returning link-end states/times from interface function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="275" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a2e356049328b9044bf8f1d05ad094802" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::ObservationModel</definition>
        <argsstring>(const ObservableType observableType, const std::shared_ptr&lt; ObservationBias&lt; ObservationSize &gt; &gt; observationBiasCalculator=nullptr)</argsstring>
        <name>ObservationModel</name>
        <param>
          <type>const ObservableType</type>
          <declname>observableType</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d8/dab/classtudat_1_1observation__models_1_1ObservationBias" kindref="compound">ObservationBias</ref>&lt; ObservationSize &gt; &gt;</type>
          <declname>observationBiasCalculator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Base class constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observableType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of observable, used for derived class type identification without explicit casts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observationBiasCalculator</parametername>
</parameternamelist>
<parameterdescription>
<para>Object for calculating system-dependent errors in the observable, i.e. deviations from the physically ideal observable between reference points (default none). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="62" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="62" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a4b72c0c9d2d8ea5221bc7cf8fe64dda7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::~ObservationModel</definition>
        <argsstring>()</argsstring>
        <name>~ObservationModel</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="84" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a02a719feded8289f8f90c8d5080f1f8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ObservableType</type>
        <definition>ObservableType tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::getObservableType</definition>
        <argsstring>()</argsstring>
        <name>getObservableType</name>
        <briefdescription>
<para>Function to return the type of observable. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the type of observable. <simplesect kind="return"><para>Type of observable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="91" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a9ecd10a922744f259f842d4b6a411347" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt;</type>
        <definition>virtual Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::computeIdealObservationsWithLinkEndData</definition>
        <argsstring>(const TimeType time, const LinkEndType linkEndAssociatedWithTime, std::vector&lt; double &gt; &amp;linkEndTimes, std::vector&lt; Eigen::Matrix&lt; double, 6, 1 &gt; &gt; &amp;linkEndStates)=0</argsstring>
        <name>computeIdealObservationsWithLinkEndData</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const LinkEndType</type>
          <declname>linkEndAssociatedWithTime</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>linkEndTimes</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::Matrix&lt; double, 6, 1 &gt; &gt; &amp;</type>
          <declname>linkEndStates</declname>
        </param>
        <briefdescription>
<para>Function to compute the observable without any corrections. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the observable without any corrections, i.e. the ideal physical observable as computed from the defined link ends (in the derived class). Note that this observable does include e.g. light-time corrections, which represent physically true corrections. It does not include e.g. system-dependent measurement errors, such as biases or clock errors. The times and states of the link ends are also returned in full precision (determined by class template arguments). These states and times are returned by reference. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which observable is to be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndAssociatedWithTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Link end at which given time is valid, i.e. link end for which associated time is kept constant (to input value) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndTimes</parametername>
</parameternamelist>
<parameterdescription>
<para>List of times at each link end during observation (returned by reference). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndStates</parametername>
</parameternamelist>
<parameterdescription>
<para>List of states at each link end during observation (returned by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ideal observable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="111" column="27"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1aa40d89c3432581dad61a0893b4a1bd07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt;</type>
        <definition>Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::computeObservationsWithLinkEndData</definition>
        <argsstring>(const TimeType time, const LinkEndType linkEndAssociatedWithTime, std::vector&lt; double &gt; &amp;linkEndTimes, std::vector&lt; Eigen::Matrix&lt; double, 6, 1 &gt; &gt; &amp;linkEndStates)</argsstring>
        <name>computeObservationsWithLinkEndData</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const LinkEndType</type>
          <declname>linkEndAssociatedWithTime</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>linkEndTimes</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::Matrix&lt; double, 6, 1 &gt; &gt; &amp;</type>
          <declname>linkEndStates</declname>
        </param>
        <briefdescription>
<para>Function to compute full observation at given time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute observation at given time (include any defined non-ideal corrections). The times and states of the link ends are given in full precision (determined by class template arguments). These states and times are returned by reference. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which observation is to be simulated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndAssociatedWithTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Link end at which current time is measured, i.e. reference link end for observable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndTimes</parametername>
</parameternamelist>
<parameterdescription>
<para>List of times at each link end during observation (returned by reference). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndStates</parametername>
</parameternamelist>
<parameterdescription>
<para>List of states at each link end during observation (returned by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Calculated observable value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="129" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="129" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1acc309e12a1396f0245d5faa48d2f6e13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt;</type>
        <definition>virtual Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::computeIdealObservations</definition>
        <argsstring>(const TimeType time, const LinkEndType linkEndAssociatedWithTime)</argsstring>
        <name>computeIdealObservations</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const LinkEndType</type>
          <declname>linkEndAssociatedWithTime</declname>
        </param>
        <briefdescription>
<para>Function to compute the observable without any corrections. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute the observable without any corrections, i.e. the ideal physical observable as computed from the defined link ends (in the derived class). Note that this observable does include e.g. light-time corrections, which represent physically true corrections. It does not include e.g. system-dependent measurement errors, such as biases or clock errors. This function may be redefined in derived class for improved efficiency. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which observable is to be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndAssociatedWithTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Link end at which given time is valid, i.e. link end for which associated time is kept constant (to input value) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ideal observable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="167" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="167" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a9b9246a44342f0c05f6b0b49c269de2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt;</type>
        <definition>Eigen::Matrix&lt; ObservationScalarType, ObservationSize, 1 &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::computeObservations</definition>
        <argsstring>(const TimeType time, const LinkEndType linkEndAssociatedWithTime)</argsstring>
        <name>computeObservations</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const LinkEndType</type>
          <declname>linkEndAssociatedWithTime</declname>
        </param>
        <briefdescription>
<para>Function to compute full observation at given time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to compute observation at given time (include any defined non-ideal corrections). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which observable is to be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndAssociatedWithTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Link end at which given time is valid, i.e. link end for which associated time is kept constant (to input value) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Calculated (non-ideal) observable value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="184" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="184" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a199cabb55653815809a71ae266c4a428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ObservationScalarType</type>
        <definition>ObservationScalarType tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::computeObservationEntry</definition>
        <argsstring>(const TimeType time, const LinkEndType linkEndAssociatedWithTime, const int observationEntry)</argsstring>
        <name>computeObservationEntry</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const LinkEndType</type>
          <declname>linkEndAssociatedWithTime</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>observationEntry</declname>
        </param>
        <briefdescription>
<para>Function to retrieve a single entry of the observation value. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve a single entry of the observation value. Generally, the observable is a vector, this function allows a single entry to be retrieve <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which observable is to be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkEndAssociatedWithTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Link end at which given time is valid, i.e. link end for which associated time is kept constant (to input value) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observationEntry</parametername>
</parameternamelist>
<parameterdescription>
<para>entry from observable vector that is to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Calculated (non-ideal, i.e with biases) observable value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="219" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="219" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1ae819c04040cf0dcdd4617d49592ce33e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::getObservationSize</definition>
        <argsstring>()</argsstring>
        <name>getObservationSize</name>
        <briefdescription>
<para>Function to return the size of the observable. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the size of the observable <simplesect kind="return"><para>Size of the observable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="239" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1af7bb363bb98b710155dd585a9a6fada2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d8/dab/classtudat_1_1observation__models_1_1ObservationBias" kindref="compound">ObservationBias</ref>&lt; ObservationSize &gt; &gt;</type>
        <definition>std::shared_ptr&lt; ObservationBias&lt; ObservationSize &gt; &gt; tudat::observation_models::ObservationModel&lt; ObservationSize, ObservationScalarType, TimeType, type &gt;::getObservationBiasCalculator</definition>
        <argsstring>()</argsstring>
        <name>getObservationBiasCalculator</name>
        <briefdescription>
<para>Functiomn to return the object for calculating system-dependent errors in the observable. </para>
        </briefdescription>
        <detaileddescription>
<para>Functiomn to return the object for calculating system-dependent errors in the observable. <simplesect kind="return"><para>Object for calculating system-dependent errors in the observable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="249" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="249" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for models of observables (i.e. range, range-rate, etc.). </para>
    </briefdescription>
    <detaileddescription>
<para>Base class for models of observables to be used in (for instance) orbit determination. Each type of observables (1-way range, 2-way range, Doppler, VLBI, etc.) has its own derived class capable of simulating observables of the given type using given link ends. The functions to be used for computing the observables can be called with/without deviations from ideal observable (see base class member functions). Corrections are computed from an observationBiasCalculator member object, which is empty by default. Also, the observable may be a with/without returning (by reference) the times and states at each of the link ends. Returning these times/states prevents recomputations of these quantities in later calculations. </para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" line="50" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/observation_models/observationModel.h" bodystart="51" bodyend="277"/>
    <listofallmembers>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1acc309e12a1396f0245d5faa48d2f6e13" prot="public" virt="virtual"><scope>tudat::observation_models::ObservationModel</scope><name>computeIdealObservations</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a9ecd10a922744f259f842d4b6a411347" prot="public" virt="pure-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>computeIdealObservationsWithLinkEndData</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a199cabb55653815809a71ae266c4a428" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>computeObservationEntry</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a9b9246a44342f0c05f6b0b49c269de2c" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>computeObservations</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1aa40d89c3432581dad61a0893b4a1bd07" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>computeObservationsWithLinkEndData</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a02a719feded8289f8f90c8d5080f1f8f" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>getObservableType</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1af7bb363bb98b710155dd585a9a6fada2" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>getObservationBiasCalculator</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1ae819c04040cf0dcdd4617d49592ce33e" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>getObservationSize</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1ad22ad8c1f124d042c0110246da92fe24" prot="protected" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>isBiasnullptr_</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1ac5e15b533fd970380b801078b822e66d" prot="protected" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>linkEndStates_</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a4e166ee91d8e8d52a4625d1daad99fd3" prot="protected" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>linkEndTimes_</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a0117fc5ab1859bdad1124ddd12be3620" prot="protected" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>observableType_</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a18d177b43452e3d1af4de8fa876b6df7" prot="protected" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>observationBiasCalculator_</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a2e356049328b9044bf8f1d05ad094802" prot="public" virt="non-virtual"><scope>tudat::observation_models::ObservationModel</scope><name>ObservationModel</name></member>
      <member refid="db/df7/classtudat_1_1observation__models_1_1ObservationModel_1a4b72c0c9d2d8ea5221bc7cf8fe64dda7" prot="public" virt="virtual"><scope>tudat::observation_models::ObservationModel</scope><name>~ObservationModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
