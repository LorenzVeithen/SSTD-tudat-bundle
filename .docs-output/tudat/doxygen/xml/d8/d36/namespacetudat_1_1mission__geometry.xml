<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d8/d36/namespacetudat_1_1mission__geometry" kind="namespace" language="C++">
    <compoundname>tudat::mission_geometry</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="d7/d62/missionGeometry_8h_1a9003ae852953cb203688d2e024ee0552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::mission_geometry::isOrbitRetrograde</definition>
        <argsstring>(const double inclination)</argsstring>
        <name>isOrbitRetrograde</name>
        <param>
          <type>const double</type>
          <declname>inclination</declname>
        </param>
        <briefdescription>
<para>Compute whether an orbit is retrograde based on inclination. </para>
        </briefdescription>
        <detaileddescription>
<para>Determines whether an orbit is retrograde, based on its inclination. The orbit is defined to be retrograde if its inclination is &gt;90 and &lt;180 degrees, prograde if &gt;0 and &lt;=90 degrees. Values outside [0, 180] degrees are not allowed for this function. The longitude of the ascending node does not influence whether the orbit is retrograde.</para>
<para>N.B: The inclination must be given in radians!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inclination</parametername>
</parameternamelist>
<parameterdescription>
<para>Inclination of the orbit [rad]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if orbit is retrograde, false if prograde. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" line="30" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" bodystart="30" bodyend="50" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/missionGeometry.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d7/d62/missionGeometry_8h_1ae93cec4e1d6920625d66e359408b3342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::mission_geometry::isOrbitRetrograde</definition>
        <argsstring>(const Eigen::Vector6d &amp;keplerElements)</argsstring>
        <name>isOrbitRetrograde</name>
        <param>
          <type>const Eigen::Vector6d &amp;</type>
          <declname>keplerElements</declname>
        </param>
        <briefdescription>
<para>Compute whether an orbit is retrograde based on Keplerian state. </para>
        </briefdescription>
        <detaileddescription>
<para>Determines whether an orbit is retrograde, based on the kepler elements. The orbit is defined to be retrograde if its inclination is &gt;90 and &lt;180 degrees, prograde if &gt;0 and &lt;=90 degrees. Values for the inclination outside [0, 180] degrees are not allowed for this function. The right ascension of the ascending node does not influence whether the orbit is retrograde.</para>
<para>N.B: The inclination must be given in radians!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keplerElements</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of keplerian elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if orbit is retrograde, false if prograde. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" line="53" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" bodystart="53" bodyend="59" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/missionGeometry.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d7/d62/missionGeometry_8h_1a0e4e6035544fe3fda5a5ef95ed39bc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::mission_geometry::computeShadowFunction</definition>
        <argsstring>(const Eigen::Vector3d &amp;occultedBodyPosition, const double occultedBodyRadius, const Eigen::Vector3d &amp;occultingBodyPosition, const double occultingBodyRadius, const Eigen::Vector3d &amp;satellitePosition)</argsstring>
        <name>computeShadowFunction</name>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>occultedBodyPosition</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>occultedBodyRadius</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>occultingBodyPosition</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>occultingBodyRadius</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>satellitePosition</declname>
        </param>
        <briefdescription>
<para>Compute the shadow function. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of of the shadow function. Returns 0 if the satellite is in umbra, 1 if the satellite is fully exposed and a value between 0 and 1 if the satellite is in penumbra.</para>
<para>The point of view is from the satellite. The occulting body (for example the Earth) is the body that blocks the light from the occulting body (for example the Sun).</para>
<para>Reference: Section 3.4 from ( Montebruck O, Gill E., 2005).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>occultedBodyPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector containing Cartesian coordinates of the occulted body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>occultedBodyRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Mean radius of occulted body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>occultingBodyPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector containing Cartesian coordinates of the occulting body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>occultingBodyRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Mean radius of occulting body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>satellitePosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector containing Cartesian coordinates of the satellite. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shadow function value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" line="62" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" bodystart="62" bodyend="146" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/missionGeometry.h" declline="78" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d7/d62/missionGeometry_8h_1a20dd4081f60ad1f9cb4a19fa6044892d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::mission_geometry::computeSphereOfInfluence</definition>
        <argsstring>(const double distanceToCentralBody, const double ratioOfOrbitingToCentralBodyMass)</argsstring>
        <name>computeSphereOfInfluence</name>
        <param>
          <type>const double</type>
          <declname>distanceToCentralBody</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfOrbitingToCentralBodyMass</declname>
        </param>
        <briefdescription>
<para>Compute the radius of the sphere of influence. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the radius of the the Sphere of Influence (SOI) for a body orbiting a central body.</para>
<para>Reference: Section 7.4 from (Fundamentals of astro, R. Bate, 1971).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distanceToCentralBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance from the orbiting body to the central body [m]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfOrbitingToCentralBodyMass</parametername>
</parameternamelist>
<parameterdescription>
<para>ratio of mass of orbiting body (i.e. Earth) to that of central body (i.e. Sun). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Radius of sphere of influence [m]. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" line="148" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" bodystart="148" bodyend="153" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/missionGeometry.h" declline="95" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d7/d62/missionGeometry_8h_1afdc990a58dbdefb3322b5dcf7f7e9dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::mission_geometry::computeSphereOfInfluence</definition>
        <argsstring>(const double distanceToCentralBody, const double massOrbitingBody, const double massCentralBody)</argsstring>
        <name>computeSphereOfInfluence</name>
        <param>
          <type>const double</type>
          <declname>distanceToCentralBody</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>massOrbitingBody</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>massCentralBody</declname>
        </param>
        <briefdescription>
<para>Compute the radius of the sphere of influence. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the sphere of influence.</para>
<para>Returns the radius of the the Sphere of Influence (SOI) for a body orbiting a central body.</para>
<para>Reference: Section 7.4 from (Fundamentals of astro, R. Bate, 1971).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distanceToCentralBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance from the orbiting body to the central body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>massOrbitingBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Mass of orbiting body (i.e. Earth) [kg]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>massCentralBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Mass of central body (i.e. Sun) [kg]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Radius of sphere of influence [m]. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" line="156" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/basic_astro/missionGeometry.cpp" bodystart="156" bodyend="162" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/missionGeometry.h" declline="109" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/basic_astro/missionGeometry.h" line="30" column="1"/>
  </compounddef>
</doxygen>
