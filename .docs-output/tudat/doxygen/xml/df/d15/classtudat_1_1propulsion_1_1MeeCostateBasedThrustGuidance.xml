<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance" kind="class" language="C++" prot="public">
    <compoundname>tudat::propulsion::MeeCostateBasedThrustGuidance</compoundname>
    <basecompoundref refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance" prot="public" virt="non-virtual">tudat::propulsion::BodyFixedForceDirectionGuidance</basecompoundref>
    <includes refid="d3/d1b/costateBasedThrustGuidance_8h" local="no">costateBasedThrustGuidance.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a27533a7a8d3f31b56adc70365058574e" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector6d() &gt;</type>
        <definition>std::function&lt; Eigen::Vector6d( ) &gt; tudat::propulsion::MeeCostateBasedThrustGuidance::thrustingBodyStateFunction_</definition>
        <argsstring></argsstring>
        <name>thrustingBodyStateFunction_</name>
        <briefdescription>
<para>Function returning the state of the body under thrust as a function of time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="100" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a884d56333d89dda2f7e7bd66b766d889" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Vector6d() &gt;</type>
        <definition>std::function&lt; Eigen::Vector6d( ) &gt; tudat::propulsion::MeeCostateBasedThrustGuidance::centralBodyStateFunction_</definition>
        <argsstring></argsstring>
        <name>centralBodyStateFunction_</name>
        <briefdescription>
<para>Function returning the state of the central body as a function of time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="103" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1afc44e8555768d1f615aceb8a9b73a73d" prot="private" static="no" mutable="no">
        <type>std::function&lt; double() &gt;</type>
        <definition>std::function&lt; double( ) &gt; tudat::propulsion::MeeCostateBasedThrustGuidance::centralBodyGravitationalParameterFunction_</definition>
        <argsstring></argsstring>
        <name>centralBodyGravitationalParameterFunction_</name>
        <briefdescription>
<para>Function returning the gravitational parameter of the central body as a function of time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="106" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a1755ad8572c3700bb2a94ae9374e4be3" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::VectorXd(const double) &gt;</type>
        <definition>std::function&lt; Eigen::VectorXd( const double ) &gt; tudat::propulsion::MeeCostateBasedThrustGuidance::costateFunction_</definition>
        <argsstring></argsstring>
        <name>costateFunction_</name>
        <briefdescription>
<para>General function which gives the costates vector as a function of time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="109" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1adc4f8a8a0e442ec9811845ee30b441bb" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::propulsion::MeeCostateBasedThrustGuidance::currentForceDirection_</definition>
        <argsstring></argsstring>
        <name>currentForceDirection_</name>
        <briefdescription>
<para>Direction of thrust force in propagation frame, as computed by last call to updateForceDirection function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="112" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1aeb3dbd7efa5b5f9cffc2b608322eebf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tudat::propulsion::MeeCostateBasedThrustGuidance::MeeCostateBasedThrustGuidance</definition>
        <argsstring>(const std::function&lt; Eigen::Vector6d() &gt; thrustingBodyStateFunction, const std::function&lt; Eigen::Vector6d() &gt; centralBodyStateFunction, const std::function&lt; double() &gt; centralBodyGravitationalParameterFunction, const std::function&lt; Eigen::VectorXd(const double) &gt; costateFunction, const std::function&lt; Eigen::Vector3d() &gt; bodyFixedForceDirection=[](){ return Eigen::Vector3d::UnitX();})</argsstring>
        <name>MeeCostateBasedThrustGuidance</name>
        <param>
          <type>const std::function&lt; Eigen::Vector6d() &gt;</type>
          <declname>thrustingBodyStateFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; Eigen::Vector6d() &gt;</type>
          <declname>centralBodyStateFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>centralBodyGravitationalParameterFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; Eigen::VectorXd(const double) &gt;</type>
          <declname>costateFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; Eigen::Vector3d() &gt;</type>
          <declname>bodyFixedForceDirection</declname>
          <defval>[](){ return Eigen::Vector3d::UnitX();}</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thrustingBodyStateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the state of the body under thrust as a function of time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyStateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the state of the central body as a function of time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centralBodyGravitationalParameterFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the gravitational parameter of the central body as a function of time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>costateFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function which returns the costates as a function of time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodyFixedForceDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Function returning the direction of the force in the body-fixed frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="57" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/propulsion/costateBasedThrustGuidance.cpp" bodystart="18" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a8a941fb75d24980a67454bd10a134fef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::propulsion::MeeCostateBasedThrustGuidance::~MeeCostateBasedThrustGuidance</definition>
        <argsstring>()</argsstring>
        <name>~MeeCostateBasedThrustGuidance</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="66" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a2719c7715e866b93665e0c1f78da5f53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::propulsion::MeeCostateBasedThrustGuidance::getCurrentForceDirectionInPropagationFrame</definition>
        <argsstring>()</argsstring>
        <name>getCurrentForceDirectionInPropagationFrame</name>
        <reimplements refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1a4284988acc53bfac7681ebd44c876e74">getCurrentForceDirectionInPropagationFrame</reimplements>
        <briefdescription>
<para>Function returning the current force direction, as computed by last call to updateCalculator/updateForceDirection. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returning the current force direction, as computed by last call to updateCalculator/updateForceDirection, computed based on the MEE costates provided by the costateFunction_ member variable <simplesect kind="return"><para>Current force direction, expressed in propagation frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="74" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1aabcc3ccbe4ae9becb05ecfc47830edba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::propulsion::MeeCostateBasedThrustGuidance::getRotationToGlobalFrame</definition>
        <argsstring>()</argsstring>
        <name>getRotationToGlobalFrame</name>
        <reimplements refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a1b34033b2b7a0a65fa88482b3cbb46af">getRotationToGlobalFrame</reimplements>
        <briefdescription>
<para>Function to get the rotation from body-fixed to inertial frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get the rotation from body-fixed to inertial frame. NOT YET IMPLEMENTED IN THIS DERIVED CLASS. <simplesect kind="return"><para>NOT YET IMPLEMENTED IN THIS DERIVED CLASS. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="84" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="84" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1af0b4c70c4903a025306e6f005b5f8b92" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tudat::propulsion::MeeCostateBasedThrustGuidance::updateForceDirection</definition>
        <argsstring>(const double time)</argsstring>
        <name>updateForceDirection</name>
        <reimplements refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1abac6943fd9ca3925e7228ac7d40db8f0">updateForceDirection</reimplements>
        <param>
          <type>const double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Function to update the force direction to the current time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to update the force direction to the current time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to which object is to be updated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="96" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/propulsion/costateBasedThrustGuidance.cpp" bodystart="31" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Derived class which calculates the thrust direction based on costates for modified equinoctial elements. </para>
    </briefdescription>
    <detaileddescription>
<para>Derived class which calculates the thrust direction based on costates for modified equinoctial elements. The values of the costates are provided as input to the class (as a function of time), and are used to determine the thrust direction, based on the algorithm by Kluever (2010), extended to Modified Equinoctial Elements by Boudestijn (2014) </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>tudat::reference_frames::DependentOrientationCalculator</label>
        <link refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator"/>
      </node>
      <node id="1">
        <label>tudat::propulsion::MeeCostateBasedThrustGuidance</label>
        <link refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::propulsion::BodyFixedForceDirectionGuidance</label>
        <link refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>tudat::reference_frames::DependentOrientationCalculator</label>
        <link refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator"/>
      </node>
      <node id="1">
        <label>tudat::propulsion::MeeCostateBasedThrustGuidance</label>
        <link refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::propulsion::BodyFixedForceDirectionGuidance</label>
        <link refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" line="42" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propulsion/costateBasedThrustGuidance.h" bodystart="43" bodyend="114"/>
    <listofallmembers>
      <member refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1a726bb194ee7ed0d800ead3b1449779da" prot="protected" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>bodyFixedForceDirection_</name></member>
      <member refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1ad6935329963c8c162a25b187e44479e6" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>BodyFixedForceDirectionGuidance</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1afc44e8555768d1f615aceb8a9b73a73d" prot="private" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>centralBodyGravitationalParameterFunction_</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a884d56333d89dda2f7e7bd66b766d889" prot="private" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>centralBodyStateFunction_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a35657f88248dcd967407407683ae0c3b" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>computeAndGetRotationToLocalFrame</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a1755ad8572c3700bb2a94ae9374e4be3" prot="private" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>costateFunction_</name></member>
      <member refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1ab5201df1ef26337c7ec386489e6a5cec" prot="protected" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>currentBodyFixedForceDirection_</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1adc4f8a8a0e442ec9811845ee30b441bb" prot="private" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>currentForceDirection_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a0db024b775687211d42a35f004522d98" prot="protected" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>currentTime_</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1a412b359df31e4a698f7b8163fcfd917c" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>DependentOrientationCalculator</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a2719c7715e866b93665e0c1f78da5f53" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>getCurrentForceDirectionInPropagationFrame</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1ac03e98cfae11d58bca82653b4efa569c" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>getRotationMatrixToGlobalFrame</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1acfce5f24e3b395cfb907cff85723ce34" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>getRotationMatrixToLocalFrame</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1aabcc3ccbe4ae9becb05ecfc47830edba" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>getRotationToGlobalFrame</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1adc0c3adf1fa3997907446579de013a95" prot="public" virt="non-virtual" ambiguityscope="tudat::propulsion::BodyFixedForceDirectionGuidance::"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>getRotationToGlobalFrame</name></member>
      <member refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1a4d00bda9b8e058f61be0589e0808989a" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>getRotationToLocalFrame</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1aeb3dbd7efa5b5f9cffc2b608322eebf4" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>MeeCostateBasedThrustGuidance</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1ab6633244ee25cfb6b24335ea899ec145" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>resetCurrentTime</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1adc03930adf46bdc8cb9702d0f62055c1" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>resetDerivedClassTime</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a27533a7a8d3f31b56adc70365058574e" prot="private" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>thrustingBodyStateFunction_</name></member>
      <member refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1a9c68637d16f973b22f5b06ee3aea1031" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>updateCalculator</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1af0b4c70c4903a025306e6f005b5f8b92" prot="private" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>updateForceDirection</name></member>
      <member refid="d1/dd5/classtudat_1_1propulsion_1_1BodyFixedForceDirectionGuidance_1a34c738a626dced8c464072c23cd272d8" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>~BodyFixedForceDirectionGuidance</name></member>
      <member refid="dd/de2/classtudat_1_1reference__frames_1_1DependentOrientationCalculator_1aea8faf33883c339c4a9542e330d4bde2" prot="public" virt="virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>~DependentOrientationCalculator</name></member>
      <member refid="df/d15/classtudat_1_1propulsion_1_1MeeCostateBasedThrustGuidance_1a8a941fb75d24980a67454bd10a134fef" prot="public" virt="non-virtual"><scope>tudat::propulsion::MeeCostateBasedThrustGuidance</scope><name>~MeeCostateBasedThrustGuidance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
