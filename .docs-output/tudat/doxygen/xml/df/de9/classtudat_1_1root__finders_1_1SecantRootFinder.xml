<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder" kind="class" language="C++" prot="public">
    <compoundname>tudat::root_finders::SecantRootFinder</compoundname>
    <basecompoundref refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder" prot="public" virt="non-virtual">tudat::root_finders::RootFinder&lt; double &gt;</basecompoundref>
    <includes refid="da/daa/secantRootFinder_8h" local="no">secantRootFinder.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1aac9c188a36dade663e08d6f23666235e" prot="public" static="no">
        <type><ref refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder" kindref="compound">RootFinder</ref>&lt; DataType &gt;::<ref refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1aac9c188a36dade663e08d6f23666235e" kindref="member">FunctionPointer</ref></type>
        <definition>typedef RootFinder&lt; DataType &gt;::FunctionPointer tudat::root_finders::SecantRootFinder&lt; DataType &gt;::FunctionPointer</definition>
        <argsstring></argsstring>
        <name>FunctionPointer</name>
        <briefdescription>
<para>Usefull type definition for the function pointer (from base class). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="66" column="51" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a03e942259161a73acca6d1f5ad4b08ac" prot="public" static="no">
        <type><ref refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder" kindref="compound">RootFinder</ref>&lt; DataType &gt;::<ref refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a03e942259161a73acca6d1f5ad4b08ac" kindref="member">TerminationFunction</ref></type>
        <definition>typedef RootFinder&lt; DataType &gt;::TerminationFunction tudat::root_finders::SecantRootFinder&lt; DataType &gt;::TerminationFunction</definition>
        <argsstring></argsstring>
        <name>TerminationFunction</name>
        <briefdescription>
<para>Usefull type definition for the termination function (from base class). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="69" column="55" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a71e652a00c7b31249e7db6958b48dc7f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::root_finders::SecantRootFinder&lt; DataType &gt;::initialGuessOfRootOne_</definition>
        <argsstring></argsstring>
        <name>initialGuessOfRootOne_</name>
        <briefdescription>
<para>Initial value of the first point (least accurate guess) in the Secant algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="211" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a106b52fc2941e50a3ce773c485a5e2f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::root_finders::SecantRootFinder&lt; DataType &gt;::SecantRootFinder</definition>
        <argsstring>(TerminationFunction terminationFunction, const DataType initialGuessOfRootOne=0.5)</argsstring>
        <name>SecantRootFinder</name>
        <param>
          <type><ref refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a03e942259161a73acca6d1f5ad4b08ac" kindref="member">TerminationFunction</ref></type>
          <declname>terminationFunction</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>initialGuessOfRootOne</declname>
          <defval>0.5</defval>
        </param>
        <briefdescription>
<para>Constructor taking the general termination function and the least accurate initial guess. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor of the Secant root-finder, taking the general termination function (function determining whether to terminate the root-finding process), and the least accurate value of the initial guess ($x_0$). (Note that although it is prefered that the least accurate guess is passed to the constructor, this is not required, as the algorithm will determine the most accurate guess and switches the values if necessary.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>terminationFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>The function specifying the termination conditions of the root-finding process. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>RootFinderCore::terminationFunction </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initialGuessOfRootOne</parametername>
</parameternamelist>
<parameterdescription>
<para>First point used to initiate the Secant root-finder algorithm. (Default is 0.5) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="84" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a352a004068f48881e31a4359168b8261" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::root_finders::SecantRootFinder&lt; DataType &gt;::SecantRootFinder</definition>
        <argsstring>(const double relativeIndependentVariableTolerance, const unsigned int maxIterations, const DataType initialGuessOfRootOne=0.5)</argsstring>
        <name>SecantRootFinder</name>
        <param>
          <type>const double</type>
          <declname>relativeIndependentVariableTolerance</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>initialGuessOfRootOne</declname>
          <defval>0.5</defval>
        </param>
        <briefdescription>
<para>Constructor taking typical convergence criteria and the least accurate initial guess. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor of the Secant root-finder, taking the maximum number of iterations, the relative tolerance for the independent variable, and the least accurate value of the initial guess ($x_0$). (Note that although it is prefered that the least accurate guess is passed to the constructor, this is not required, as the algorithm will determine the most accurate guess and switches the values if necessary.) If desired, a custom convergence function can be provided to the alternative constructor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>relativeIndependentVariableTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative difference between the root solution of two subsequent solutions below which convergence is reached. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of iterations after which the root finder is terminated, i.e. convergence is assumed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialGuessOfRootOne</parametername>
</parameternamelist>
<parameterdescription>
<para>First point used to initiate the Secant root-finder algorithm. (Default is 0.5) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="106" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="106" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a5c3e5aabd9f7cd495e9f24c7feca2e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::root_finders::SecantRootFinder&lt; DataType &gt;::~SecantRootFinder</definition>
        <argsstring>()</argsstring>
        <name>~SecantRootFinder</name>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="118" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a570786d1366fe5ed66f6c992ebc42884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DataType</type>
        <definition>DataType tudat::root_finders::SecantRootFinder&lt; DataType &gt;::execute</definition>
        <argsstring>(const FunctionPointer rootFunction, const DataType initialGuess)</argsstring>
        <name>execute</name>
        <param>
          <type>const <ref refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1aac9c188a36dade663e08d6f23666235e" kindref="member">FunctionPointer</ref></type>
          <declname>rootFunction</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>initialGuess</declname>
        </param>
        <briefdescription>
<para>Find a root of the function provided as input. </para>
        </briefdescription>
        <detaileddescription>
<para>Finds a root of the function provided as input, using the termination function set by the constructor. This method takes the second initial value ($x_1$), which is the most accurate guess. (Note that although it is prefered that the most accurate guess is passed to this function, this is not required, as the algorithm will determine the most accurate guess and switches the values if necessary.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rootFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to find the root of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialGuess</parametername>
</parameternamelist>
<parameterdescription>
<para>The second, most accurate, initial guess of the root. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Root of the rootFunction that is found.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ConvergenceExeption</parametername>
</parameternamelist>
<parameterdescription>
<para>If the solution does not converge to a root value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="134" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="134" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1ad004611203d5fb45cc38b3eb8447e264" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::root_finders::SecantRootFinder&lt; DataType &gt;::setNewInitialGuess</definition>
        <argsstring>(DataType newInitialGuessOfRootOne)</argsstring>
        <name>setNewInitialGuess</name>
        <param>
          <type>DataType</type>
          <declname>newInitialGuessOfRootOne</declname>
        </param>
        <briefdescription>
<para>Set a new value for the first point used in the Secant algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets a new value for least accurate value of the initial guess ($x_0$) used in the Secant algorithm. (Note that although it is prefered that the least accurate guess is passed to the constructor, this is not required, as the algorithm will determine the most accurate guess and switches the values if necessary.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newInitialGuessOfRootOne</parametername>
</parameternamelist>
<parameterdescription>
<para>A new value of the first point used to initiate the Secant root-finder algorithm. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="201" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="201" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Secant root-finding method. </para>
    </briefdescription>
    <detaileddescription>
<para>The secant root-finding method uses a succession of roots of secant lines to better aspproximate the root. The method requires a valid function (no derivatives are required), and two initial values ($x_0$ and $x_1$), which should ideally be chosen to lie close to the root, and where $x_1$ is the most accurate guess. It is not required that the initial values bracket the root. Note that this root finder does not always converge.</para>
<para>The algorithm is similar to the Newton-Raphson root-finder, but uses the slope between the two points as the value for the function derivative [Weisstein, 2014]:</para>
<para><formula id="175">\[ x_{n+1} = x_n - F\left(x_n\right) \frac{\left(x_n - x_{n-1}\right)} {F\left(x_n\right) - F\left(x_{n-1}\right)} \]</formula></para>
<para>Defined shorthand notations: SecantRootFinderCore&lt; double &gt; =&gt; <ref refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder" kindref="compound">SecantRootFinder</ref></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type used to represent floating-point values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tudat::root_finders::SecantRootFinder&lt; DataType &gt;</label>
        <link refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::root_finders::RootFinder&lt; double &gt;</label>
        <link refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tudat::root_finders::SecantRootFinder&lt; DataType &gt;</label>
        <link refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::root_finders::RootFinder&lt; double &gt;</label>
        <link refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" line="61" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/secantRootFinder.h" bodystart="62" bodyend="213"/>
    <listofallmembers>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a570786d1366fe5ed66f6c992ebc42884" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>execute</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1a5009700f9daaefe9592520f41f0acd4a" prot="public" virt="pure-virtual" ambiguityscope="RootFinder&lt; double &gt;::"><scope>tudat::root_finders::SecantRootFinder</scope><name>execute</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1aac9c188a36dade663e08d6f23666235e" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>FunctionPointer</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1a27434ca7484c4e45e77bdfe63f5a7252" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>getFunction</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a71e652a00c7b31249e7db6958b48dc7f" prot="private" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>initialGuessOfRootOne_</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1a9b965801f22c3ff27f3c34996bf092ad" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>RootFinder</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1aafc876b28429d8519b47778d9d5f56b8" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>RootFinder</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1acd11d2e8941f562b59f756b6e65c4a8d" prot="protected" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>rootFunction</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a106b52fc2941e50a3ce773c485a5e2f3" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>SecantRootFinder</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a352a004068f48881e31a4359168b8261" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>SecantRootFinder</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1ad004611203d5fb45cc38b3eb8447e264" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>setNewInitialGuess</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a03e942259161a73acca6d1f5ad4b08ac" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>TerminationFunction</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1ab90854fae8530fd91376d100b3a26818" prot="protected" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>terminationFunction_</name></member>
      <member refid="dc/d30/classtudat_1_1root__finders_1_1RootFinder_1ad501cc8971bd751fcd6f971853ab2e60" prot="public" virt="virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>~RootFinder</name></member>
      <member refid="df/de9/classtudat_1_1root__finders_1_1SecantRootFinder_1a5c3e5aabd9f7cd495e9f24c7feca2e35" prot="public" virt="non-virtual"><scope>tudat::root_finders::SecantRootFinder</scope><name>~SecantRootFinder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
