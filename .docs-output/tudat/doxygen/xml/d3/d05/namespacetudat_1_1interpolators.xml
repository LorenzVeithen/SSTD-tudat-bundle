<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d3/d05/namespacetudat_1_1interpolators" kind="namespace" language="C++">
    <compoundname>tudat::interpolators</compoundname>
    <innerclass refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" prot="public">tudat::interpolators::InterpolatorSettings</innerclass>
    <innerclass refid="d3/d92/classtudat_1_1interpolators_1_1LagrangeInterpolatorSettings" prot="public">tudat::interpolators::LagrangeInterpolatorSettings</innerclass>
    <innerclass refid="d0/d52/classtudat_1_1interpolators_1_1DataMapSettings" prot="public">tudat::interpolators::DataMapSettings</innerclass>
    <innerclass refid="d4/d72/classtudat_1_1interpolators_1_1IndependentDependentDataMapSettings" prot="public">tudat::interpolators::IndependentDependentDataMapSettings</innerclass>
    <innerclass refid="d2/da7/classtudat_1_1interpolators_1_1FromFileDataMapSettings" prot="public">tudat::interpolators::FromFileDataMapSettings</innerclass>
    <innerclass refid="d3/d9b/classtudat_1_1interpolators_1_1HermiteDataSettings" prot="public">tudat::interpolators::HermiteDataSettings</innerclass>
    <innerclass refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" prot="public">tudat::interpolators::DataInterpolationSettings</innerclass>
    <innerclass refid="d6/d84/classtudat_1_1interpolators_1_1CubicSplineInterpolator" prot="public">tudat::interpolators::CubicSplineInterpolator</innerclass>
    <innerclass refid="dc/d7b/classtudat_1_1interpolators_1_1HermiteCubicSplineInterpolator" prot="public">tudat::interpolators::HermiteCubicSplineInterpolator</innerclass>
    <innerclass refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" prot="public">tudat::interpolators::Interpolator</innerclass>
    <innerclass refid="d2/dee/classtudat_1_1interpolators_1_1JumpDataLinearInterpolator" prot="public">tudat::interpolators::JumpDataLinearInterpolator</innerclass>
    <innerclass refid="dd/ddb/classtudat_1_1interpolators_1_1LagrangeInterpolator" prot="public">tudat::interpolators::LagrangeInterpolator</innerclass>
    <innerclass refid="d8/d63/classtudat_1_1interpolators_1_1LinearInterpolator" prot="public">tudat::interpolators::LinearInterpolator</innerclass>
    <innerclass refid="de/d34/classtudat_1_1interpolators_1_1LookUpScheme" prot="public">tudat::interpolators::LookUpScheme</innerclass>
    <innerclass refid="d5/dfa/classtudat_1_1interpolators_1_1HuntingAlgorithmLookupScheme" prot="public">tudat::interpolators::HuntingAlgorithmLookupScheme</innerclass>
    <innerclass refid="d9/dab/classtudat_1_1interpolators_1_1BinarySearchLookupScheme" prot="public">tudat::interpolators::BinarySearchLookupScheme</innerclass>
    <innerclass refid="d3/d37/classtudat_1_1interpolators_1_1MultiDimensionalInterpolator" prot="public">tudat::interpolators::MultiDimensionalInterpolator</innerclass>
    <innerclass refid="d1/da8/classtudat_1_1interpolators_1_1MultiLinearInterpolator" prot="public">tudat::interpolators::MultiLinearInterpolator</innerclass>
    <innerclass refid="d6/d99/classtudat_1_1interpolators_1_1OneDimensionalInterpolator" prot="public">tudat::interpolators::OneDimensionalInterpolator</innerclass>
    <innerclass refid="d5/de5/classtudat_1_1interpolators_1_1PiecewiseConstantInterpolator" prot="public">tudat::interpolators::PiecewiseConstantInterpolator</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66" prot="public" static="no" strong="no">
        <type></type>
        <name>InterpolatorTypes</name>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66adeda3f97e3a34e5a7d3d6b1559be8691" prot="public">
          <name>linear_interpolator</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66a7da143698be9138cb267c2a59da9003d" prot="public">
          <name>multi_linear_interpolator</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66a98d58d43aabec8a9d8822b31ba9dc400" prot="public">
          <name>cubic_spline_interpolator</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66a04483516ccb8636d336e221508e62ddf" prot="public">
          <name>lagrange_interpolator</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66a6649d9152928d92894e72932864f1ccc" prot="public">
          <name>hermite_spline_interpolator</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66a668e3275d4f844bbac156d56b7ae579f" prot="public">
          <name>piecewise_constant_interpolator</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of available interpolator types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="36" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" prot="public" static="no" strong="no">
        <type></type>
        <name>BoundaryInterpolationType</name>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8a0e3d81e8a454ec1b95d4a7596c12a5c6" prot="public">
          <name>throw_exception_at_boundary</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8adc79548134bc3ebaf600baff1030f1ad" prot="public">
          <name>use_boundary_value</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8ac905c135c28cfaa8663db005b4071b38" prot="public">
          <name>use_boundary_value_with_warning</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8ae5358c41b5456d72889afcf8b50e691a" prot="public">
          <name>extrapolate_at_boundary</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8aaa309289f7b15a54a54225927141a216" prot="public">
          <name>extrapolate_at_boundary_with_warning</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8aaa7bc1c44ad4dcd82f88b5d558fd0bfa" prot="public">
          <name>use_default_value</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8a149376daf2a27d12a6aee3ed4f6762e0" prot="public">
          <name>use_default_value_with_warning</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration for types of boundary interpolation methods. </para>
        </briefdescription>
        <detaileddescription>
<para>Enumeration for types of boundary interpolation methods, i.e., for when the independent variable requested for interpolation is outside the domain of the independent variables input in the interpolator constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/interpolator.h" line="32" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/interpolator.h" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94" prot="public" static="no" strong="no">
        <type></type>
        <name>LagrangeInterpolatorBoundaryHandling</name>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94acffa15e1a5e428a2150bc0efedd5817c" prot="public">
          <name>lagrange_cubic_spline_boundary_interpolation</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94a0c3c9ccd8420941950bd4a36878120cf" prot="public">
          <name>lagrange_no_boundary_interpolation</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum defining the manner in which to handle the edges of the Lagrange interpolator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lagrangeInterpolator.h" line="36" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lagrangeInterpolator.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" prot="public" static="no" strong="no">
        <type></type>
        <name>AvailableLookupScheme</name>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1a1c1f29d419c98915aa2c3a7d6e543bbf" prot="public">
          <name>huntingAlgorithm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1a49cae3bbba08123e4c126d8abefa10ca" prot="public">
          <name>binarySearch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum of available lookup schemes. </para>
        </briefdescription>
        <detaileddescription>
<para>Enum of available lookup schemes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" line="30" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" bodystart="31" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1a884596d5a30250b14cf9a81cbf97938a" prot="public" static="no">
        <type><ref refid="d6/d84/classtudat_1_1interpolators_1_1CubicSplineInterpolator" kindref="compound">CubicSplineInterpolator</ref>&lt; double, double &gt;</type>
        <definition>typedef CubicSplineInterpolator&lt; double, double &gt; tudat::interpolators::CubicSplineInterpolatorDouble</definition>
        <argsstring></argsstring>
        <name>CubicSplineInterpolatorDouble</name>
        <briefdescription>
<para>Typedef for cubic spline interpolator with (in)dependent = double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/cubicSplineInterpolator.h" line="432" column="33" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/cubicSplineInterpolator.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1a65cd05eb0daa869e049d8c0c7cd8ee57" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a884596d5a30250b14cf9a81cbf97938a" kindref="member">CubicSplineInterpolatorDouble</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt; CubicSplineInterpolatorDouble &gt; tudat::interpolators::CubicSplineInterpolatorDoublePointer</definition>
        <argsstring></argsstring>
        <name>CubicSplineInterpolatorDoublePointer</name>
        <briefdescription>
<para>Typedef for shared-pointer to cubic spline interpolator with (in)dependent = double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/cubicSplineInterpolator.h" line="435" column="25" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/cubicSplineInterpolator.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1ae9b01556b2cb47e5db3eb222f9f0da92" prot="public" static="no">
        <type><ref refid="dc/d7b/classtudat_1_1interpolators_1_1HermiteCubicSplineInterpolator" kindref="compound">HermiteCubicSplineInterpolator</ref>&lt; double, double &gt;</type>
        <definition>typedef HermiteCubicSplineInterpolator&lt; double, double &gt; tudat::interpolators::HermiteCubicSplineInterpolatorDouble</definition>
        <argsstring></argsstring>
        <name>HermiteCubicSplineInterpolatorDouble</name>
        <briefdescription>
<para>Typede for cubic hermite spline with double (in)dependent variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/hermiteCubicSplineInterpolator.h" line="232" column="40" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/hermiteCubicSplineInterpolator.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1a19cc710c5783d663cdb4beeb1ab9390a" prot="public" static="no">
        <type><ref refid="dd/ddb/classtudat_1_1interpolators_1_1LagrangeInterpolator" kindref="compound">LagrangeInterpolator</ref>&lt; double, double &gt;</type>
        <definition>typedef LagrangeInterpolator&lt; double, double &gt; tudat::interpolators::LagrangeInterpolatorDouble</definition>
        <argsstring></argsstring>
        <name>LagrangeInterpolatorDouble</name>
        <briefdescription>
<para>Typedef for <ref refid="dd/ddb/classtudat_1_1interpolators_1_1LagrangeInterpolator" kindref="compound">LagrangeInterpolator</ref> with double as both its dependent and independent data type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lagrangeInterpolator.h" line="505" column="30" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lagrangeInterpolator.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1af997d514aff4de05eaefc567f102366c" prot="public" static="no">
        <type><ref refid="d8/d63/classtudat_1_1interpolators_1_1LinearInterpolator" kindref="compound">LinearInterpolator</ref>&lt; double, double &gt;</type>
        <definition>typedef LinearInterpolator&lt; double, double &gt; tudat::interpolators::LinearInterpolatorDouble</definition>
        <argsstring></argsstring>
        <name>LinearInterpolatorDouble</name>
        <briefdescription>
<para>Typedef for linear interpolator with (in)dependent variable = double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/linearInterpolator.h" line="258" column="28" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/linearInterpolator.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1a800ecc07d8c5a4d8e9879355e1c5b3be" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1af997d514aff4de05eaefc567f102366c" kindref="member">LinearInterpolatorDouble</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt; LinearInterpolatorDouble &gt; tudat::interpolators::LinearInterpolatorDoublePointer</definition>
        <argsstring></argsstring>
        <name>LinearInterpolatorDoublePointer</name>
        <briefdescription>
<para>Typedef for shared-pointer to linear interpolator with (in)dependent variable = double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/linearInterpolator.h" line="261" column="25" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/linearInterpolator.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1abd92ec6b7d83d02d4273ac4cb5b91822" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="de/d34/classtudat_1_1interpolators_1_1LookUpScheme" kindref="compound">LookUpScheme</ref>&lt; double &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt; LookUpScheme&lt; double &gt; &gt; tudat::interpolators::LookUpSchemeDoublePointer</definition>
        <argsstring></argsstring>
        <name>LookUpSchemeDoublePointer</name>
        <briefdescription>
<para>Typedef for shared-pointer to <ref refid="de/d34/classtudat_1_1interpolators_1_1LookUpScheme" kindref="compound">LookUpScheme</ref> object with double-type entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" line="218" column="25" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1ae12e060302edc7342b0753ed8b3b5e2d" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="d5/dfa/classtudat_1_1interpolators_1_1HuntingAlgorithmLookupScheme" kindref="compound">HuntingAlgorithmLookupScheme</ref>&lt; double &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt; HuntingAlgorithmLookupScheme&lt; double &gt; &gt; tudat::interpolators::HuntingAlgorithmLookupSchemeDoublePointer</definition>
        <argsstring></argsstring>
        <name>HuntingAlgorithmLookupSchemeDoublePointer</name>
        <briefdescription>
<para>Typedef for shared-pointer to <ref refid="d5/dfa/classtudat_1_1interpolators_1_1HuntingAlgorithmLookupScheme" kindref="compound">HuntingAlgorithmLookupScheme</ref> object with double-type entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" line="222" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d05/namespacetudat_1_1interpolators_1a0a06d6dee81ecb7fcae37f64b542d10c" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="d9/dab/classtudat_1_1interpolators_1_1BinarySearchLookupScheme" kindref="compound">BinarySearchLookupScheme</ref>&lt; double &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt; BinarySearchLookupScheme&lt; double &gt; &gt; tudat::interpolators::BinarySearchLookupSchemeDoublePointer</definition>
        <argsstring></argsstring>
        <name>BinarySearchLookupSchemeDoublePointer</name>
        <briefdescription>
<para>Typedef for shared-pointer to <ref refid="d9/dab/classtudat_1_1interpolators_1_1BinarySearchLookupScheme" kindref="compound">BinarySearchLookupScheme</ref> object with double-type entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" line="226" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/lookupScheme.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1a9c7346359394948e8267aae5aab6dc2d" prot="public" static="yes" mutable="no">
        <type>std::map&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66" kindref="member">InterpolatorTypes</ref>, std::string &gt;</type>
        <definition>std::map&lt; InterpolatorTypes, std::string &gt; tudat::interpolators::oneDimensionalInterpolatorTypes</definition>
        <argsstring></argsstring>
        <name>oneDimensionalInterpolatorTypes</name>
        <initializer>=
{
    { linear_interpolator, &quot;linear&quot; },
    { cubic_spline_interpolator, &quot;cubicSpline&quot; },
    { lagrange_interpolator, &quot;lagrange&quot; },
    { hermite_spline_interpolator, &quot;hermiteSpline&quot; },
    { piecewise_constant_interpolator, &quot;piecewiseConstant&quot; }
}</initializer>
        <briefdescription>
<para>Map of <computeroutput>InterpolatorTypes</computeroutput> string representations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="27" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1a521e296206b133389e6f5ef99419cfde" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66" kindref="member">InterpolatorTypes</ref> &gt;</type>
        <definition>std::vector&lt; InterpolatorTypes &gt; tudat::interpolators::unsupportedOneDimensionalInterpolatorTypes</definition>
        <argsstring></argsstring>
        <name>unsupportedOneDimensionalInterpolatorTypes</name>
        <initializer>= { }</initializer>
        <briefdescription>
<para><computeroutput>InterpolatorTypes</computeroutput> not supported by <computeroutput>json_interface</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="37" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1a94f6e989ed74a749685fbf43e42c9a22" prot="public" static="yes" mutable="no">
        <type>std::map&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref>, std::string &gt;</type>
        <definition>std::map&lt; AvailableLookupScheme, std::string &gt; tudat::interpolators::lookupSchemeTypes</definition>
        <argsstring></argsstring>
        <name>lookupSchemeTypes</name>
        <initializer>=
{
    { huntingAlgorithm, &quot;huntingAlgorithm&quot; },
    { binarySearch, &quot;binarySearch&quot; }
}</initializer>
        <briefdescription>
<para>Map of <computeroutput>AvailableLookupScheme</computeroutput>s string representations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="56" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1a322cea41528da73bf935c69ecf426e8e" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref> &gt;</type>
        <definition>std::vector&lt; AvailableLookupScheme &gt; tudat::interpolators::unsupportedLookupSchemeTypes</definition>
        <argsstring></argsstring>
        <name>unsupportedLookupSchemeTypes</name>
        <initializer>= { }</initializer>
        <briefdescription>
<para><computeroutput>AvailableLookupScheme</computeroutput>s not supported by <computeroutput>json_interface</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="63" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1a5b333c0e187651f14cc8c8bee96ea424" prot="public" static="yes" mutable="no">
        <type>std::map&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref>, std::string &gt;</type>
        <definition>std::map&lt; BoundaryInterpolationType, std::string &gt; tudat::interpolators::boundaryInterpolationTypes</definition>
        <argsstring></argsstring>
        <name>boundaryInterpolationTypes</name>
        <initializer>=
{
    { throw_exception_at_boundary, &quot;throwException&quot; },
    { use_boundary_value, &quot;boundaryValue&quot; },
    { use_boundary_value_with_warning, &quot;boundaryValueWithWarning&quot; },
    { extrapolate_at_boundary, &quot;extrapolate&quot; },
    { extrapolate_at_boundary_with_warning, &quot;extrapolateWithWarning&quot; }
}</initializer>
        <briefdescription>
<para>Map of <computeroutput>AvailableLookupScheme</computeroutput>s string representations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="81" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1a11433250886c4d5d3b0c745df4911601" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref> &gt;</type>
        <definition>std::vector&lt; BoundaryInterpolationType &gt; tudat::interpolators::unsupportedBoundaryInterpolationTypes</definition>
        <argsstring></argsstring>
        <name>unsupportedBoundaryInterpolationTypes</name>
        <initializer>=
{ use_default_value, use_default_value_with_warning }</initializer>
        <briefdescription>
<para><computeroutput>BoundaryInterpolationType</computeroutput>s not supported by <computeroutput>json_interface</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="91" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1ae1f15241c63487114f8b449ccbae27d7" prot="public" static="yes" mutable="no">
        <type>std::map&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94" kindref="member">LagrangeInterpolatorBoundaryHandling</ref>, std::string &gt;</type>
        <definition>std::map&lt; LagrangeInterpolatorBoundaryHandling, std::string &gt; tudat::interpolators::lagrangeInterpolatorBoundaryHandlings</definition>
        <argsstring></argsstring>
        <name>lagrangeInterpolatorBoundaryHandlings</name>
        <initializer>=
{
    { lagrange_cubic_spline_boundary_interpolation, &quot;cubicSplineBoundary&quot; },
    { lagrange_no_boundary_interpolation, &quot;noBoundary&quot; }
}</initializer>
        <briefdescription>
<para>Map of <computeroutput>LagrangeInterpolatorBoundaryHandling</computeroutput>s string representations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="110" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d05/namespacetudat_1_1interpolators_1aecfff7ef20e6974caa2d22defa645705" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94" kindref="member">LagrangeInterpolatorBoundaryHandling</ref> &gt;</type>
        <definition>std::vector&lt; LagrangeInterpolatorBoundaryHandling &gt; tudat::interpolators::unsupportedLagrangeInterpolatorBoundaryHandlings</definition>
        <argsstring></argsstring>
        <name>unsupportedLagrangeInterpolatorBoundaryHandlings</name>
        <initializer>= { }</initializer>
        <briefdescription>
<para><computeroutput>LagrangeInterpolatorBoundaryHandling</computeroutput>s not supported by <computeroutput>json_interface</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="117" column="20" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a2ad304b169d5d37ddfd6ec2758db52a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const InterpolatorTypes &amp;oneDimensionalInterpolatorType)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66" kindref="member">InterpolatorTypes</ref> &amp;</type>
          <declname>oneDimensionalInterpolatorType</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>InterpolatorTypes</computeroutput> to <computeroutput>json</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="40" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a018802ad9f8325ec4a06cb42076bdb4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, InterpolatorTypes &amp;oneDimensionalInterpolatorType)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type><ref refid="d3/d05/namespacetudat_1_1interpolators_1a7013111713b2e86a6afc0653a000da66" kindref="member">InterpolatorTypes</ref> &amp;</type>
          <declname>oneDimensionalInterpolatorType</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>json</computeroutput> to <computeroutput>InterpolatorTypes</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="46" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a341079775bec565203a47330231e1b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const AvailableLookupScheme &amp;availableLookupScheme)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref> &amp;</type>
          <declname>availableLookupScheme</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>AvailableLookupScheme</computeroutput> to <computeroutput>json</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="66" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a8df678fa1cd47025cc6791d744856721" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, AvailableLookupScheme &amp;availableLookupScheme)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type><ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref> &amp;</type>
          <declname>availableLookupScheme</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>json</computeroutput> to <computeroutput>AvailableLookupScheme</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="72" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1ab8758e778d5e1a1d8dfe2484301aae4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const BoundaryInterpolationType &amp;boundaryHandling)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref> &amp;</type>
          <declname>boundaryHandling</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>BoundaryInterpolationType</computeroutput> to <computeroutput>json</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="95" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a97f43cfce3eba62497c0b302bd6e35a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, BoundaryInterpolationType &amp;boundaryHandling)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type><ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref> &amp;</type>
          <declname>boundaryHandling</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>json</computeroutput> to <computeroutput>BoundaryInterpolationType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="101" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a510d61ebf3f17c9990ef4d75d10de462" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const LagrangeInterpolatorBoundaryHandling &amp;lagrangeInterpolatorBoundaryHandling)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94" kindref="member">LagrangeInterpolatorBoundaryHandling</ref> &amp;</type>
          <declname>lagrangeInterpolatorBoundaryHandling</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>LagrangeInterpolatorBoundaryHandling</computeroutput> to <computeroutput>json</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="120" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a585a2d093e55ba63cc713cb00a0787a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, LagrangeInterpolatorBoundaryHandling &amp;lagrangeInterpolatorBoundaryHandling)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type><ref refid="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94" kindref="member">LagrangeInterpolatorBoundaryHandling</ref> &amp;</type>
          <declname>lagrangeInterpolatorBoundaryHandling</declname>
        </param>
        <briefdescription>
<para>Convert <computeroutput>json</computeroutput> to <computeroutput>LagrangeInterpolatorBoundaryHandling</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="128" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1ac92505469e84ecf5b397de63f5967b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const std::shared_ptr&lt; DataMapSettings&lt; I, D &gt; &gt; &amp;dataMapSettings)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/d52/classtudat_1_1interpolators_1_1DataMapSettings" kindref="compound">DataMapSettings</ref>&lt; I, D &gt; &gt; &amp;</type>
          <declname>dataMapSettings</declname>
        </param>
        <briefdescription>
<para>Create a <computeroutput>json</computeroutput> object from a shared pointer to a <computeroutput><ref refid="d0/d52/classtudat_1_1interpolators_1_1DataMapSettings" kindref="compound">DataMapSettings</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="140" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="140" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a14f4752c23b08ede32515a9afb95aa71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, std::shared_ptr&lt; DataMapSettings&lt; I, D &gt; &gt; &amp;dataMapSettings)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/d52/classtudat_1_1interpolators_1_1DataMapSettings" kindref="compound">DataMapSettings</ref>&lt; I, D &gt; &gt; &amp;</type>
          <declname>dataMapSettings</declname>
        </param>
        <briefdescription>
<para>Create a shared pointer to a <computeroutput><ref refid="d0/d52/classtudat_1_1interpolators_1_1DataMapSettings" kindref="compound">DataMapSettings</ref></computeroutput> object from a <computeroutput>json</computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="181" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="181" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a45f79aa51633e9a87ca9e7bd3b7231ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const std::shared_ptr&lt; InterpolatorSettings &gt; &amp;interpolatorSettings)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt; &amp;</type>
          <declname>interpolatorSettings</declname>
        </param>
        <briefdescription>
<para>Create a <computeroutput>json</computeroutput> object from a shared pointer to a <computeroutput><ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/math/interpolation.cpp" line="23" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/math/interpolation.cpp" bodystart="23" bodyend="58" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" declline="218" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a6d867533ac2fac3a9e2753bef87e88ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, std::shared_ptr&lt; InterpolatorSettings &gt; &amp;interpolatorSettings)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt; &amp;</type>
          <declname>interpolatorSettings</declname>
        </param>
        <briefdescription>
<para>Create a shared pointer to a <computeroutput><ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref></computeroutput> object from a <computeroutput>json</computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/math/interpolation.cpp" line="61" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/interface/json/math/interpolation.cpp" bodystart="61" bodyend="99" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" declline="221" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1ab522a9f2f3cf997d7ad57a9082441671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::interpolators::to_json</definition>
        <argsstring>(nlohmann::json &amp;jsonObject, const std::shared_ptr&lt; DataInterpolationSettings&lt; I, D &gt; &gt; &amp;dataInterpolationSettings)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref>&lt; I, D &gt; &gt; &amp;</type>
          <declname>dataInterpolationSettings</declname>
        </param>
        <briefdescription>
<para>Create a <computeroutput>json</computeroutput> object from a shared pointer to a <computeroutput><ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="228" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a5ba9bf8890dfef926d268d0fc9422a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::interpolators::from_json</definition>
        <argsstring>(const nlohmann::json &amp;jsonObject, std::shared_ptr&lt; DataInterpolationSettings&lt; I, D &gt; &gt; &amp;dataInterpolationSettings)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>jsonObject</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref>&lt; I, D &gt; &gt; &amp;</type>
          <declname>dataInterpolationSettings</declname>
        </param>
        <briefdescription>
<para>Create a shared pointer to a <computeroutput><ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref></computeroutput> object from a <computeroutput>json</computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="244" column="6" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" bodystart="244" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a873b109ef108adc1ad994a1513e53afd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; InterpolatorSettings &gt; tudat::interpolators::linearInterpolation</definition>
        <argsstring>(const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryInterpolation=extrapolate_at_boundary_with_warning)</argsstring>
        <name>linearInterpolation</name>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref></type>
          <declname>selectedLookupScheme</declname>
          <defval>huntingAlgorithm</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref></type>
          <declname>boundaryInterpolation</declname>
          <defval>extrapolate_at_boundary_with_warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="237" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a2127ea96915ff5df42b6b609646bcd7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; InterpolatorSettings &gt; tudat::interpolators::cubicSplineInterpolation</definition>
        <argsstring>(const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryInterpolation=extrapolate_at_boundary_with_warning)</argsstring>
        <name>cubicSplineInterpolation</name>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref></type>
          <declname>selectedLookupScheme</declname>
          <defval>huntingAlgorithm</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref></type>
          <declname>boundaryInterpolation</declname>
          <defval>extrapolate_at_boundary_with_warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="245" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="245" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a6c097117ba2d3b3424825ef36111c0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; InterpolatorSettings &gt; tudat::interpolators::piecewiseConstantInterpolation</definition>
        <argsstring>(const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryInterpolation=extrapolate_at_boundary_with_warning)</argsstring>
        <name>piecewiseConstantInterpolation</name>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref></type>
          <declname>selectedLookupScheme</declname>
          <defval>huntingAlgorithm</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref></type>
          <declname>boundaryInterpolation</declname>
          <defval>extrapolate_at_boundary_with_warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="254" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="254" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1ae4c681993e6c2b0684d4e3808ef0ba64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; InterpolatorSettings &gt; tudat::interpolators::hermiteInterpolation</definition>
        <argsstring>(const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryInterpolation=extrapolate_at_boundary_with_warning)</argsstring>
        <name>hermiteInterpolation</name>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref></type>
          <declname>selectedLookupScheme</declname>
          <defval>huntingAlgorithm</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref></type>
          <declname>boundaryInterpolation</declname>
          <defval>extrapolate_at_boundary_with_warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="263" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="263" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a0dc3ff5acd1af6a60efde8eeb83c576f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
        <definition>std::shared_ptr&lt; InterpolatorSettings &gt; tudat::interpolators::lagrangeInterpolation</definition>
        <argsstring>(const int order, const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryInterpolation=extrapolate_at_boundary_with_warning, const LagrangeInterpolatorBoundaryHandling lagrangeBoundaryHandling=lagrange_cubic_spline_boundary_interpolation)</argsstring>
        <name>lagrangeInterpolation</name>
        <param>
          <type>const int</type>
          <declname>order</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a31d6dcb244ab2e3055371ab377027bb1" kindref="member">AvailableLookupScheme</ref></type>
          <declname>selectedLookupScheme</declname>
          <defval>huntingAlgorithm</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a2a462da4b91afdc785987bc35a2325e8" kindref="member">BoundaryInterpolationType</ref></type>
          <declname>boundaryInterpolation</declname>
          <defval>extrapolate_at_boundary_with_warning</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d05/namespacetudat_1_1interpolators_1a465ce415c7cb7907a83c6e796b589a94" kindref="member">LagrangeInterpolatorBoundaryHandling</ref></type>
          <declname>lagrangeBoundaryHandling</declname>
          <defval>lagrange_cubic_spline_boundary_interpolation</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="271" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="271" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1abfa4bd3b27ec63d0fa2d2a8c72880aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndependentVariableType</type>
          </param>
          <param>
            <type>typename DependentVariableType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="d6/d99/classtudat_1_1interpolators_1_1OneDimensionalInterpolator" kindref="compound">OneDimensionalInterpolator</ref>&lt; IndependentVariableType, DependentVariableType &gt; &gt;</type>
        <definition>std::shared_ptr&lt; OneDimensionalInterpolator&lt; IndependentVariableType, DependentVariableType &gt; &gt; tudat::interpolators::createOneDimensionalInterpolator</definition>
        <argsstring>(const std::map&lt; IndependentVariableType, DependentVariableType &gt; dataToInterpolate, const std::shared_ptr&lt; InterpolatorSettings &gt; interpolatorSettings, const std::pair&lt; DependentVariableType, DependentVariableType &gt; &amp;defaultExtrapolationValue=std::make_pair(IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;(), IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;()), const std::vector&lt; DependentVariableType &gt; firstDerivativeOfDependentVariables=std::vector&lt; DependentVariableType &gt;())</argsstring>
        <name>createOneDimensionalInterpolator</name>
        <param>
          <type>const std::map&lt; IndependentVariableType, DependentVariableType &gt;</type>
          <declname>dataToInterpolate</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
          <declname>interpolatorSettings</declname>
        </param>
        <param>
          <type>const std::pair&lt; DependentVariableType, DependentVariableType &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
          <defval>std::make_pair(<ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; DependentVariableType &gt;(), <ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; DependentVariableType &gt;())</defval>
        </param>
        <param>
          <type>const std::vector&lt; DependentVariableType &gt;</type>
          <declname>firstDerivativeOfDependentVariables</declname>
          <defval>std::vector&lt; DependentVariableType &gt;()</defval>
        </param>
        <briefdescription>
<para>Function to create a one-dimensional interpolator. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create a one-dimensional interpolator from the data that is to be interpolated, as well as the settings that are to be used to create the interpolator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataToInterpolate</parametername>
</parameternamelist>
<parameterdescription>
<para>Map providing data that is to be interpolated (key = independent variables, value = dependent variables). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interpolatorSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings that are to be used to create interpolator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pair of default values to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstDerivativeOfDependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>First derivative of dependent variables w.r.t. independent variable at independent variables values in values of dataToInterpolate. By default, this vector is empty, it only needs to be supplied if the selected interpolator requires this data (e.g. Hermite spline). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">Interpolator</ref> created from dataToInterpolate using interpolatorSettings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="493" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="493" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1ab3c98fbb88e12a9814a7a64916414507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndependentType</type>
          </param>
          <param>
            <type>typename DependentType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="d6/d99/classtudat_1_1interpolators_1_1OneDimensionalInterpolator" kindref="compound">OneDimensionalInterpolator</ref>&lt; IndependentType, DependentType &gt; &gt;</type>
        <definition>std::shared_ptr&lt; OneDimensionalInterpolator&lt; IndependentType, DependentType &gt; &gt; tudat::interpolators::createOneDimensionalInterpolator</definition>
        <argsstring>(const std::shared_ptr&lt; DataInterpolationSettings&lt; IndependentType, DependentType &gt; &gt; dataInterpolationSettings, const std::pair&lt; DependentType, DependentType &gt; &amp;defaultExtrapolationValue=std::make_pair(IdentityElement::getAdditionIdentity&lt; DependentType &gt;(), IdentityElement::getAdditionIdentity&lt; DependentType &gt;()))</argsstring>
        <name>createOneDimensionalInterpolator</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref>&lt; IndependentType, DependentType &gt; &gt;</type>
          <declname>dataInterpolationSettings</declname>
        </param>
        <param>
          <type>const std::pair&lt; DependentType, DependentType &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
          <defval>std::make_pair(<ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; DependentType &gt;(), <ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; DependentType &gt;())</defval>
        </param>
        <briefdescription>
<para>Function to create an interpolator from <ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create an interpolator from <ref refid="d7/d5c/classtudat_1_1interpolators_1_1DataInterpolationSettings" kindref="compound">DataInterpolationSettings</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataInterpolationSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>Object containing the data that is to be interpolated and settings that are to be used to create the interpolator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pair of default values to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">Interpolator</ref> created from dataToInterpolate using interpolatorSettings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="612" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="612" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1aa4d8d0b78cc89bb4afbbb20b01b3ff17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndependentVariableType</type>
          </param>
          <param>
            <type>typename DependentVariableType</type>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>NumberOfDimensions</declname>
            <defname>NumberOfDimensions</defname>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="d3/d37/classtudat_1_1interpolators_1_1MultiDimensionalInterpolator" kindref="compound">MultiDimensionalInterpolator</ref>&lt; IndependentVariableType, DependentVariableType, NumberOfDimensions &gt; &gt;</type>
        <definition>std::shared_ptr&lt; MultiDimensionalInterpolator&lt; IndependentVariableType, DependentVariableType, NumberOfDimensions &gt; &gt; tudat::interpolators::createMultiDimensionalInterpolator</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; IndependentVariableType &gt; &gt; &amp;independentValues, const boost::multi_array&lt; DependentVariableType, static_cast&lt; size_t &gt;(NumberOfDimensions) &gt; &amp;dependentData, const std::shared_ptr&lt; InterpolatorSettings &gt; interpolatorSettings, const std::vector&lt; std::pair&lt; DependentVariableType, DependentVariableType &gt; &gt; &amp;defaultExtrapolationValue=std::vector&lt; std::pair&lt; DependentVariableType, DependentVariableType &gt; &gt;(NumberOfDimensions, std::make_pair(IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;(), IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;())))</argsstring>
        <name>createMultiDimensionalInterpolator</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; IndependentVariableType &gt; &gt; &amp;</type>
          <declname>independentValues</declname>
        </param>
        <param>
          <type>const boost::multi_array&lt; DependentVariableType, static_cast&lt; size_t &gt;(NumberOfDimensions) &gt; &amp;</type>
          <declname>dependentData</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d0/dd6/classtudat_1_1interpolators_1_1InterpolatorSettings" kindref="compound">InterpolatorSettings</ref> &gt;</type>
          <declname>interpolatorSettings</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::pair&lt; DependentVariableType, DependentVariableType &gt; &gt; &amp;</type>
          <declname>defaultExtrapolationValue</declname>
          <defval>std::vector&lt; std::pair&lt; DependentVariableType, DependentVariableType &gt; &gt;(NumberOfDimensions, std::make_pair(<ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; DependentVariableType &gt;(), <ref refid="dd/dcc/classtudat_1_1IdentityElement_1ab3bf500034128c13c2a34fdad21de2b1" kindref="member">IdentityElement::getAdditionIdentity</ref>&lt; DependentVariableType &gt;()))</defval>
        </param>
        <briefdescription>
<para>Function to create a multi-dimensional interpolator. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to create a multi-dimensional interpolator from the data that is to be interpolated, as well as the settings that are to be used to create the interpolator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>independentValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of vectors containing data points of independent variables, each must be sorted in ascending order. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dependentData</parametername>
</parameternamelist>
<parameterdescription>
<para>Multi-dimensional array of dependent data at each point of hyper-rectangular grid formed by independent variable points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interpolatorSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings that are to be used to create interpolator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultExtrapolationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pair of default values to be used for extrapolation, in case of use_default_value or use_default_value_with_warning as methods for boundaryHandling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/d6c/classtudat_1_1interpolators_1_1Interpolator" kindref="compound">Interpolator</ref> created from independentValues and dependentData using interpolatorSettings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" line="647" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/createInterpolator.h" bodystart="647" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a8d7d4904dee9e13716567b0c934df6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndependentVariableType</type>
          </param>
          <param>
            <type>typename DependentVariableType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; DependentVariableType &gt;</type>
        <definition>std::vector&lt; DependentVariableType &gt; tudat::interpolators::solveTridiagonalMatrixEquation</definition>
        <argsstring>(const std::vector&lt; IndependentVariableType &gt; &amp;subDiagonal, const std::vector&lt; IndependentVariableType &gt; &amp;diagonal, const std::vector&lt; IndependentVariableType &gt; &amp;superDiagonal, const std::vector&lt; DependentVariableType &gt; &amp;rightHandSide)</argsstring>
        <name>solveTridiagonalMatrixEquation</name>
        <param>
          <type>const std::vector&lt; IndependentVariableType &gt; &amp;</type>
          <declname>subDiagonal</declname>
        </param>
        <param>
          <type>const std::vector&lt; IndependentVariableType &gt; &amp;</type>
          <declname>diagonal</declname>
        </param>
        <param>
          <type>const std::vector&lt; IndependentVariableType &gt; &amp;</type>
          <declname>superDiagonal</declname>
        </param>
        <param>
          <type>const std::vector&lt; DependentVariableType &gt; &amp;</type>
          <declname>rightHandSide</declname>
        </param>
        <briefdescription>
<para>Solve efficiently tri-diagonal matrix equation. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions efficiently solves the matrix equation Ax = b for b, where A is tri-diagonal. The required input are the diagonal and sub/super diagonals of A, as well as the vector b. Input is given as STL vectors. The input diagonals must be at least the same size as right-hand-side. Any additional entries (at end) will be ignored in the algorithm. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IndependentVariableType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of independent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DependentVariableType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of dependent variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subDiagonal</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub-diagonal of matrix A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>superDiagonal</parametername>
</parameternamelist>
<parameterdescription>
<para>Super-diagonal of matrix A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diagonal</parametername>
</parameternamelist>
<parameterdescription>
<para>Diagonal of matrix A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightHandSide</parametername>
</parameternamelist>
<parameterdescription>
<para>Right-hand-side of matrix equation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Solution to matrix equation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/cubicSplineInterpolator.h" line="49" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/cubicSplineInterpolator.h" bodystart="49" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1ad966de94539612277acd47f33a7cb3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::interpolators::computeLinearInterpolation</definition>
        <argsstring>(const Eigen::VectorXd &amp;sortedIndependentVariables, const Eigen::VectorXd &amp;associatedDependentVariables, const double targetIndependentVariableValue)</argsstring>
        <name>computeLinearInterpolation</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>sortedIndependentVariables</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>associatedDependentVariables</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>targetIndependentVariableValue</declname>
        </param>
        <briefdescription>
<para>Compute linear interpolation free function. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute linear interpolation.</para>
<para>Computes linear interpolation of data provided in the form of a vector of sorted indepedent variables and an associated vector of dependent variables. The linear interpolation equation used is: <formula id="166">\[ y_{target} = x_{1} * ( 1 - mu ) + x_{2} * mu \]</formula> where <formula id="167">$ mu = \frac{ x_{target} - x_{1} } { x_{2} + x_{1} } $</formula> and <formula id="168">$ x_{2} &gt; x_{1} $</formula>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sortedIndependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of independent variables sorted. in ascending/descending order. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>associatedDependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of dependent variables associated with sorted vector of independent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetIndependentVariableValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Target independent variable value in vector of sorted independent variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of dependent variable associated with target independent value in vector of sorted independent variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/math/interpolators/linearInterpolator.cpp" line="26" column="8" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/math/interpolators/linearInterpolator.cpp" bodystart="26" bodyend="53" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/linearInterpolator.h" declline="282" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d3/d05/namespacetudat_1_1interpolators_1a27a7ec1ed18cc32e3490f0150f24b3a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::interpolators::computeLinearInterpolation</definition>
        <argsstring>(const std::map&lt; double, Eigen::VectorXd &gt; &amp;sortedIndepedentAndDependentVariables, const double targetIndependentVariableValue)</argsstring>
        <name>computeLinearInterpolation</name>
        <param>
          <type>const std::map&lt; double, Eigen::VectorXd &gt; &amp;</type>
          <declname>sortedIndepedentAndDependentVariables</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>targetIndependentVariableValue</declname>
        </param>
        <briefdescription>
<para>Compute linear interpolation free function. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute linear interpolation.</para>
<para>Computes linear interpolation of data provided in the form of a map of independent variables and associated vectors of dependent variables. The linear interpolation equation used is: <formula id="166">\[ y_{target} = x_{1} * ( 1 - mu ) + x_{2} * mu \]</formula> where <formula id="169">$ \mu = \frac{ x_{target} - x_{1} } { x_{2} + x_{1} } $</formula> and <formula id="168">$ x_{2} &gt; x_{1} $</formula>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sortedIndepedentAndDependentVariables</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of sorted independent variables, in ascending/descending order, and associated dependent variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetIndependentVariableValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Target independent variable value in vector of sorted independent variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of dependent variable associated with target independent value in vector of sorted independent variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/math/interpolators/linearInterpolator.cpp" line="56" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/math/interpolators/linearInterpolator.cpp" bodystart="56" bodyend="93" declfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/interpolators/linearInterpolator.h" declline="304" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>interpolators namespace. </para>
    </briefdescription>
    <detaileddescription>
<para>The interpolators namespace. </para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/interface/json/math/interpolation.h" line="21" column="1"/>
  </compounddef>
</doxygen>
