<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition" kind="class" language="C++" prot="public">
    <compoundname>tudat::root_finders::RootAbsoluteToleranceTerminationCondition</compoundname>
    <basecompoundref refid="d2/df7/classtudat_1_1root__finders_1_1TerminationCondition" prot="public" virt="non-virtual">tudat::root_finders::TerminationCondition&lt; double &gt;</basecompoundref>
    <includes refid="d1/daa/terminationConditions_8h" local="no">terminationConditions.h</includes>
    <templateparamlist>
      <param>
        <type>typename ScalarType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition_1a342ff15518f4d972f4e4c15520e788d0" prot="private" static="no" mutable="no">
        <type>const ScalarType</type>
        <definition>const ScalarType tudat::root_finders::RootAbsoluteToleranceTerminationCondition&lt; ScalarType &gt;::absoluteTolerance_</definition>
        <argsstring></argsstring>
        <name>absoluteTolerance_</name>
        <briefdescription>
<para>Absolute tolerance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" line="260" column="22" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition_1a25d617cd913bd7535be73771c1eef40e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::root_finders::RootAbsoluteToleranceTerminationCondition&lt; ScalarType &gt;::RootAbsoluteToleranceTerminationCondition</definition>
        <argsstring>(const ScalarType absoluteTolerance=1.0e-15)</argsstring>
        <name>RootAbsoluteToleranceTerminationCondition</name>
        <param>
          <type>const ScalarType</type>
          <declname>absoluteTolerance</declname>
          <defval>1.0e-15</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor, taking root absolute tolerance, maximum number of iterations and run-time exception flag.</para>
<para>Default constructor, taking a root absolute tolerance (default=1.0e-15), a specified maximum number of iterations (default=1000) and a flag indicating if a run-time exception should be thrown if this number is exceeded (default=true). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anAbsoluteTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>An absolute tolerance (default=1.0e-15). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" line="230" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition_1a704617cfac96a842da5be8eaf7c3aa24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::root_finders::RootAbsoluteToleranceTerminationCondition&lt; ScalarType &gt;::checkTerminationCondition</definition>
        <argsstring>(const ScalarType currentRootGuess, const ScalarType previousRootGuess, const ScalarType currentRootFunctionValue, const ScalarType previousRootFunctionValue, const unsigned int numberOfIterations)</argsstring>
        <name>checkTerminationCondition</name>
        <param>
          <type>const ScalarType</type>
          <declname>currentRootGuess</declname>
        </param>
        <param>
          <type>const ScalarType</type>
          <declname>previousRootGuess</declname>
        </param>
        <param>
          <type>const ScalarType</type>
          <declname>currentRootFunctionValue</declname>
        </param>
        <param>
          <type>const ScalarType</type>
          <declname>previousRootFunctionValue</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>numberOfIterations</declname>
        </param>
        <briefdescription>
<para>Check termination condition (combined abs. tolerance and max. itetations) </para>
        </briefdescription>
        <detaileddescription>
<para>Check termination condition (wrapper for checkRootAbsoluteTolerance()- and checkMaximumIterationsExceeded()-functions). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentRootGuess</parametername>
</parameternamelist>
<parameterdescription>
<para>Current root value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>previousRootGuess</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous root value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentRootFunctionValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Current root function value (not used, included for base class compatibility). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>previousRootFunctionValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous root function value (not used, included for base class compatibility). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of iterations that have been completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flag indicating if termination condition has been reached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" line="247" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" bodystart="247" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Absolute tolerance for root termination condition. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the <ref refid="d2/df7/classtudat_1_1root__finders_1_1TerminationCondition" kindref="compound">TerminationCondition</ref> base class to check if the absolute tolerance for the root value computed by the root-finder that this class is used in conjunction with has been reached. Additionally, this termination condition also checks if the maximum number of iterations has been exceeded. This class effectively serves as a wrapper for the checkRootAbsoluteTolerance()- and checkMaximumIterationsExceeded()-functions. <simplesect kind="see"><para>checkRootAbsoluteTolerance(), checkMaximumIterationsExceeded(). </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tudat::root_finders::RootAbsoluteToleranceTerminationCondition&lt; ScalarType &gt;</label>
        <link refid="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::root_finders::TerminationCondition&lt; double &gt;</label>
        <link refid="d2/df7/classtudat_1_1root__finders_1_1TerminationCondition"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tudat::root_finders::RootAbsoluteToleranceTerminationCondition&lt; ScalarType &gt;</label>
        <link refid="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::root_finders::TerminationCondition&lt; double &gt;</label>
        <link refid="d2/df7/classtudat_1_1root__finders_1_1TerminationCondition"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" line="218" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/root_finders/terminationConditions.h" bodystart="219" bodyend="261"/>
    <listofallmembers>
      <member refid="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition_1a342ff15518f4d972f4e4c15520e788d0" prot="private" virt="non-virtual"><scope>tudat::root_finders::RootAbsoluteToleranceTerminationCondition</scope><name>absoluteTolerance_</name></member>
      <member refid="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition_1a704617cfac96a842da5be8eaf7c3aa24" prot="public" virt="non-virtual"><scope>tudat::root_finders::RootAbsoluteToleranceTerminationCondition</scope><name>checkTerminationCondition</name></member>
      <member refid="d2/df7/classtudat_1_1root__finders_1_1TerminationCondition_1a30ea1b5811f2ec46f1e328a1e7d2d5e3" prot="public" virt="pure-virtual" ambiguityscope="TerminationCondition&lt; double &gt;::"><scope>tudat::root_finders::RootAbsoluteToleranceTerminationCondition</scope><name>checkTerminationCondition</name></member>
      <member refid="d3/d43/classtudat_1_1root__finders_1_1RootAbsoluteToleranceTerminationCondition_1a25d617cd913bd7535be73771c1eef40e" prot="public" virt="non-virtual"><scope>tudat::root_finders::RootAbsoluteToleranceTerminationCondition</scope><name>RootAbsoluteToleranceTerminationCondition</name></member>
      <member refid="d2/df7/classtudat_1_1root__finders_1_1TerminationCondition_1a7e5a2e0b3948c40e379d496b8bb6f781" prot="public" virt="virtual"><scope>tudat::root_finders::RootAbsoluteToleranceTerminationCondition</scope><name>~TerminationCondition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
