<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris" kind="class" language="C++" prot="public">
    <compoundname>tudat::ephemerides::SimpleRotationalEphemeris</compoundname>
    <basecompoundref refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris" prot="public" virt="non-virtual">tudat::ephemerides::RotationalEphemeris</basecompoundref>
    <includes refid="d1/dee/simpleRotationalEphemeris_8h" local="no">simpleRotationalEphemeris.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a292b6bab8080389c979d28808393ac4a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::ephemerides::SimpleRotationalEphemeris::rotationRate_</definition>
        <argsstring></argsstring>
        <name>rotationRate_</name>
        <briefdescription>
<para>Rotation rate of body (about local z-axis). </para>
        </briefdescription>
        <detaileddescription>
<para>Rotation rate of body (about local z-axis). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="200" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1affd5d8d1b0b2524b67c6e4c5ffec87cd" prot="private" static="no" mutable="no">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::SimpleRotationalEphemeris::initialRotationToTargetFrame_</definition>
        <argsstring></argsstring>
        <name>initialRotationToTargetFrame_</name>
        <briefdescription>
<para>Rotation from target to base frame at initial time. </para>
        </briefdescription>
        <detaileddescription>
<para>Rotation from target to base frame at initial time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="206" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a739526c996a89d00c1cba4be86861161" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::ephemerides::SimpleRotationalEphemeris::initialSecondsSinceEpoch_</definition>
        <argsstring></argsstring>
        <name>initialSecondsSinceEpoch_</name>
        <briefdescription>
<para>Seconds since epoch at which initialRotationToTargetFrame_ is valid. </para>
        </briefdescription>
        <detaileddescription>
<para>Seconds since epoch at which initialRotationToTargetFrame is valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="212" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a3dd5f82824240dcb64770878c2faa557" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::ephemerides::SimpleRotationalEphemeris::initialEulerAngles_</definition>
        <argsstring></argsstring>
        <name>initialEulerAngles_</name>
        <briefdescription>
<para>Initial Euler angles describing the rotational state of the body at initialSecondsSinceEpoch_. </para>
        </briefdescription>
        <detaileddescription>
<para>Initial Euler angles describing the rotational state of the body at initialSecondsSinceEpoch_. Order of the vector is: right ascension (alpha), declination (delta), prime meridian of date (W) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="220" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a077afdab1f051d85c8ba5f785f0e96c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::ephemerides::SimpleRotationalEphemeris::SimpleRotationalEphemeris</definition>
        <argsstring>(const Eigen::Quaterniond &amp;initialRotationToTargetFrame, const double rotationRate, const double initialSecondsSinceEpoch, const std::string &amp;baseFrameOrientation=&quot;&quot;, const std::string &amp;targetFrameOrientation=&quot;&quot;)</argsstring>
        <name>SimpleRotationalEphemeris</name>
        <param>
          <type>const Eigen::Quaterniond &amp;</type>
          <declname>initialRotationToTargetFrame</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rotationRate</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>initialSecondsSinceEpoch</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>baseFrameOrientation</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>targetFrameOrientation</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor from initial rotational state. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor from initial rotational state that is empty because all member variables are initialized through the constructor arguments. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initialRotationToTargetFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation from base to target frame at initial time (specified by 2nd and 3rd parameter). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant rotation rate of body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialSecondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which primeMeridianOfDate is valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseFrameOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Base frame identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetFrameOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Target frame identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="43" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="43" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1ae725cb0e7c9ae2003b7aaa8d73364463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::ephemerides::SimpleRotationalEphemeris::SimpleRotationalEphemeris</definition>
        <argsstring>(const double poleRightAscension, const double poleDeclination, const double primeMeridianOfDate, const double rotationRate, const double initialSecondsSinceEpoch, const std::string &amp;baseFrameOrientation=&quot;&quot;, const std::string &amp;targetFrameOrientation=&quot;&quot;)</argsstring>
        <name>SimpleRotationalEphemeris</name>
        <param>
          <type>const double</type>
          <declname>poleRightAscension</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>poleDeclination</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>primeMeridianOfDate</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rotationRate</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>initialSecondsSinceEpoch</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>baseFrameOrientation</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>targetFrameOrientation</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor from rotation state angles. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor from rotation state angles, i.e., right ascension and declination of pole (both assumuned constant) and the position of the prime meridian at a given epoch (reference Julian day and seconds since that Julian day). Calculates member variables from constructor arguments. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>poleRightAscension</parametername>
</parameternamelist>
<parameterdescription>
<para>Right ascension of body&apos;s pole in base frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poleDeclination</parametername>
</parameternamelist>
<parameterdescription>
<para>Declination of body&apos;s pole in base frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>primeMeridianOfDate</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of prime meridian at given time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant rotation rate of body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialSecondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which primeMeridianOfDate is valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseFrameOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Base frame identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetFrameOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Target frame identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="71" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="71" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a902fb9fe60eefa9d1ab943ef32a55f2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::ephemerides::SimpleRotationalEphemeris::~SimpleRotationalEphemeris</definition>
        <argsstring>()</argsstring>
        <name>~SimpleRotationalEphemeris</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="92" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a2d8ba0d2ff99412fe30a1446ab39cf44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::SimpleRotationalEphemeris::getRotationToBaseFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationToBaseFrame</name>
        <reimplements refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a48c05e29f3a225433eb02feb09d1b77a">getRotationToBaseFrame</reimplements>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Calculate rotation quaternion from target frame to base frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function that calculates the rotation quaternion from target frame to base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="101" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a7c1ec7c84f042ab174556727f052f927" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::SimpleRotationalEphemeris::getRotationToTargetFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationToTargetFrame</name>
        <reimplements refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a569eeb2b7416693589b6f2b4707932a7">getRotationToTargetFrame</reimplements>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion to target frame from base frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the rotation quaternion to target frame from base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="113" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/simpleRotationalEphemeris.cpp" bodystart="23" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a8a73dcb9267d9fed8d187e3a6da0587b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::SimpleRotationalEphemeris::getDerivativeOfRotationToBaseFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToBaseFrame</name>
        <reimplements refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae3d4f6abdc820c309328747397b25afc">getDerivativeOfRotationToBaseFrame</reimplements>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame.</para>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from target (typically local) to original (typically global) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="125" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a0195bb027ba27691e2eb7306dd8312fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::SimpleRotationalEphemeris::getDerivativeOfRotationToTargetFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToTargetFrame</name>
        <reimplements refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a8749ef7c763d598973acf970c546c601">getDerivativeOfRotationToTargetFrame</reimplements>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame.</para>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from original (typically global) to target (typically local) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="141" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/simpleRotationalEphemeris.cpp" bodystart="37" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a8f9da325e1938ce694c587dd0926d5eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::SimpleRotationalEphemeris::getInitialRotationToTargetFrame</definition>
        <argsstring>()</argsstring>
        <name>getInitialRotationToTargetFrame</name>
        <briefdescription>
<para>Get rotation from target to base frame at initial time. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns rotation from target to base frame at initial time. <simplesect kind="return"><para>Rotation quaternion at initial time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="149" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a990308031a62d986cc233b841a4f40bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::ephemerides::SimpleRotationalEphemeris::getInitialSecondsSinceEpoch</definition>
        <argsstring>()</argsstring>
        <name>getInitialSecondsSinceEpoch</name>
        <briefdescription>
<para>Get seconds since epoch at which initialRotationToTargetFrame_ is valid. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns seconds since epoch at which initialRotationToTargetFrame_ is valid. <simplesect kind="return"><para>Seconds since Julian day epoch [s]. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="156" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1aca6eb183bba5c7b0d88f2eebc3370b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::ephemerides::SimpleRotationalEphemeris::getRotationRate</definition>
        <argsstring>()</argsstring>
        <name>getRotationRate</name>
        <briefdescription>
<para>Get rotation rate of body. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns rotation rate of body. <simplesect kind="return"><para>Rotation rate [rad/s]. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="163" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1ad661bb96abc4ca8ba8c9559a1303cd07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::ephemerides::SimpleRotationalEphemeris::resetRotationRate</definition>
        <argsstring>(const double rotationRate)</argsstring>
        <name>resetRotationRate</name>
        <param>
          <type>const double</type>
          <declname>rotationRate</declname>
        </param>
        <briefdescription>
<para>Function to reset the rotation rate of the body. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to reset the rotation rate of the body. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotationRate</parametername>
</parameternamelist>
<parameterdescription>
<para>New rotation rate [rad/s]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="170" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a63943e2e3e47d91b671deebf8594aab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::ephemerides::SimpleRotationalEphemeris::getInitialEulerAngles</definition>
        <argsstring>()</argsstring>
        <name>getInitialEulerAngles</name>
        <briefdescription>
<para>Function to get vector of euler angles at initialSecondsSinceEpoch_. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get vector of euler angles at initialSecondsSinceEpoch_, in order right ascension, declination, prime meridian. <simplesect kind="return"><para>Vector of euler angles at initialSecondsSinceEpoch_, in order right ascension, declination, prime meridian. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="178" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a11d6d95aa1ee76fcdbe4e10fe5584f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::ephemerides::SimpleRotationalEphemeris::resetInitialPoleRightAscensionAndDeclination</definition>
        <argsstring>(const double rightAscension, const double declination)</argsstring>
        <name>resetInitialPoleRightAscensionAndDeclination</name>
        <param>
          <type>const double</type>
          <declname>rightAscension</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>declination</declname>
        </param>
        <briefdescription>
<para>Function to reset the right ascension and declination of body&apos;s north pole. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to reset the right ascension and declination of body&apos;s north pole, recalculates the initialRotationToOriginalFrame_ member. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rightAscension</parametername>
</parameternamelist>
<parameterdescription>
<para>New right ascension of north pole. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>declination</parametername>
</parameternamelist>
<parameterdescription>
<para>New declination of north pole. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="190" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/simpleRotationalEphemeris.cpp" bodystart="53" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to model the rotation of bodies with constant rotation axis and rate. </para>
    </briefdescription>
    <detaileddescription>
<para>Class to model the rotation of bodies with constant rotation axis and rate, i.e., those for which the angular momentum vector remains constant in time (according to an inertial observer). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::ephemerides::RotationalEphemeris</label>
        <link refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris"/>
      </node>
      <node id="1">
        <label>tudat::ephemerides::SimpleRotationalEphemeris</label>
        <link refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::ephemerides::RotationalEphemeris</label>
        <link refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris"/>
      </node>
      <node id="1">
        <label>tudat::ephemerides::SimpleRotationalEphemeris</label>
        <link refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" line="28" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/simpleRotationalEphemeris.h" bodystart="29" bodyend="221"/>
    <listofallmembers>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae8cb8bf513d5c4088386333b7e071677" prot="protected" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>baseFrameOrientation_</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a8182a82115da3182001eaa703cf39520" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getBaseFrameOrientation</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a8a73dcb9267d9fed8d187e3a6da0587b" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a204fc299543c55e9adafd9c5db9ce28b" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1af6748042b7a97dc7573b7fd3679d2e11" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a2bddf1e55952da8c91762cf862f3166d" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1aaa4d6f50a9745fc2d97c35c7eaf8f79b" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameTemplated</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a0195bb027ba27691e2eb7306dd8312fa" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a3a99d3f0f093dd19dd99d54b89baeecc" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a94d0afac3f13531cb5d4be27397045da" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a17929bac936040d7a3d3d8fb5a52c6c6" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4528fd7b41c14e3edac5ce544daf5fab" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1af26529c506f7eed75689b57e70c29b64" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a3fb1cf6cfb681f835e5837160a04b6a3" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae51124f5f545aea0fd3a38784fbae27d" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4ede523d08816231de795a38371c198d" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ac758d76f05ad8d37130b0fb895790e65" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameTemplated</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a63943e2e3e47d91b671deebf8594aab9" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getInitialEulerAngles</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a8f9da325e1938ce694c587dd0926d5eb" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getInitialRotationToTargetFrame</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a990308031a62d986cc233b841a4f40bb" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getInitialSecondsSinceEpoch</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a88502baa383390473f016d197a42c5a3" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationalVelocityVectorInBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a6119997ff42dca4a9ecb0b83229a8524" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationalVelocityVectorInTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a474b39015aa2c6f1061cd1ab80cfb375" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationMatrixToBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a72bd5e91640110426aa20c66bc5c145e" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationMatrixToTargetFrame</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1aca6eb183bba5c7b0d88f2eebc3370b5b" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationRate</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1acd7e580c893057e09b5420f43cd7ac6b" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationStateVector</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a2d8ba0d2ff99412fe30a1446ab39cf44" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a138692d3669026de1302eeb8e2bdf7ca" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToBaseFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1aa6a4f20094027fc014ca2ec1dd3a47f1" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a44a158bf6844a49666f92496bf4d2236" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a9f1752bfb88addfc7300e053aad61d31" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToBaseFrameTemplated</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a7c1ec7c84f042ab174556727f052f927" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ac231daac9a3aec42d42c9221952c76fd" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToTargetFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a80f1c27c08f514a0326ff3dafd15801c" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1afd307cdb6cee2197d9a1e729efdf0e7f" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a45a4c306e66fefda96e41deb1ebb0620" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a0a9beaf6621a5305b5b8ba50c4c4724a" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>getTargetFrameOrientation</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a3dd5f82824240dcb64770878c2faa557" prot="private" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>initialEulerAngles_</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1affd5d8d1b0b2524b67c6e4c5ffec87cd" prot="private" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>initialRotationToTargetFrame_</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a739526c996a89d00c1cba4be86861161" prot="private" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>initialSecondsSinceEpoch_</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a11d6d95aa1ee76fcdbe4e10fe5584f7e" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>resetInitialPoleRightAscensionAndDeclination</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1ad661bb96abc4ca8ba8c9559a1303cd07" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>resetRotationRate</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a224420ee5a24d5ffe7d64b64f81d11f3" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>RotationalEphemeris</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a292b6bab8080389c979d28808393ac4a" prot="private" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>rotationRate_</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a077afdab1f051d85c8ba5f785f0e96c6" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>SimpleRotationalEphemeris</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1ae725cb0e7c9ae2003b7aaa8d73364463" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>SimpleRotationalEphemeris</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a113566bbf2ec56dc623466c98dab0454" prot="protected" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>targetFrameOrientation_</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4964ece0cf96c422462568cbd0560eda" prot="public" virt="virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>~RotationalEphemeris</name></member>
      <member refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a902fb9fe60eefa9d1ab943ef32a55f2c" prot="public" virt="non-virtual"><scope>tudat::ephemerides::SimpleRotationalEphemeris</scope><name>~SimpleRotationalEphemeris</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
