<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere" kind="class" language="C++" prot="public">
    <compoundname>tudat::aerodynamics::ExponentialAtmosphere</compoundname>
    <basecompoundref refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere" prot="public" virt="non-virtual">tudat::aerodynamics::StandardAtmosphere</basecompoundref>
    <includes refid="de/d84/exponentialAtmosphere_8h" local="no">exponentialAtmosphere.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a697c9ac1f332ec0264a0e5446cbda120" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::scaleHeight_</definition>
        <argsstring></argsstring>
        <name>scaleHeight_</name>
        <briefdescription>
<para>Scale altitude. </para>
        </briefdescription>
        <detaileddescription>
<para>Scale altitude (property of exponential atmosphere) in meters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="246" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a118af8867fc8607b744e239f3ebd1cf4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::constantTemperature_</definition>
        <argsstring></argsstring>
        <name>constantTemperature_</name>
        <briefdescription>
<para>Constant temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>The atmospheric temperature (constant, property of exponential atmosphere) in Kelvin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="252" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a885f253177aa085b20daa17948c5806d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::densityAtZeroAltitude_</definition>
        <argsstring></argsstring>
        <name>densityAtZeroAltitude_</name>
        <briefdescription>
<para>density at zero altitude </para>
        </briefdescription>
        <detaileddescription>
<para>Density at zero altitude (property of exponential atmosphere) in kg per meter^3. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="258" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1aede7a653414a7738e08a93ffac8502b2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::specificGasConstant_</definition>
        <argsstring></argsstring>
        <name>specificGasConstant_</name>
        <briefdescription>
<para>Specific gas constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Specific gas constant of the atmosphere, its value is assumed constant, due to the assumption of constant atmospheric composition. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="265" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5426a646c1c076c6c6576654649922e2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::ratioOfSpecificHeats_</definition>
        <argsstring></argsstring>
        <name>ratioOfSpecificHeats_</name>
        <briefdescription>
<para>Ratio of specific heats at constant pressure and constant volume. </para>
        </briefdescription>
        <detaileddescription>
<para>Ratio of specific heats of the atmosphere at constant pressure and constant volume. This value is set to a constant, implying constant atmospheric composition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="272" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5ebde54a90c18ba708b8cadd7af3ab77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::ExponentialAtmosphere::ExponentialAtmosphere</definition>
        <argsstring>(const double scaleHeight, const double constantTemperature, const double densityAtZeroAltitude, const double specificGasConstant=physical_constants::SPECIFIC_GAS_CONSTANT_AIR, const double ratioOfSpecificHeats=1.4)</argsstring>
        <name>ExponentialAtmosphere</name>
        <param>
          <type>const double</type>
          <declname>scaleHeight</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>constantTemperature</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>densityAtZeroAltitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>specificGasConstant</declname>
          <defval>physical_constants::SPECIFIC_GAS_CONSTANT_AIR</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>ratioOfSpecificHeats</declname>
          <defval>1.4</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default constructor setting all parameters manually. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaleHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale height of atmosphere model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constantTemperature</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant atmospheric temperature. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>densityAtZeroAltitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Atmospheric density at zero altitude. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specificGasConstant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant specific gas constant of the atmosphere. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratioOfSpecificHeats</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant ratio of specific heats of the atmosphere. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="70" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a6181b92d0720900d9e4ac5fdf34f705e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tudat::aerodynamics::ExponentialAtmosphere::ExponentialAtmosphere</definition>
        <argsstring>(const BodiesWithPredefinedExponentialAtmospheres bodyWithPredefinedExponentialAtmosphere)</argsstring>
        <name>ExponentialAtmosphere</name>
        <param>
          <type>const BodiesWithPredefinedExponentialAtmospheres</type>
          <declname>bodyWithPredefinedExponentialAtmosphere</declname>
        </param>
        <briefdescription>
<para>Constructor from default atmospheric settings. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor from default atmospheric settings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyWithPredefinedExponentialAtmosphere</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of body for which the atmosphere is to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="89" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/aerodynamics/exponentialAtmosphere.cpp" bodystart="20" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a74ca5778d0d81aa30339643421a33fbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getScaleHeight</definition>
        <argsstring>()</argsstring>
        <name>getScaleHeight</name>
        <briefdescription>
<para>Get scale height. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the scale height (property of exponential atmosphere) in meters. <simplesect kind="return"><para>scaleHeight Scale height of exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="97" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1aa58c9c4e0920ed33187f7fae3c2cecd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getDensityAtZeroAltitude</definition>
        <argsstring>()</argsstring>
        <name>getDensityAtZeroAltitude</name>
        <briefdescription>
<para>Get density at zero altitude. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the density at zero altitude (property of exponential atmosphere) in kg per meter^3. <simplesect kind="return"><para>densityAtZeroAltitude Atmospheric density at zero altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="104" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a2cbcf84eef3d96e1b5ff52d93ce6c5c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getConstantTemperature</definition>
        <argsstring>()</argsstring>
        <name>getConstantTemperature</name>
        <briefdescription>
<para>Get constant temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the atmospheric temperature (constant, property of exponential atmosphere) in Kelvin. <simplesect kind="return"><para>constantTemperature Constant atmospheric temperature in exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="112" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a77885b25ff2ac9e7218efea48ab231b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getSpecificGasConstant</definition>
        <argsstring>()</argsstring>
        <name>getSpecificGasConstant</name>
        <briefdescription>
<para>Get specific gas constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the specific gas constant of the atmosphere in J/(kg K), its value is assumed constant, due to the assumption of constant atmospheric composition. <simplesect kind="return"><para>Specific gas constant in exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="120" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5e6fb84e94c8c020d2a8eee0c5212f7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getRatioOfSpecificHeats</definition>
        <argsstring>()</argsstring>
        <name>getRatioOfSpecificHeats</name>
        <briefdescription>
<para>Get ratio of specific heats. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the ratio of specific hears of the atmosphere, its value is assumed constant, due to the assumption of constant atmospheric composition. <simplesect kind="return"><para>Ratio of specific heats exponential atmosphere. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="128" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1ac6bc5f5fee5475f805e34461fa77b29d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getDensity</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getDensity</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1a85b7e8803277496e8f5abc9bb36d5bf6">getDensity</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local density. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local density of the atmosphere in kg per meter^3. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which density is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which density is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which density is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which density is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric density at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="142" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5f9454b2cf717877723364ba3805e855" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getPressure</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getPressure</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1aedd2b6b8824cebea8dea628bfec0e236">getPressure</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local pressure. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local pressure of the atmosphere in Newton per meter^2. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which pressure is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which pressure is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which pressure is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which pressure is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric pressure at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="163" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="163" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1aa486d36c2fbe56026d7a4cc17f7d04a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getTemperature</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getTemperature</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1ac5b9a16a96cbb496a4ee76b3dc495543">getTemperature</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the local temperature of the atmosphere in Kelvin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which temperature is to be computed (not used since temperature is assumed to be constant). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which temperature is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which temperature is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which temperature is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constantTemperature Atmospheric temperature at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="194" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="194" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a90283cd42dc4ee31892750b82bedf14c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double tudat::aerodynamics::ExponentialAtmosphere::getSpeedOfSound</definition>
        <argsstring>(const double altitude, const double longitude=0.0, const double latitude=0.0, const double time=0.0)</argsstring>
        <name>getSpeedOfSound</name>
        <reimplements refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere_1a9992c99f7994882307b05161e19fc298">getSpeedOfSound</reimplements>
        <param>
          <type>const double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>longitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>latitude</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Get local speed of sound in the atmosphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the speed of sound in the atmosphere in m/s. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude at which speed of sounds is to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude at which speed of sounds is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude at which speed of sounds is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which speed of sounds is to be computed (not used but included for consistency with base class interface). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Atmospheric speed of sounds at specified altitude. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="220" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="220" bodyend="236"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exponential atmosphere class. </para>
    </briefdescription>
    <detaileddescription>
<para>Class with an exponential atmosphere. The user has to initialize this class with a scale altitude, a density at zero meters altitude and a constant temperature. The density is determined by <formula id="0">$ \rho = \rho_0 e^{-h/H} $</formula>, with <formula id="1">$ \rho_0 $</formula> the density at zero altitude, <formula id="2">$ h $</formula> the altitude, and <formula id="3">$ H $</formula> the scaling altitude. The temperature is taken as constant and the pressure follows from the universal gas law <formula id="4">$ p = \rho RT $</formula>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>tudat::aerodynamics::AtmosphereModel</label>
        <link refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel"/>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::StandardAtmosphere</label>
        <link refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::aerodynamics::ExponentialAtmosphere</label>
        <link refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>tudat::aerodynamics::AtmosphereModel</label>
        <link refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel"/>
      </node>
      <node id="2">
        <label>tudat::aerodynamics::StandardAtmosphere</label>
        <link refid="dc/d61/classtudat_1_1aerodynamics_1_1StandardAtmosphere"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::aerodynamics::ExponentialAtmosphere</label>
        <link refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" line="57" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/aerodynamics/exponentialAtmosphere.h" bodystart="58" bodyend="274"/>
    <listofallmembers>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a118af8867fc8607b744e239f3ebd1cf4" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>constantTemperature_</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a885f253177aa085b20daa17948c5806d" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>densityAtZeroAltitude_</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5ebde54a90c18ba708b8cadd7af3ab77" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>ExponentialAtmosphere</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a6181b92d0720900d9e4ac5fdf34f705e" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>ExponentialAtmosphere</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a2cbcf84eef3d96e1b5ff52d93ce6c5c3" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getConstantTemperature</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1ac6bc5f5fee5475f805e34461fa77b29d" prot="public" virt="virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getDensity</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1aa58c9c4e0920ed33187f7fae3c2cecd4" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getDensityAtZeroAltitude</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5f9454b2cf717877723364ba3805e855" prot="public" virt="virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getPressure</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5e6fb84e94c8c020d2a8eee0c5212f7a" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getRatioOfSpecificHeats</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a74ca5778d0d81aa30339643421a33fbf" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getScaleHeight</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a77885b25ff2ac9e7218efea48ab231b6" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getSpecificGasConstant</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a90283cd42dc4ee31892750b82bedf14c" prot="public" virt="virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getSpeedOfSound</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1aa486d36c2fbe56026d7a4cc17f7d04a2" prot="public" virt="virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getTemperature</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1aa6948868e4d053536cdd97d70bea63e4" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>getWindModel</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a5426a646c1c076c6c6576654649922e2" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>ratioOfSpecificHeats_</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1a697c9ac1f332ec0264a0e5446cbda120" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>scaleHeight_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1abed0c184d0864d3f7f7860240f09fa22" prot="public" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>setWindModel</name></member>
      <member refid="dc/d74/classtudat_1_1aerodynamics_1_1ExponentialAtmosphere_1aede7a653414a7738e08a93ffac8502b2" prot="private" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>specificGasConstant_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1a02355eaebd0b2c00f2f2fd1836ac9697" prot="protected" virt="non-virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>windModel_</name></member>
      <member refid="de/d0f/classtudat_1_1aerodynamics_1_1AtmosphereModel_1a1ceb7bfb8c497ca6b6a0ccbade902ed7" prot="public" virt="virtual"><scope>tudat::aerodynamics::ExponentialAtmosphere</scope><name>~AtmosphereModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
