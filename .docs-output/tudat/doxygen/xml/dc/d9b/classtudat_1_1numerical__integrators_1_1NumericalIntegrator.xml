<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tudat::numerical_integrators::NumericalIntegrator</compoundname>
    <includes refid="d6/d25/numericalIntegrator_8h" local="no">numericalIntegrator.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndependentVariableType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename StateType</type>
        <defval>Eigen::VectorXd</defval>
      </param>
      <param>
        <type>typename StateDerivativeType</type>
        <defval>StateType</defval>
      </param>
      <param>
        <type>typename TimeStepType</type>
        <defval>IndependentVariableType</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ac4a61ecbab0945f9c899808c95bed0b7" prot="public" static="no">
        <type>std::function&lt; StateDerivativeType(const IndependentVariableType, const StateType &amp;) &gt;</type>
        <definition>typedef std::function&lt; StateDerivativeType( const IndependentVariableType, const StateType&amp; ) &gt; tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::StateDerivativeFunction</definition>
        <argsstring></argsstring>
        <name>StateDerivativeFunction</name>
        <briefdescription>
<para>Typedef to the state derivative function. </para>
        </briefdescription>
        <detaileddescription>
<para>Typedef to the state derivative function. This should be a pointer to a function or a boost function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="55" column="2" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a9da0d5b84797f0f84783447c6b6cffcf" prot="protected" static="no" mutable="no">
        <type><ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ac4a61ecbab0945f9c899808c95bed0b7" kindref="member">StateDerivativeFunction</ref></type>
        <definition>StateDerivativeFunction tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::stateDerivativeFunction_</definition>
        <argsstring></argsstring>
        <name>stateDerivativeFunction_</name>
        <briefdescription>
<para>Function that returns the state derivative. </para>
        </briefdescription>
        <detaileddescription>
<para>Function that returns the state derivative, as passed to the constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="242" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a3ca1dd274c2cafb901624c5e5600082a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::propagationTerminationConditionReachedDuringStep_</definition>
        <argsstring></argsstring>
        <name>propagationTerminationConditionReachedDuringStep_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Boolean to denote whether the propagation termination condition was reached during the evaluation of one of the sub-steps. </para>
        </briefdescription>
        <detaileddescription>
<para>Boolean to denote whether the propagation termination condition was reached during the evaluation of one of the sub-steps necessary to perform the last integration step. Parameter is false by default, and when set to true must be accompanied by propagationTerminationFunction_ (which is non-active by default) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="250" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1acda867c5c181bc9f00c8cab0d8b31a8b" prot="protected" static="no" mutable="no">
        <type>std::function&lt; bool(const double, const double) &gt;</type>
        <definition>std::function&lt; bool( const double, const double ) &gt; tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::propagationTerminationFunction_</definition>
        <argsstring></argsstring>
        <name>propagationTerminationFunction_</name>
        <briefdescription>
<para>propagation termination function </para>
        </briefdescription>
        <detaileddescription>
<para>propagation termination function to be evaluated during the intermediate state updates performed to compute the quantities necessary to integrate the state to a new epoch. By default, this function evaluates always to false, so the propagation termination conditions will not be checked during the integration subteps. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="259" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1abc2bd9d5804101036116510ce87be2db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::NumericalIntegrator</definition>
        <argsstring>(const StateDerivativeFunction &amp;stateDerivativeFunction)</argsstring>
        <name>NumericalIntegrator</name>
        <param>
          <type>const <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ac4a61ecbab0945f9c899808c95bed0b7" kindref="member">StateDerivativeFunction</ref> &amp;</type>
          <declname>stateDerivativeFunction</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default constructor, taking a state derivative function as argument. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateDerivativeFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>State derivative function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="62" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1abaa3ce86883c7bc620b6473500557ccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::~NumericalIntegrator</definition>
        <argsstring>()</argsstring>
        <name>~NumericalIntegrator</name>
        <briefdescription>
<para>Default virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default virtual destructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="71" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ab8b38ad002b10d53adf7b2c2282a86cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>TimeStepType</type>
        <definition>virtual TimeStepType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getNextStepSize</definition>
        <argsstring>() const =0</argsstring>
        <name>getNextStepSize</name>
        <reimplementedby refid="dc/daf/classtudat_1_1numerical__integrators_1_1AdamsBashforthMoultonIntegrator_1ac3f720d587a9278b66a0e5d8a0046677">getNextStepSize</reimplementedby>
        <reimplementedby refid="d3/dab/classtudat_1_1numerical__integrators_1_1BulirschStoerVariableStepSizeIntegrator_1a87f18c5156344b4deb78ee8787cb66fe">getNextStepSize</reimplementedby>
        <reimplementedby refid="dd/d5f/classtudat_1_1numerical__integrators_1_1EulerIntegrator_1a98665fae87c33745dbec97c32cea96e6">getNextStepSize</reimplementedby>
        <reimplementedby refid="d5/d87/classtudat_1_1numerical__integrators_1_1RungeKutta4Integrator_1a2610c7023f4d40cc8a527f7cf7bcdae4">getNextStepSize</reimplementedby>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1a807a5c85cf8731c2b46849ec5775f04e">getNextStepSize</reimplementedby>
        <briefdescription>
<para>Get step size of the next step. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the step size of the next step. Derived classes should override this and provide the last step size that was computed or passed to <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" kindref="member">performIntegrationStep( )</ref>. <simplesect kind="return"><para>Step size to be used for the next step. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="79" column="26"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a90b09d8d6a9b07d495bfabe9122748a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>StateType</type>
        <definition>virtual StateType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getCurrentState</definition>
        <argsstring>() const =0</argsstring>
        <name>getCurrentState</name>
        <reimplementedby refid="dc/daf/classtudat_1_1numerical__integrators_1_1AdamsBashforthMoultonIntegrator_1aee5eef485597f1972fa5e2ee115eba03">getCurrentState</reimplementedby>
        <reimplementedby refid="d3/dab/classtudat_1_1numerical__integrators_1_1BulirschStoerVariableStepSizeIntegrator_1a0078530592ef0f72d75b37235942aaef">getCurrentState</reimplementedby>
        <reimplementedby refid="dd/d5f/classtudat_1_1numerical__integrators_1_1EulerIntegrator_1a04c3ae01f670ff13f65f2d9b4cf251a9">getCurrentState</reimplementedby>
        <reimplementedby refid="d5/d87/classtudat_1_1numerical__integrators_1_1RungeKutta4Integrator_1abe3ecf4a93113153cc9282e21b615f1c">getCurrentState</reimplementedby>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1a6d28551c418dc40ebb9706ab0c006109">getCurrentState</reimplementedby>
        <briefdescription>
<para>Get current state. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the current state of the integrator. Derived classes should override this and provide the computed state by <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" kindref="member">performIntegrationStep( )</ref>. <simplesect kind="return"><para>Current integrated state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="87" column="23"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a8ca318a39081842472ccd1a165ec06a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>IndependentVariableType</type>
        <definition>virtual IndependentVariableType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getCurrentIndependentVariable</definition>
        <argsstring>() const =0</argsstring>
        <name>getCurrentIndependentVariable</name>
        <reimplementedby refid="dc/daf/classtudat_1_1numerical__integrators_1_1AdamsBashforthMoultonIntegrator_1a19d0ae06152a18cfa6e11b13b1a6fea7">getCurrentIndependentVariable</reimplementedby>
        <reimplementedby refid="d3/dab/classtudat_1_1numerical__integrators_1_1BulirschStoerVariableStepSizeIntegrator_1a4d70f45b271905877eacc08d847669c5">getCurrentIndependentVariable</reimplementedby>
        <reimplementedby refid="dd/d5f/classtudat_1_1numerical__integrators_1_1EulerIntegrator_1a4141828448fa22b753e009d129598a8a">getCurrentIndependentVariable</reimplementedby>
        <reimplementedby refid="d5/d87/classtudat_1_1numerical__integrators_1_1RungeKutta4Integrator_1af8c68d827ad7f4910854a76364935900">getCurrentIndependentVariable</reimplementedby>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1ace2c1ae855737053ffcc331009daa550">getCurrentIndependentVariable</reimplementedby>
        <briefdescription>
<para>Get current independent variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the current value of the independent variable of the integrator. Derived classes should override this and provide the computed independent variable by <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" kindref="member">performIntegrationStep()</ref>. <simplesect kind="return"><para>Current independent variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="96" column="37"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a87d34e8535b55d430a511fb7e345dc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::rollbackToPreviousState</definition>
        <argsstring>()=0</argsstring>
        <name>rollbackToPreviousState</name>
        <reimplementedby refid="dc/daf/classtudat_1_1numerical__integrators_1_1AdamsBashforthMoultonIntegrator_1ad70afacde7c1898093455e890f14eff2">rollbackToPreviousState</reimplementedby>
        <reimplementedby refid="d3/dab/classtudat_1_1numerical__integrators_1_1BulirschStoerVariableStepSizeIntegrator_1a987bc2b45ec50282bdcb27e0cdedb457">rollbackToPreviousState</reimplementedby>
        <reimplementedby refid="dd/d5f/classtudat_1_1numerical__integrators_1_1EulerIntegrator_1a030f7c176b3b5d6a36f7d2c090be5e35">rollbackToPreviousState</reimplementedby>
        <reimplementedby refid="d5/d87/classtudat_1_1numerical__integrators_1_1RungeKutta4Integrator_1a5c08ffb9818f8e3d0de77cc3a91348ba">rollbackToPreviousState</reimplementedby>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1a71350bc154120adfd9cf9871618eaf22">rollbackToPreviousState</reimplementedby>
        <briefdescription>
<para>Rollback internal state to the step performed by <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" kindref="member">performIntegrationStep()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Performs rollback of internal state to the step performed by <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" kindref="member">performIntegrationStep()</ref>. This is not necessarily equal the start of the integration interval after <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aed0dfa86d274bd9e71c2fd6428edfd3e" kindref="member">integrateTo()</ref> has been. called. This function can only be called once after calling or <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" kindref="member">performIntegrationStep()</ref> unless specified otherwise by implementations, and can not be called before <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aed0dfa86d274bd9e71c2fd6428edfd3e" kindref="member">integrateTo()</ref> has been called. Will return true if the rollback was successful, and false otherwise. <simplesect kind="return"><para>True if the rollback was successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="108" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a5a1c2e20cb6ca8ddcb51bab3b1c5bc39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IndependentVariableType</type>
        <definition>virtual IndependentVariableType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getPreviousIndependentVariable</definition>
        <argsstring>()</argsstring>
        <name>getPreviousIndependentVariable</name>
        <reimplementedby refid="dc/daf/classtudat_1_1numerical__integrators_1_1AdamsBashforthMoultonIntegrator_1aecba907cbdcedd7f639dcc7b32080f59">getPreviousIndependentVariable</reimplementedby>
        <reimplementedby refid="d3/dab/classtudat_1_1numerical__integrators_1_1BulirschStoerVariableStepSizeIntegrator_1a9cd6d22fd7103933d5e62a909ed7ba0d">getPreviousIndependentVariable</reimplementedby>
        <reimplementedby refid="dd/d5f/classtudat_1_1numerical__integrators_1_1EulerIntegrator_1aae8d5a143ea9c1be7412e99927768c63">getPreviousIndependentVariable</reimplementedby>
        <reimplementedby refid="d5/d87/classtudat_1_1numerical__integrators_1_1RungeKutta4Integrator_1a87ba6be339e90adce1becb443f364e36">getPreviousIndependentVariable</reimplementedby>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1af51b8f64fd8e7ecf55c1f4861aebcb93">getPreviousIndependentVariable</reimplementedby>
        <briefdescription>
<para>Get previous independent variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the previoius value of the independent variable of the integrator. Derived classes should override this and provide the computed independent variable. If not implemented, throws error. <simplesect kind="return"><para>Previous independent variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="116" column="37" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a83ea0ccadf61e7d630ea692b4f8454a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>StateType</type>
        <definition>virtual StateType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getPreviousState</definition>
        <argsstring>()</argsstring>
        <name>getPreviousState</name>
        <reimplementedby refid="dc/daf/classtudat_1_1numerical__integrators_1_1AdamsBashforthMoultonIntegrator_1affcef1fca0cd02fed5e3e2c5c04c1e4c">getPreviousState</reimplementedby>
        <reimplementedby refid="d3/dab/classtudat_1_1numerical__integrators_1_1BulirschStoerVariableStepSizeIntegrator_1a02b7598b7360d2ed51f8a012d0d504b8">getPreviousState</reimplementedby>
        <reimplementedby refid="dd/d5f/classtudat_1_1numerical__integrators_1_1EulerIntegrator_1a01eeb078884ff53d5f3d9e1e629ee716">getPreviousState</reimplementedby>
        <reimplementedby refid="d5/d87/classtudat_1_1numerical__integrators_1_1RungeKutta4Integrator_1a747141d03439ee6c916fe18d84705e9c">getPreviousState</reimplementedby>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1a36e63198b45f138a068ecc4a65c7337a">getPreviousState</reimplementedby>
        <briefdescription>
<para>Get previous state value. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the previous value of the state. Derived classes should override this and provide the computed state. If not implemented, throws error. <simplesect kind="return"><para>Previous state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="127" column="23" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aed0dfa86d274bd9e71c2fd6428edfd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StateType</type>
        <definition>StateType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::integrateTo</definition>
        <argsstring>(const IndependentVariableType intervalEnd, const TimeStepType initialStepSize, const TimeStepType finalTimeTolerance=std::numeric_limits&lt; TimeStepType &gt;::epsilon())</argsstring>
        <name>integrateTo</name>
        <param>
          <type>const IndependentVariableType</type>
          <declname>intervalEnd</declname>
        </param>
        <param>
          <type>const TimeStepType</type>
          <declname>initialStepSize</declname>
        </param>
        <param>
          <type>const TimeStepType</type>
          <declname>finalTimeTolerance</declname>
          <defval>std::numeric_limits&lt; TimeStepType &gt;::epsilon()</defval>
        </param>
        <briefdescription>
<para>Perform an integration to a specified independent variable value. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs an integration to independentVariableEnd with initial state and initial independent variable value specified by the current state of the integrator and the current independent variable value. This implementation of integrateTo chooses the final step size such that it exactly coincides with the given independentVariableEnd. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intervalEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the independent variable at the end of the interval to integrate over. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialStepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial step size to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finalTimeTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance to within which the final time should be reached. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The state at independentVariableEnd. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="144" column="23" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="269" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>StateType</type>
        <definition>virtual StateType tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::performIntegrationStep</definition>
        <argsstring>(const TimeStepType stepSize)=0</argsstring>
        <name>performIntegrationStep</name>
        <param>
          <type>const TimeStepType</type>
          <declname>stepSize</declname>
        </param>
        <briefdescription>
<para>Perform a single integration step. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs a single integration step from current independent variable and state as specified by initialStateHistory and specified stepSize. This function should determine the next step and make it available to <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ab8b38ad002b10d53adf7b2c2282a86cc" kindref="member">getNextStepSize()</ref>, return the current state and store it for <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a90b09d8d6a9b07d495bfabe9122748a1" kindref="member">getCurrentState()</ref>, and store the current independent variable value for <ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a8ca318a39081842472ccd1a165ec06a4" kindref="member">getCurrentIndependentVariable()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The step size of this step. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The state at the end of the interval. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="159" column="23"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1abe7509347b34000520da61da0e090c47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ac4a61ecbab0945f9c899808c95bed0b7" kindref="member">StateDerivativeFunction</ref></type>
        <definition>StateDerivativeFunction tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getStateDerivativeFunction</definition>
        <argsstring>()</argsstring>
        <name>getStateDerivativeFunction</name>
        <briefdescription>
<para>Function to return the function that computes and returns the state derivative. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the function that computes and returns the state derivative <simplesect kind="return"><para>Function that returns the state derivative </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="166" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a04532c99a84b6a68247c7134fbdb43ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::getPropagationTerminationConditionReached</definition>
        <argsstring>()</argsstring>
        <name>getPropagationTerminationConditionReached</name>
        <briefdescription>
<para>Function to return the termination condition was reached during the current step. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the termination condition was reached during the current step <simplesect kind="return"><para>True if the termination condition was reached during the current step </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="176" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aa1fa7e7a16150c2fd79e6daba5765644" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::setPropagationTerminationFunction</definition>
        <argsstring>(std::function&lt; bool(const double, const double) &gt; terminationFunction)</argsstring>
        <name>setPropagationTerminationFunction</name>
        <param>
          <type>std::function&lt; bool(const double, const double) &gt;</type>
          <declname>terminationFunction</declname>
        </param>
        <briefdescription>
<para>Setter for the (optional) propagation termination function. </para>
        </briefdescription>
        <detaileddescription>
<para>Setter for the (optional) propagation termination function, to be evaluated during the intermediate state updates performed to compute the quantities necessary to integrate the state to a new epoch (e.g. k1-k4 for RK$). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>terminationFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function that returns true if termination condition is reached, false if it has not, as a function of current time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="188" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aeb76143b70710fa15543fc3df7d5e132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::setStepSizeControl</definition>
        <argsstring>(const bool useStepSizeControl)</argsstring>
        <name>setStepSizeControl</name>
        <reimplementedby refid="df/db9/classtudat_1_1numerical__integrators_1_1RungeKuttaVariableStepSizeIntegrator_1aa0d952cb990ed2b968323410d34724be">setStepSizeControl</reimplementedby>
        <param>
          <type>const bool</type>
          <declname>useStepSizeControl</declname>
        </param>
        <briefdescription>
<para>Function to toggle the use of step-size control. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to toggle the use of step-size control. To be implemented in derived classes with variable step sizes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>useStepSizeControl</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether step size control is to be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="198" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a64080c154d27dc673784b289deb1eb57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::modifyCurrentState</definition>
        <argsstring>(const StateType &amp;newState, const bool allowRollback=false)</argsstring>
        <name>modifyCurrentState</name>
        <param>
          <type>const StateType &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allowRollback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Replace the state with a new value. </para>
        </briefdescription>
        <detaileddescription>
<para>Replace the state with a new value. This allows for discrete jumps in the state, often used in simulations of discrete events. In astro, this relates to simulations of rocket staging, impulsive shots, parachuting, ideal control, etc. The modified state, by default, cannot be rolled back; to do this, either set the flag to true, or store the state before calling this function the first time, and call it again with the initial state as parameter to revert to the state before the discrete change. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newState</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the new state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowRollback</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether roll-back should be allowed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="210" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="210" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a1730c343a1fdb730ff4e576c1144657e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::numerical_integrators::NumericalIntegrator&lt; IndependentVariableType, StateType, StateDerivativeType, TimeStepType &gt;::modifyCurrentIntegrationVariables</definition>
        <argsstring>(const StateType &amp;newState, const IndependentVariableType newTime, const bool allowRollback=false)</argsstring>
        <name>modifyCurrentIntegrationVariables</name>
        <param>
          <type>const StateType &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>newTime</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allowRollback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Modify the state and time for the current step. </para>
        </briefdescription>
        <detaileddescription>
<para>Modify the state and time for the current step. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newState</parametername>
</parameternamelist>
<parameterdescription>
<para>The new state to set the current state to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to set the current time to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowRollback</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether roll-back should be allowed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="226" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="226" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for the numerical integrators. </para>
    </briefdescription>
    <detaileddescription>
<para>Base class for numerical integrators. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>StateType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the state. This type should support addition, subtraction and assignment operators. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StateDerivativeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the state derivative. This type should support multiplication with IndependentVariableType and doubles. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndependentVariableType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the independent variable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" line="45" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/integrators/numericalIntegrator.h" bodystart="46" bodyend="260"/>
    <listofallmembers>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a8ca318a39081842472ccd1a165ec06a4" prot="public" virt="pure-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getCurrentIndependentVariable</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a90b09d8d6a9b07d495bfabe9122748a1" prot="public" virt="pure-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getCurrentState</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ab8b38ad002b10d53adf7b2c2282a86cc" prot="public" virt="pure-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getNextStepSize</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a5a1c2e20cb6ca8ddcb51bab3b1c5bc39" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getPreviousIndependentVariable</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a83ea0ccadf61e7d630ea692b4f8454a8" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getPreviousState</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a04532c99a84b6a68247c7134fbdb43ed" prot="public" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getPropagationTerminationConditionReached</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1abe7509347b34000520da61da0e090c47" prot="public" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>getStateDerivativeFunction</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aed0dfa86d274bd9e71c2fd6428edfd3e" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>integrateTo</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a1730c343a1fdb730ff4e576c1144657e" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>modifyCurrentIntegrationVariables</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a64080c154d27dc673784b289deb1eb57" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>modifyCurrentState</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1abc2bd9d5804101036116510ce87be2db" prot="public" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>NumericalIntegrator</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a125da80be4a16cd933707212caefe8a5" prot="public" virt="pure-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>performIntegrationStep</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a3ca1dd274c2cafb901624c5e5600082a" prot="protected" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>propagationTerminationConditionReachedDuringStep_</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1acda867c5c181bc9f00c8cab0d8b31a8b" prot="protected" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>propagationTerminationFunction_</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a87d34e8535b55d430a511fb7e345dc2b" prot="public" virt="pure-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>rollbackToPreviousState</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aa1fa7e7a16150c2fd79e6daba5765644" prot="public" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>setPropagationTerminationFunction</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1aeb76143b70710fa15543fc3df7d5e132" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>setStepSizeControl</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1ac4a61ecbab0945f9c899808c95bed0b7" prot="public" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>StateDerivativeFunction</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1a9da0d5b84797f0f84783447c6b6cffcf" prot="protected" virt="non-virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>stateDerivativeFunction_</name></member>
      <member refid="dc/d9b/classtudat_1_1numerical__integrators_1_1NumericalIntegrator_1abaa3ce86883c7bc620b6473500557ccb" prot="public" virt="virtual"><scope>tudat::numerical_integrators::NumericalIntegrator</scope><name>~NumericalIntegrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
