<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature" kind="class" language="C++" prot="public">
    <compoundname>tudat::numerical_quadrature::GaussianQuadrature</compoundname>
    <basecompoundref refid="d6/dd3/classtudat_1_1numerical__quadrature_1_1NumericalQuadrature" prot="public" virt="non-virtual">tudat::numerical_quadrature::NumericalQuadrature&lt; IndependentVariableType, DependentVariableType &gt;</basecompoundref>
    <includes refid="da/d27/gaussianQuadrature_8h" local="no">gaussianQuadrature.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndependentVariableType</type>
      </param>
      <param>
        <type>typename DependentVariableType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a69a9e24c1905e2992736111041e308b0" prot="public" static="no">
        <type>Eigen::Array&lt; DependentVariableType, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Array&lt; DependentVariableType, Eigen::Dynamic, 1 &gt; tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::DependentVariableArray</definition>
        <argsstring></argsstring>
        <name>DependentVariableArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="251" column="26" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1af9bfc6e95ab6dd05ef9a1cc73f47b202" prot="public" static="no">
        <type>Eigen::Array&lt; IndependentVariableType, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Array&lt; IndependentVariableType, Eigen::Dynamic, 1 &gt; tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::IndependentVariableArray</definition>
        <argsstring></argsstring>
        <name>IndependentVariableArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="252" column="26" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1ac84cb3c9ef4ceba1dea3f32e7b78811c" prot="private" static="no" mutable="no">
        <type>std::function&lt; DependentVariableType(IndependentVariableType) &gt;</type>
        <definition>std::function&lt; DependentVariableType( IndependentVariableType ) &gt; tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::integrand_</definition>
        <argsstring></argsstring>
        <name>integrand_</name>
        <briefdescription>
<para>Function returning the integrand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="360" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1afab8c08f9a499c5d9a4f55da4cb64b42" prot="private" static="no" mutable="no">
        <type>IndependentVariableType</type>
        <definition>IndependentVariableType tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::lowerLimit_</definition>
        <argsstring></argsstring>
        <name>lowerLimit_</name>
        <briefdescription>
<para>Lower limit for the integral. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="363" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1ac60310fbfc4bb85d0eeadca62e183b01" prot="private" static="no" mutable="no">
        <type>IndependentVariableType</type>
        <definition>IndependentVariableType tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::upperLimit_</definition>
        <argsstring></argsstring>
        <name>upperLimit_</name>
        <briefdescription>
<para>Upper limit for the integral. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="366" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a6ad3c4d421665a0914b414e4a1e4671f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::numberOfNodes_</definition>
        <argsstring></argsstring>
        <name>numberOfNodes_</name>
        <briefdescription>
<para>Number of nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="369" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1ab87689b7fb6d3a3dcd3aec8c810a5cb6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::quadratureHasBeenPerformed_</definition>
        <argsstring></argsstring>
        <name>quadratureHasBeenPerformed_</name>
        <briefdescription>
<para>Whether quadratureResult has been set for the current integrand, lowerLimit, upperLimit and numberOfNodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="372" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a20c756704207905cfe7531b9b8eb0035" prot="private" static="no" mutable="no">
        <type>DependentVariableType</type>
        <definition>DependentVariableType tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::quadratureResult_</definition>
        <argsstring></argsstring>
        <name>quadratureResult_</name>
        <briefdescription>
<para>Computed value of the quadrature, as computed by last call to performQuadrature. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="375" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1abbcf6e07ab20877be3e823bf539e50da" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d1/dcb/structtudat_1_1numerical__quadrature_1_1GaussQuadratureNodesAndWeights" kindref="compound">GaussQuadratureNodesAndWeights</ref>&lt; IndependentVariableType &gt; &gt;</type>
        <definition>std::shared_ptr&lt; GaussQuadratureNodesAndWeights&lt; IndependentVariableType &gt; &gt; tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::gaussQuadratureNodesAndWeights_</definition>
        <argsstring></argsstring>
        <name>gaussQuadratureNodesAndWeights_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="377" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1aa718204fd4eddf0f4f0f759ae9b9ee31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::GaussianQuadrature</definition>
        <argsstring>(const std::function&lt; DependentVariableType(IndependentVariableType) &gt; integrand, const IndependentVariableType lowerLimit, const IndependentVariableType upperLimit, const unsigned int numberOfNodes)</argsstring>
        <name>GaussianQuadrature</name>
        <param>
          <type>const std::function&lt; DependentVariableType(IndependentVariableType) &gt;</type>
          <declname>integrand</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>lowerLimit</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>upperLimit</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>numberOfNodes</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>integrand</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be integrated numerically. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower limit for the integral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper limit for the integral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of nodes (i.e. nodes) at which the integrand will be evaluated. Must be an integer value between 2 and 64. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="263" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="263" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1af5350b9bad7d1687457547625495b421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::reset</definition>
        <argsstring>(const std::function&lt; DependentVariableType(IndependentVariableType) &gt; integrand, const IndependentVariableType lowerLimit, const IndependentVariableType upperLimit, const unsigned int numberOfNodes)</argsstring>
        <name>reset</name>
        <param>
          <type>const std::function&lt; DependentVariableType(IndependentVariableType) &gt;</type>
          <declname>integrand</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>lowerLimit</declname>
        </param>
        <param>
          <type>const IndependentVariableType</type>
          <declname>upperLimit</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>numberOfNodes</declname>
        </param>
        <briefdescription>
<para>Reset the current Gaussian quadrature. </para>
        </briefdescription>
        <detaileddescription>
<para>The nodes and weights are not read/computed again if they had already been used previously. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>integrand</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be integrated numerically. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower limit for the integral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper limit for the integral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfNodes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of nodes (i.e. nodes) at which the integrand will be evaluated. Must be an integer value between 2 and 64. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="281" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a311da146741ae13308662eab7da771ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>DependentVariableType</type>
        <definition>DependentVariableType tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::getQuadrature</definition>
        <argsstring>()</argsstring>
        <name>getQuadrature</name>
        <reimplements refid="d6/dd3/classtudat_1_1numerical__quadrature_1_1NumericalQuadrature_1ab47826b9612a50e5dfc1b1c17d0d0b1c">getQuadrature</reimplements>
        <briefdescription>
<para>Function to return computed value of the quadrature. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return computed value of the quadrature, as computed by last call to performQuadrature. <simplesect kind="return"><para>Function to return computed value of the quadrature, as computed by last call to performQuadrature. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="297" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="297" bodyend="324"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a652f9f7d7ecc1b071d5acb1039d78173" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;::performQuadrature</definition>
        <argsstring>()</argsstring>
        <name>performQuadrature</name>
        <reimplements refid="d6/dd3/classtudat_1_1numerical__quadrature_1_1NumericalQuadrature_1a878612c6ed5f9f606ac537071ca67f15">performQuadrature</reimplements>
        <briefdescription>
<para>Function that is called to perform the numerical quadrature. </para>
        </briefdescription>
        <detaileddescription>
<para>Function that is called to perform the numerical quadrature. Sets the result in the quadratureResult local variable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="334" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="334" bodyend="354"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Gaussian numerical quadrature wrapper class. </para>
    </briefdescription>
    <detaileddescription>
<para>Numerical method that uses the Gaussian nodes and weight factors to compute definite integrals of a function. The Gaussian nodes and weight factors are not calculated, but read from text files. The number of nodes (or weight factors) has to be at least n = 2. The current text files contain tabulated values up to n = 64. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::numerical_quadrature::NumericalQuadrature&lt; IndependentVariableType, DependentVariableType &gt;</label>
        <link refid="d6/dd3/classtudat_1_1numerical__quadrature_1_1NumericalQuadrature"/>
      </node>
      <node id="1">
        <label>tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;</label>
        <link refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::numerical_quadrature::NumericalQuadrature&lt; IndependentVariableType, DependentVariableType &gt;</label>
        <link refid="d6/dd3/classtudat_1_1numerical__quadrature_1_1NumericalQuadrature"/>
      </node>
      <node id="1">
        <label>tudat::numerical_quadrature::GaussianQuadrature&lt; IndependentVariableType, DependentVariableType &gt;</label>
        <link refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" line="247" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/math/quadrature/gaussianQuadrature.h" bodystart="248" bodyend="379"/>
    <listofallmembers>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a69a9e24c1905e2992736111041e308b0" prot="public" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>DependentVariableArray</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1aa718204fd4eddf0f4f0f759ae9b9ee31" prot="public" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>GaussianQuadrature</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1abbcf6e07ab20877be3e823bf539e50da" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>gaussQuadratureNodesAndWeights_</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a311da146741ae13308662eab7da771ca" prot="public" virt="virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>getQuadrature</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1af9bfc6e95ab6dd05ef9a1cc73f47b202" prot="public" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>IndependentVariableArray</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1ac84cb3c9ef4ceba1dea3f32e7b78811c" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>integrand_</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1afab8c08f9a499c5d9a4f55da4cb64b42" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>lowerLimit_</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a6ad3c4d421665a0914b414e4a1e4671f" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>numberOfNodes_</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a652f9f7d7ecc1b071d5acb1039d78173" prot="protected" virt="virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>performQuadrature</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1ab87689b7fb6d3a3dcd3aec8c810a5cb6" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>quadratureHasBeenPerformed_</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1a20c756704207905cfe7531b9b8eb0035" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>quadratureResult_</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1af5350b9bad7d1687457547625495b421" prot="public" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>reset</name></member>
      <member refid="dc/df3/classtudat_1_1numerical__quadrature_1_1GaussianQuadrature_1ac60310fbfc4bb85d0eeadca62e183b01" prot="private" virt="non-virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>upperLimit_</name></member>
      <member refid="d6/dd3/classtudat_1_1numerical__quadrature_1_1NumericalQuadrature_1a602011cbb2341401407f5221bc016a79" prot="public" virt="virtual"><scope>tudat::numerical_quadrature::GaussianQuadrature</scope><name>~NumericalQuadrature</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
