<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tudat::ephemerides::RotationalEphemeris</compoundname>
    <derivedcompoundref refid="dd/dd4/classtudat_1_1ephemerides_1_1ConstantRotationalEphemeris" prot="public" virt="non-virtual">tudat::ephemerides::ConstantRotationalEphemeris</derivedcompoundref>
    <derivedcompoundref refid="da/d97/classtudat_1_1ephemerides_1_1PlanetaryRotationModel" prot="public" virt="non-virtual">tudat::ephemerides::PlanetaryRotationModel</derivedcompoundref>
    <derivedcompoundref refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris" prot="public" virt="non-virtual">tudat::ephemerides::SimpleRotationalEphemeris</derivedcompoundref>
    <derivedcompoundref refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris" prot="public" virt="non-virtual">tudat::ephemerides::SpiceRotationalEphemeris</derivedcompoundref>
    <derivedcompoundref refid="da/d89/classtudat_1_1ephemerides_1_1SynchronousRotationalEphemeris" prot="public" virt="non-virtual">tudat::ephemerides::SynchronousRotationalEphemeris</derivedcompoundref>
    <derivedcompoundref refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris" prot="public" virt="non-virtual">tudat::ephemerides::TabulatedRotationalEphemeris&lt; StateScalarType, TimeType &gt;</derivedcompoundref>
    <includes refid="d8/d37/rotationalEphemeris_8h" local="no">rotationalEphemeris.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae8cb8bf513d5c4088386333b7e071677" prot="protected" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string tudat::ephemerides::RotationalEphemeris::baseFrameOrientation_</definition>
        <argsstring></argsstring>
        <name>baseFrameOrientation_</name>
        <briefdescription>
<para>Base reference frame orientation. </para>
        </briefdescription>
        <detaileddescription>
<para>Base reference frame orientation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="477" column="23" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a113566bbf2ec56dc623466c98dab0454" prot="protected" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string tudat::ephemerides::RotationalEphemeris::targetFrameOrientation_</definition>
        <argsstring></argsstring>
        <name>targetFrameOrientation_</name>
        <briefdescription>
<para>Target reference frame orientation. </para>
        </briefdescription>
        <detaileddescription>
<para>Target reference frame orientation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="483" column="23" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a224420ee5a24d5ffe7d64b64f81d11f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::ephemerides::RotationalEphemeris::RotationalEphemeris</definition>
        <argsstring>(const std::string &amp;baseFrameOrientation=&quot;&quot;, const std::string &amp;targetFrameOrientation=&quot;&quot;)</argsstring>
        <name>RotationalEphemeris</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>baseFrameOrientation</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>targetFrameOrientation</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets frames between which rotation is determined. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseFrameOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Base frame identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetFrameOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Target frame identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="180" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4964ece0cf96c422462568cbd0560eda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tudat::ephemerides::RotationalEphemeris::~RotationalEphemeris</definition>
        <argsstring>()</argsstring>
        <name>~RotationalEphemeris</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Virtual destructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="190" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a48c05e29f3a225433eb02feb09d1b77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Eigen::Quaterniond</type>
        <definition>virtual Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToBaseFrame</definition>
        <argsstring>(const double secondsSinceEpoch)=0</argsstring>
        <name>getRotationToBaseFrame</name>
        <reimplementedby refid="da/d89/classtudat_1_1ephemerides_1_1SynchronousRotationalEphemeris_1a6be8b244b8f35c0490de7fffa90ac576">getRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="da/d97/classtudat_1_1ephemerides_1_1PlanetaryRotationModel_1a0f7fd70a828a01539f078c418db8024a">getRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="dd/dd4/classtudat_1_1ephemerides_1_1ConstantRotationalEphemeris_1a52e2d9c175cd13a65b2ac20dad5c6f84">getRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a2d8ba0d2ff99412fe30a1446ab39cf44">getRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris_1ab8b42bf1ac0cd09a3c140b893b4c940b">getRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris_1ab3ac9ee4633524110222c0afb4c27bb4">getRotationToBaseFrame</reimplementedby>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion from target frame to base frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function to calculate and return the rotation quaternion from target frame to base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="199" column="32"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a474b39015aa2c6f1061cd1ab80cfb375" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getRotationMatrixToBaseFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationMatrixToBaseFrame</name>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="203" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a138692d3669026de1302eeb8e2bdf7ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>virtual Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToBaseFrameFromExtendedTime</definition>
        <argsstring>(const Time timeSinceEpoch)</argsstring>
        <name>getRotationToBaseFrameFromExtendedTime</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion from target frame to base frame in <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function to calculate and return the rotation quaternion from target frame to base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="215" column="32" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1aa6a4f20094027fc014ca2ec1dd3a47f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TimeType</type>
          </param>
        </templateparamlist>
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToBaseFrameTemplated</definition>
        <argsstring>(const TimeType timeSinceEpoch)</argsstring>
        <name>getRotationToBaseFrameTemplated</name>
        <param>
          <type>const TimeType</type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion from target frame to base frame in templated precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function to calculate and return the rotation quaternion from target frame to base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="229" column="24"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a569eeb2b7416693589b6f2b4707932a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Eigen::Quaterniond</type>
        <definition>virtual Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToTargetFrame</definition>
        <argsstring>(const double secondsSinceEpoch)=0</argsstring>
        <name>getRotationToTargetFrame</name>
        <reimplementedby refid="da/d89/classtudat_1_1ephemerides_1_1SynchronousRotationalEphemeris_1afb4d455fa993cfc2b4178641199aecb7">getRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="da/d97/classtudat_1_1ephemerides_1_1PlanetaryRotationModel_1aedac3c87663bffcef357832948bace93">getRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="dd/dd4/classtudat_1_1ephemerides_1_1ConstantRotationalEphemeris_1abd6ed21195ee351aaf00d60177608f3c">getRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a7c1ec7c84f042ab174556727f052f927">getRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris_1a60210e2b95459aac462f8c83b9482ee7">getRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris_1abef7ce85bb808b2f7471ef59e3d3ac9c">getRotationToTargetFrame</reimplementedby>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion to target frame from base frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function to calculate and return the rotation quaternion to target frame from base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="239" column="32"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a72bd5e91640110426aa20c66bc5c145e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getRotationMatrixToTargetFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationMatrixToTargetFrame</name>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="242" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ac231daac9a3aec42d42c9221952c76fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Quaterniond</type>
        <definition>virtual Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToTargetFrameFromExtendedTime</definition>
        <argsstring>(const Time timeSinceEpoch)</argsstring>
        <name>getRotationToTargetFrameFromExtendedTime</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion to target frame from base frame in <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function to calculate and return the rotation quaternion to target frame from base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="255" column="32" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a80f1c27c08f514a0326ff3dafd15801c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TimeType</type>
          </param>
        </templateparamlist>
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToTargetFrameTemplated</definition>
        <argsstring>(const TimeType secondsSinceEpoch)</argsstring>
        <name>getRotationToTargetFrameTemplated</name>
        <param>
          <type>const TimeType</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion to target frame from base frame in templated precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual function to calculate and return the rotation quaternion to target frame from base frame at specified time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rotation quaternion computed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="269" column="24"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae3d4f6abdc820c309328747397b25afc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>virtual Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToBaseFrame</definition>
        <argsstring>(const double secondsSinceEpoch)=0</argsstring>
        <name>getDerivativeOfRotationToBaseFrame</name>
        <reimplementedby refid="da/d89/classtudat_1_1ephemerides_1_1SynchronousRotationalEphemeris_1a7c452685ea8c0a48556b611c6d5479c0">getDerivativeOfRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="da/d97/classtudat_1_1ephemerides_1_1PlanetaryRotationModel_1a7d79c5750aaf48ec332a80c5554ed620">getDerivativeOfRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="dd/dd4/classtudat_1_1ephemerides_1_1ConstantRotationalEphemeris_1a22bcfaf2a7fade63fb5cc2df0b691fba">getDerivativeOfRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a8a73dcb9267d9fed8d187e3a6da0587b">getDerivativeOfRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris_1aa5a87645c6240662b94bc5d8a58aa528">getDerivativeOfRotationToBaseFrame</reimplementedby>
        <reimplementedby refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris_1ab99c74c3949251affc7829f28cd39671">getDerivativeOfRotationToBaseFrame</reimplementedby>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame at specified time, to be implemented by derived class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from target (typically local) to original (typically global) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="280" column="29"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a204fc299543c55e9adafd9c5db9ce28b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Matrix3d</type>
        <definition>virtual Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToBaseFrameFromExtendedTime</definition>
        <argsstring>(const Time timeSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToBaseFrameFromExtendedTime</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame in <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame at specified time, to be implemented by derived class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from target (typically local) to original (typically global) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="291" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1af6748042b7a97dc7573b7fd3679d2e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TimeType</type>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToBaseFrameTemplated</definition>
        <argsstring>(const TimeType timeSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToBaseFrameTemplated</name>
        <param>
          <type>const TimeType</type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame in templated precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame at specified time, to be implemented by derived class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since Julian day reference epoch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from target (typically local) to original (typically global) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="306" column="21"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a8749ef7c763d598973acf970c546c601" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>virtual Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToTargetFrame</definition>
        <argsstring>(const double secondsSinceEpoch)=0</argsstring>
        <name>getDerivativeOfRotationToTargetFrame</name>
        <reimplementedby refid="da/d89/classtudat_1_1ephemerides_1_1SynchronousRotationalEphemeris_1a1ae64cfcdcea0ec09e4316206bb907c7">getDerivativeOfRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="dd/dd4/classtudat_1_1ephemerides_1_1ConstantRotationalEphemeris_1a103af4ebe28bc515c0f7c4ab9efcc132">getDerivativeOfRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="da/d97/classtudat_1_1ephemerides_1_1PlanetaryRotationModel_1ae9220eae6ea4bbd5894af848a9189244">getDerivativeOfRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris_1a0195bb027ba27691e2eb7306dd8312fa">getDerivativeOfRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris_1a239ffea2ca24848e52548de6645f8d66">getDerivativeOfRotationToTargetFrame</reimplementedby>
        <reimplementedby refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris_1a0108d04795daa600b6614d9c48046ce0">getDerivativeOfRotationToTargetFrame</reimplementedby>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame at specified time, to be implemented by derived class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from original (typically global) to target (typically local) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="317" column="29"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a3a99d3f0f093dd19dd99d54b89baeecc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Matrix3d</type>
        <definition>virtual Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToTargetFrameFromExtendedTime</definition>
        <argsstring>(const Time timeSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToTargetFrameFromExtendedTime</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame in <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame at specified time, to be implemented by derived class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from original (typically global) to target (typically local) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="328" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a94d0afac3f13531cb5d4be27397045da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TimeType</type>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToTargetFrameTemplated</definition>
        <argsstring>(const TimeType secondsSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToTargetFrameTemplated</name>
        <param>
          <type>const TimeType</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame in templated precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the derivative of the rotation matrix from original frame to target frame at specified time, to be implemented by derived class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Derivative of rotation from original (typically global) to target (typically local) frame at specified time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="343" column="21"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a88502baa383390473f016d197a42c5a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Vector3d</type>
        <definition>virtual Eigen::Vector3d tudat::ephemerides::RotationalEphemeris::getRotationalVelocityVectorInBaseFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationalVelocityVectorInBaseFrame</name>
        <reimplementedby refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris_1ad65e676f3b0c368a2df28c360d9c6522">getRotationalVelocityVectorInBaseFrame</reimplementedby>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the angular velocity vector, expressed in base frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the angular velocity vector, expressed in base frame. Thsi function uses the functions that calculate the rotation matrix and its time derivative. It may be redefined in a derived class, to calculate the angular velocity vector directly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Angular velocity vector, expressed in base frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="354" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="354" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a6119997ff42dca4a9ecb0b83229a8524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Vector3d</type>
        <definition>virtual Eigen::Vector3d tudat::ephemerides::RotationalEphemeris::getRotationalVelocityVectorInTargetFrame</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationalVelocityVectorInTargetFrame</name>
        <reimplementedby refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris_1a730feb94fe4163373e89d0826f052cb0">getRotationalVelocityVectorInTargetFrame</reimplementedby>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the angular velocity vector, expressed in target frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the angular velocity vector, expressed in target frame. This function calls the function that calculates the angular velocioty vector in the base frame, and rotates it to the target frame. It may be redefined in a derived class, to calculate the angular velocity vector directly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Angular velocity vector, expressed in target frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="370" column="29" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="370" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1af26529c506f7eed75689b57e70c29b64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::ephemerides::RotationalEphemeris::getFullRotationalQuantitiesToTargetFrame</definition>
        <argsstring>(Eigen::Quaterniond &amp;currentRotationToLocalFrame, Eigen::Matrix3d &amp;currentRotationToLocalFrameDerivative, Eigen::Vector3d &amp;currentAngularVelocityVectorInGlobalFrame, const double secondsSinceEpoch)</argsstring>
        <name>getFullRotationalQuantitiesToTargetFrame</name>
        <reimplementedby refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris_1af7a669375d65d14ac82b54e3a4b84ae1">getFullRotationalQuantitiesToTargetFrame</reimplementedby>
        <param>
          <type>Eigen::Quaterniond &amp;</type>
          <declname>currentRotationToLocalFrame</declname>
        </param>
        <param>
          <type>Eigen::Matrix3d &amp;</type>
          <declname>currentRotationToLocalFrameDerivative</declname>
        </param>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>currentAngularVelocityVectorInGlobalFrame</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the full rotational state at given time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the full rotational state at given time (rotation matrix, derivative of rotation matrix and angular velocity vector). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentRotationToLocalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Current rotation to local frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentRotationToLocalFrameDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>Current derivative of rotation matrix to local frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentAngularVelocityVectorInGlobalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Current angular velocity vector, expressed in global frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondsSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="388" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="388" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a3fb1cf6cfb681f835e5837160a04b6a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::ephemerides::RotationalEphemeris::getFullRotationalQuantitiesToTargetFrameFromExtendedTime</definition>
        <argsstring>(Eigen::Quaterniond &amp;currentRotationToLocalFrame, Eigen::Matrix3d &amp;currentRotationToLocalFrameDerivative, Eigen::Vector3d &amp;currentAngularVelocityVectorInGlobalFrame, const Time timeSinceEpoch)</argsstring>
        <name>getFullRotationalQuantitiesToTargetFrameFromExtendedTime</name>
        <param>
          <type>Eigen::Quaterniond &amp;</type>
          <declname>currentRotationToLocalFrame</declname>
        </param>
        <param>
          <type>Eigen::Matrix3d &amp;</type>
          <declname>currentRotationToLocalFrameDerivative</declname>
        </param>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>currentAngularVelocityVectorInGlobalFrame</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the full rotational state at given time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the full rotational state at given time (rotation matrix, derivative of rotation matrix and angular velocity vector). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentRotationToLocalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Current rotation to local frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentRotationToLocalFrameDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>Current derivative of rotation matrix to local frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentAngularVelocityVectorInGlobalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Current angular velocity vector, expressed in global frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="411" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="411" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae51124f5f545aea0fd3a38784fbae27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TimeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::ephemerides::RotationalEphemeris::getFullRotationalQuantitiesToTargetFrameTemplated</definition>
        <argsstring>(Eigen::Quaterniond &amp;currentRotationToLocalFrame, Eigen::Matrix3d &amp;currentRotationToLocalFrameDerivative, Eigen::Vector3d &amp;currentAngularVelocityVectorInGlobalFrame, const TimeType timeSinceEpoch)</argsstring>
        <name>getFullRotationalQuantitiesToTargetFrameTemplated</name>
        <param>
          <type>Eigen::Quaterniond &amp;</type>
          <declname>currentRotationToLocalFrame</declname>
        </param>
        <param>
          <type>Eigen::Matrix3d &amp;</type>
          <declname>currentRotationToLocalFrameDerivative</declname>
        </param>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>currentAngularVelocityVectorInGlobalFrame</declname>
        </param>
        <param>
          <type>const TimeType</type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the full rotational state at given time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the full rotational state at given time (rotation matrix, derivative of rotation matrix and angular velocity vector). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentRotationToLocalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Current rotation to local frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentRotationToLocalFrameDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>Current derivative of rotation matrix to local frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentAngularVelocityVectorInGlobalFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Current angular velocity vector, expressed in global frame (returned by reference) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeSinceEpoch</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="435" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1acd7e580c893057e09b5420f43cd7ac6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector7d</type>
        <definition>Eigen::Vector7d tudat::ephemerides::RotationalEphemeris::getRotationStateVector</definition>
        <argsstring>(const double time)</argsstring>
        <name>getRotationStateVector</name>
        <param>
          <type>const double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the current rotation as a state vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the current rotation as a state vector (quaternion entries of body-fixed to base frame, and angular velocity vector in body-fixed frame. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds since epoch at which ephemeris is to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current rotation as a state vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="448" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="448" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a8182a82115da3182001eaa703cf39520" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tudat::ephemerides::RotationalEphemeris::getBaseFrameOrientation</definition>
        <argsstring>()</argsstring>
        <name>getBaseFrameOrientation</name>
        <briefdescription>
<para>Get base reference frame orientation. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the base reference frame orientation. <simplesect kind="return"><para>Base reference frame orientation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="462" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a0a9beaf6621a5305b5b8ba50c4c4724a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tudat::ephemerides::RotationalEphemeris::getTargetFrameOrientation</definition>
        <argsstring>()</argsstring>
        <name>getTargetFrameOrientation</name>
        <briefdescription>
<para>Get target reference frame orientation. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the target reference frame orientation. <simplesect kind="return"><para>Target reference frame orientation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="469" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="469" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a44a158bf6844a49666f92496bf4d2236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToBaseFrameTemplated</definition>
        <argsstring>(const double timeSinceEpoch)</argsstring>
        <name>getRotationToBaseFrameTemplated</name>
        <param>
          <type>const double</type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion from target frame to base frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="43" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a9f1752bfb88addfc7300e053aad61d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToBaseFrameTemplated</definition>
        <argsstring>(const Time timeSinceEpoch)</argsstring>
        <name>getRotationToBaseFrameTemplated</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion from target frame to base frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="51" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1afd307cdb6cee2197d9a1e729efdf0e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToTargetFrameTemplated</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getRotationToTargetFrameTemplated</name>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion to target frame from base frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="59" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a45a4c306e66fefda96e41deb1ebb0620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::ephemerides::RotationalEphemeris::getRotationToTargetFrameTemplated</definition>
        <argsstring>(const Time secondsSinceEpoch)</argsstring>
        <name>getRotationToTargetFrameTemplated</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Get rotation quaternion to target frame from base frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="67" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a2bddf1e55952da8c91762cf862f3166d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToBaseFrameTemplated</definition>
        <argsstring>(const double timeSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToBaseFrameTemplated</name>
        <param>
          <type>const double</type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="75" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1aaa4d6f50a9745fc2d97c35c7eaf8f79b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToBaseFrameTemplated</definition>
        <argsstring>(const Time timeSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToBaseFrameTemplated</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix from target frame to original frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="83" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a17929bac936040d7a3d3d8fb5a52c6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToTargetFrameTemplated</definition>
        <argsstring>(const double secondsSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToTargetFrameTemplated</name>
        <param>
          <type>const double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix to target frame from original frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="92" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4528fd7b41c14e3edac5ce544daf5fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::ephemerides::RotationalEphemeris::getDerivativeOfRotationToTargetFrameTemplated</definition>
        <argsstring>(const Time secondsSinceEpoch)</argsstring>
        <name>getDerivativeOfRotationToTargetFrameTemplated</name>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the derivative of the rotation matrix to target frame from original frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="100" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4ede523d08816231de795a38371c198d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::ephemerides::RotationalEphemeris::getFullRotationalQuantitiesToTargetFrameTemplated</definition>
        <argsstring>(Eigen::Quaterniond &amp;currentRotationToLocalFrame, Eigen::Matrix3d &amp;currentRotationToLocalFrameDerivative, Eigen::Vector3d &amp;currentAngularVelocityVectorInGlobalFrame, const double timeSinceEpoch)</argsstring>
        <name>getFullRotationalQuantitiesToTargetFrameTemplated</name>
        <param>
          <type>Eigen::Quaterniond &amp;</type>
          <declname>currentRotationToLocalFrame</declname>
        </param>
        <param>
          <type>Eigen::Matrix3d &amp;</type>
          <declname>currentRotationToLocalFrameDerivative</declname>
        </param>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>currentAngularVelocityVectorInGlobalFrame</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the full rotational state at given time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="108" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ac758d76f05ad8d37130b0fb895790e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void tudat::ephemerides::RotationalEphemeris::getFullRotationalQuantitiesToTargetFrameTemplated</definition>
        <argsstring>(Eigen::Quaterniond &amp;currentRotationToLocalFrame, Eigen::Matrix3d &amp;currentRotationToLocalFrameDerivative, Eigen::Vector3d &amp;currentAngularVelocityVectorInGlobalFrame, const Time timeSinceEpoch)</argsstring>
        <name>getFullRotationalQuantitiesToTargetFrameTemplated</name>
        <param>
          <type>Eigen::Quaterniond &amp;</type>
          <declname>currentRotationToLocalFrame</declname>
        </param>
        <param>
          <type>Eigen::Matrix3d &amp;</type>
          <declname>currentRotationToLocalFrameDerivative</declname>
        </param>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>currentAngularVelocityVectorInGlobalFrame</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref></type>
          <declname>timeSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Function to calculate the full rotational state at given time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" line="121" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/src/astro/ephemerides/rotationalEphemeris.cpp" bodystart="121" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for rotational ephemerides of bodies. </para>
    </briefdescription>
    <detaileddescription>
<para>Base class for rotational ephemerides of bodies. The rotation (quaternion) between two frames specified by member variable ids can be calculated as a function of time in the manner determined by the derived class. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::ephemerides::ConstantRotationalEphemeris</label>
        <link refid="dd/dd4/classtudat_1_1ephemerides_1_1ConstantRotationalEphemeris"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tudat::ephemerides::RotationalEphemeris</label>
        <link refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris"/>
      </node>
      <node id="4">
        <label>tudat::ephemerides::SimpleRotationalEphemeris</label>
        <link refid="d3/dae/classtudat_1_1ephemerides_1_1SimpleRotationalEphemeris"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::ephemerides::PlanetaryRotationModel</label>
        <link refid="da/d97/classtudat_1_1ephemerides_1_1PlanetaryRotationModel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>tudat::ephemerides::TabulatedRotationalEphemeris&lt; StateScalarType, TimeType &gt;</label>
        <link refid="dc/da5/classtudat_1_1ephemerides_1_1TabulatedRotationalEphemeris"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>tudat::ephemerides::SynchronousRotationalEphemeris</label>
        <link refid="da/d89/classtudat_1_1ephemerides_1_1SynchronousRotationalEphemeris"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>tudat::ephemerides::SpiceRotationalEphemeris</label>
        <link refid="d0/d45/classtudat_1_1ephemerides_1_1SpiceRotationalEphemeris"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" line="170" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/ephemerides/rotationalEphemeris.h" bodystart="171" bodyend="485"/>
    <listofallmembers>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae8cb8bf513d5c4088386333b7e071677" prot="protected" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>baseFrameOrientation_</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a8182a82115da3182001eaa703cf39520" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getBaseFrameOrientation</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae3d4f6abdc820c309328747397b25afc" prot="public" virt="pure-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a204fc299543c55e9adafd9c5db9ce28b" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1af6748042b7a97dc7573b7fd3679d2e11" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a2bddf1e55952da8c91762cf862f3166d" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1aaa4d6f50a9745fc2d97c35c7eaf8f79b" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a8749ef7c763d598973acf970c546c601" prot="public" virt="pure-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a3a99d3f0f093dd19dd99d54b89baeecc" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a94d0afac3f13531cb5d4be27397045da" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a17929bac936040d7a3d3d8fb5a52c6c6" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4528fd7b41c14e3edac5ce544daf5fab" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getDerivativeOfRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1af26529c506f7eed75689b57e70c29b64" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a3fb1cf6cfb681f835e5837160a04b6a3" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ae51124f5f545aea0fd3a38784fbae27d" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4ede523d08816231de795a38371c198d" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ac758d76f05ad8d37130b0fb895790e65" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getFullRotationalQuantitiesToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a88502baa383390473f016d197a42c5a3" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationalVelocityVectorInBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a6119997ff42dca4a9ecb0b83229a8524" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationalVelocityVectorInTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a474b39015aa2c6f1061cd1ab80cfb375" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationMatrixToBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a72bd5e91640110426aa20c66bc5c145e" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationMatrixToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1acd7e580c893057e09b5420f43cd7ac6b" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationStateVector</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a48c05e29f3a225433eb02feb09d1b77a" prot="public" virt="pure-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToBaseFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a138692d3669026de1302eeb8e2bdf7ca" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToBaseFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1aa6a4f20094027fc014ca2ec1dd3a47f1" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a44a158bf6844a49666f92496bf4d2236" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a9f1752bfb88addfc7300e053aad61d31" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToBaseFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a569eeb2b7416693589b6f2b4707932a7" prot="public" virt="pure-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToTargetFrame</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1ac231daac9a3aec42d42c9221952c76fd" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToTargetFrameFromExtendedTime</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a80f1c27c08f514a0326ff3dafd15801c" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1afd307cdb6cee2197d9a1e729efdf0e7f" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a45a4c306e66fefda96e41deb1ebb0620" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getRotationToTargetFrameTemplated</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a0a9beaf6621a5305b5b8ba50c4c4724a" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>getTargetFrameOrientation</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a224420ee5a24d5ffe7d64b64f81d11f3" prot="public" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>RotationalEphemeris</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a113566bbf2ec56dc623466c98dab0454" prot="protected" virt="non-virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>targetFrameOrientation_</name></member>
      <member refid="dc/de4/classtudat_1_1ephemerides_1_1RotationalEphemeris_1a4964ece0cf96c422462568cbd0560eda" prot="public" virt="virtual"><scope>tudat::ephemerides::RotationalEphemeris</scope><name>~RotationalEphemeris</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
