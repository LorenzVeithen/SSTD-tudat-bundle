<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative" kind="class" language="C++" prot="public">
    <compoundname>tudat::propagators::RotationalMotionQuaternionsStateDerivative</compoundname>
    <basecompoundref refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative" prot="public" virt="non-virtual">tudat::propagators::RotationalMotionStateDerivative&lt; double, double &gt;</basecompoundref>
    <includes refid="db/db9/rotationalMotionQuaternionsStateDerivative_8h" local="no">rotationalMotionQuaternionsStateDerivative.h</includes>
    <templateparamlist>
      <param>
        <type>typename StateScalarType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename TimeType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1aaa0457c913fb762aa57ac0f1e12bc74e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::RotationalMotionQuaternionsStateDerivative</definition>
        <argsstring>(const basic_astrodynamics::TorqueModelMap &amp;torqueModelsPerBody, const std::vector&lt; std::string &gt; &amp;bodiesToPropagate, std::vector&lt; std::function&lt; Eigen::Matrix3d() &gt; &gt; bodyInertiaTensorFunctions, std::vector&lt; std::function&lt; Eigen::Matrix3d() &gt; &gt; bodyInertiaTensorTimeDerivativeFunctions=std::vector&lt; std::function&lt; Eigen::Matrix3d() &gt; &gt;())</argsstring>
        <name>RotationalMotionQuaternionsStateDerivative</name>
        <param>
          <type>const basic_astrodynamics::TorqueModelMap &amp;</type>
          <declname>torqueModelsPerBody</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>bodiesToPropagate</declname>
        </param>
        <param>
          <type>std::vector&lt; std::function&lt; Eigen::Matrix3d() &gt; &gt;</type>
          <declname>bodyInertiaTensorFunctions</declname>
        </param>
        <param>
          <type>std::vector&lt; std::function&lt; Eigen::Matrix3d() &gt; &gt;</type>
          <declname>bodyInertiaTensorTimeDerivativeFunctions</declname>
          <defval>std::vector&lt; std::function&lt; Eigen::Matrix3d() &gt; &gt;()</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torqueModelsPerBody</parametername>
</parameternamelist>
<parameterdescription>
<para>List of torque models (first map key body undergoing acceleration, second map key body exerting acceleration). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodiesToPropagate</parametername>
</parameternamelist>
<parameterdescription>
<para>List of names of bodies for which rotational state is to be propagated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodyInertiaTensorFunctions</parametername>
</parameternamelist>
<parameterdescription>
<para>List of functions returning inertia tensors of bodiesToPropagate (in same order). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodyInertiaTensorTimeDerivativeFunctions</parametername>
</parameternamelist>
<parameterdescription>
<para>List of functions returning time derivatives of inertia tensors of bodiesToPropagate (in same order). Default empty, denoting time-invariant inertia tensors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="80" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a2fbbd4c39a28d67226dbc2c8ccd76a86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::~RotationalMotionQuaternionsStateDerivative</definition>
        <argsstring>()</argsstring>
        <name>~RotationalMotionQuaternionsStateDerivative</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="92" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1aeb926dd815d7db511c8f2071259762ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::calculateSystemStateDerivative</definition>
        <argsstring>(const TimeType time, const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &amp;stateOfSystemToBeIntegrated, Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &gt; stateDerivative)</argsstring>
        <name>calculateSystemStateDerivative</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &amp;</type>
          <declname>stateOfSystemToBeIntegrated</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &gt;</type>
          <declname>stateDerivative</declname>
        </param>
        <briefdescription>
<para>Calculates the state derivative of the rotational motion of the system. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the state derivative of the rotational motion of the system at the given time and rotational state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> (seconds since reference epoch) at which the system is to be updated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateOfSystemToBeIntegrated</parametername>
</parameternamelist>
<parameterdescription>
<para>List of 7 * bodiesToPropagate_.size( ), containing rotation quaternion and angular velocity of the bodies being propagated. The order of the values is defined by the order of bodies in bodiesToPropagate_. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>Current state derivative (quaternion rate + angular acceleration) of system of bodies integrated numerically (returned by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="104" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="104" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1aae52bc4c603883c25659df2f73443453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::convertFromOutputSolution</definition>
        <argsstring>(const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;outputSolution, const TimeType &amp;time)</argsstring>
        <name>convertFromOutputSolution</name>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>outputSolution</declname>
        </param>
        <param>
          <type>const TimeType &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Function to convert the state in the conventional form to the propagator-specific form. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to convert the state in the conventional form to the propagator-specific form. For this propagator, the two are equivalent, and this function returns the input state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputSolution</parametername>
</parameternamelist>
<parameterdescription>
<para>State in &apos;conventional form&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time at which the state is valid (not used in this class). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State (outputSolution), converted to the &apos;propagator-specific form&apos; (which is equal to outputSolution). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="135" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a0955d4a6522bbb9412319acc32ccb1f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::convertToOutputSolution</definition>
        <argsstring>(const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;internalSolution, const TimeType &amp;time, Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt; currentLocalSolution)</argsstring>
        <name>convertToOutputSolution</name>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>internalSolution</declname>
        </param>
        <param>
          <type>const TimeType &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt;</type>
          <declname>currentLocalSolution</declname>
        </param>
        <briefdescription>
<para>Function to convert the propagator-specific form of the state to the conventional form. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to convert the propagator-specific form of the state to the conventional form. For the this propagator, the two are equivalent, and this function returns the input state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internalSolution</parametername>
</parameternamelist>
<parameterdescription>
<para>State in propagator-specific form (which is equal to outputSolution to conventional form for this propagator) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time at which the state is valid (not used in this class). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentLocalSolution</parametername>
</parameternamelist>
<parameterdescription>
<para>State (internalSolution), converted to the &apos;conventional form&apos;, which is equal to outputSolution for this class (returned by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="151" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="151" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a0279576abe8e2a1c9abb4143669140b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::postProcessState</definition>
        <argsstring>(Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt; unprocessedState)</argsstring>
        <name>postProcessState</name>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt;</type>
          <declname>unprocessedState</declname>
        </param>
        <briefdescription>
<para>Function to process the state during propagation. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to process the state during propagation. For quaternions, this function normalizes the quaternion vector in case its magnitude differs from 1.0 by a value larger than the tolerance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unprocessedState</parametername>
</parameternamelist>
<parameterdescription>
<para>State computed after propagation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Processed state (returned by reference). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="165" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="165" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a54fa214d24939dd96c7855814d698d85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;::isStateToBePostProcessed</definition>
        <argsstring>()</argsstring>
        <name>isStateToBePostProcessed</name>
        <reimplements refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a8541ff94360e103cd1157899969c6bb3">isStateToBePostProcessed</reimplements>
        <briefdescription>
<para>Function to return whether the state needs to be post-processed. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return whether the state needs to be post-processed. For quaternions this is true. <simplesect kind="return"><para>Boolean confirming that the state needs to be post-processed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="192" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="192" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for computing the state derivative for rotational dynamics of N bodies. </para>
    </briefdescription>
    <detaileddescription>
<para>Class for computing the state derivative for rotational dynamics of N bodies, using quaternion from body-fixed to inertial frame (in quaternion format) and angular velocity-vector of body expressed in body-fixed frame as the rotational state of a single body </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tudat::propagators::RotationalMotionStateDerivative&lt; double, double &gt;</label>
        <link refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::propagators::SingleStateTypeDerivative&lt; double, double &gt;</label>
        <link refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative"/>
      </node>
      <node id="1">
        <label>tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;</label>
        <link refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tudat::propagators::RotationalMotionStateDerivative&lt; double, double &gt;</label>
        <link refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tudat::propagators::SingleStateTypeDerivative&lt; double, double &gt;</label>
        <link refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative"/>
      </node>
      <node id="1">
        <label>tudat::propagators::RotationalMotionQuaternionsStateDerivative&lt; StateScalarType, TimeType &gt;</label>
        <link refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" line="64" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/rotationalMotionQuaternionsStateDerivative.h" bodystart="65" bodyend="199"/>
    <listofallmembers>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1af1270faa421bb8be633573a7cc34370e" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>bodiesToPropagate_</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a4f909d4279986605f86b6c70cf7a0799" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>bodyInertiaTensorFunctions_</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1abe13d32b331915592f5a90cc5805da7d" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>bodyInertiaTensorTimeDerivativeFunctions_</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1aeb926dd815d7db511c8f2071259762ff" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>calculateSystemStateDerivative</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ae3f4427ef5aee571271cbaa23bda3cb1" prot="public" virt="pure-virtual" ambiguityscope="RotationalMotionStateDerivative&lt; double, double &gt;::"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>calculateSystemStateDerivative</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a6a99a2bf6988a9eb4fcfebb0bb28cd37" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>clearDerivedRotationalStateDerivativeModel</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a5d6e4902631aae25b84086a6ee653d6f" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>clearRotationalStateDerivativeModel</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a059b6c1f916965c510e2fef88bb6799a" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>clearStateDerivativeModel</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1acf70dfc37b2840764c5b7811d43a58e6" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>convertCurrentStateToGlobalRepresentation</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1aae52bc4c603883c25659df2f73443453" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>convertFromOutputSolution</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ad12197357ad23bc815274f69c0c9a6c3" prot="public" virt="pure-virtual" ambiguityscope="RotationalMotionStateDerivative&lt; double, double &gt;::"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>convertFromOutputSolution</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a0955d4a6522bbb9412319acc32ccb1f6" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>convertToOutputSolution</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1aeab2b2a9eae937200a5def64dcf18960" prot="public" virt="pure-virtual" ambiguityscope="RotationalMotionStateDerivative&lt; double, double &gt;::"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>convertToOutputSolution</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1ab8edc4635e0361edfc9e8d3af2526d1b" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getBodiesToBeIntegratedNumerically</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1afe9ddab90e3a54aee382175cd3caadae" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getConventionalStateSize</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a2dbb19e97c9fde342788832fece0a5ff" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getIntegratedStateType</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1af203ca28dbf9eeacb76aca2a5d4f384f" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getPropagatedStateSize</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1ab28c0bda284f1574ec3b805d0eb72735" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getRotationalPropagatorType</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a298318367fc2aa9326ded4ed40bf8403" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getTorquesMap</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a060b4d20e1e81411725ba549b0cbdcd8" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>getTotalTorqueForBody</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1ad99af62f8368c6f524cbb8a4fe5feeda" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>innerTorqueIterator</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a741436a816b5d018f80f061d15fdac74" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>integratedStateType_</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a54fa214d24939dd96c7855814d698d85" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>isStateToBePostProcessed</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a0279576abe8e2a1c9abb4143669140b3" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>postProcessState</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a03145882db4c90a63a72d0c855b27f11" prot="public" virt="virtual" ambiguityscope="RotationalMotionStateDerivative&lt; double, double &gt;::"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>postProcessState</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a90c770ae1cc36edb43d6363416f3461f" prot="public" virt="virtual" ambiguityscope="RotationalMotionStateDerivative&lt; double, double &gt;::"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>postProcessState</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a8b69c3ba337a3d4c709aa6256b21288a" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>propagatorType_</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1aaa0457c913fb762aa57ac0f1e12bc74e" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>RotationalMotionQuaternionsStateDerivative</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1ae387fd2dcefcceb745ba5bc84289f7fd" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>RotationalMotionStateDerivative</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1acbb10b6a3ae3413f136520475f93ceab" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>SingleStateTypeDerivative</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a8603cf820b0fe70622eed402b789f99d" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>sumTorquesPerBody</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a4b2dacfc9be036b4fda455d185fab8fd" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>torqueModelMapIterator</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a54f956a03c7677f06f854ee357768fd4" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>torqueModelsPerBody_</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a28e844a8e7c5716d091c7504a5c98815" prot="protected" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>unprocessedState_</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a58524509335a8ba57ec71258f510c7a4" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>updateStateDerivativeModel</name></member>
      <member refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a2fbbd4c39a28d67226dbc2c8ccd76a86" prot="public" virt="non-virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>~RotationalMotionQuaternionsStateDerivative</name></member>
      <member refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1aa134ceec2f5960741c5953652435ece9" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>~RotationalMotionStateDerivative</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a08576def80c16bfe0169693d1abc0dfc" prot="public" virt="virtual"><scope>tudat::propagators::RotationalMotionQuaternionsStateDerivative</scope><name>~SingleStateTypeDerivative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
