<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tudat::propagators::SingleStateTypeDerivative</compoundname>
    <includes refid="d8/d00/singleStateTypeDerivative_8h" local="no">singleStateTypeDerivative.h</includes>
    <templateparamlist>
      <param>
        <type>typename StateScalarType</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename TimeType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a741436a816b5d018f80f061d15fdac74" prot="protected" static="no" mutable="no">
        <type>IntegratedStateType</type>
        <definition>IntegratedStateType tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::integratedStateType_</definition>
        <argsstring></argsstring>
        <name>integratedStateType_</name>
        <briefdescription>
<para>Type of dynamics for which the state derivative is calculated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="235" column="25" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a28e844a8e7c5716d091c7504a5c98815" prot="protected" static="no" mutable="no">
        <type>Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt;</type>
        <definition>Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::unprocessedState_</definition>
        <argsstring></argsstring>
        <name>unprocessedState_</name>
        <briefdescription>
<para>Vector used during post-processing of state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="238" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1acbb10b6a3ae3413f136520475f93ceab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::SingleStateTypeDerivative</definition>
        <argsstring>(const IntegratedStateType integratedStateType)</argsstring>
        <name>SingleStateTypeDerivative</name>
        <param>
          <type>const IntegratedStateType</type>
          <declname>integratedStateType</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>integratedStateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of dynamics for whichh the state derivative is calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="81" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a08576def80c16bfe0169693d1abc0dfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::~SingleStateTypeDerivative</definition>
        <argsstring>()</argsstring>
        <name>~SingleStateTypeDerivative</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="91" column="13" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ae3f4427ef5aee571271cbaa23bda3cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::calculateSystemStateDerivative</definition>
        <argsstring>(const TimeType time, const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &amp;stateOfSystemToBeIntegrated, Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &gt; stateDerivative)=0</argsstring>
        <name>calculateSystemStateDerivative</name>
        <param>
          <type>const TimeType</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &amp;</type>
          <declname>stateOfSystemToBeIntegrated</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &gt;</type>
          <declname>stateDerivative</declname>
        </param>
        <briefdescription>
<para>Calculates the state derivative of the system of equations for the given type of dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the state derivative of the system of equations for the given type of dynamics. The environment and acceleration models (updateStateDerivativeModel) must be updated before calling this function. It returns the state derivative in the form required for the specific type of propagator used (defined by derived class). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which the state derivative is to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateOfSystemToBeIntegrated</parametername>
</parameternamelist>
<parameterdescription>
<para>Current state of the system, in the form that the equations are propagated (i.e. directly from numerical integrator) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>Derivative of the state of the system, in the form that the equations are propagated (i.e. to be piped directly to numerical integrator), returned by reference. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="105" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a39840fb71c86fcc5e70804dd6aa7683b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::clearStateDerivativeModel</definition>
        <argsstring>()=0</argsstring>
        <name>clearStateDerivativeModel</name>
        <reimplementedby refid="d5/d19/classtudat_1_1propagators_1_1BodyMassStateDerivative_1a7c37b818e0f9b8a895dc39d374ac4633">clearStateDerivativeModel</reimplementedby>
        <reimplementedby refid="d4/d77/classtudat_1_1propagators_1_1CustomStateDerivative_1a7b2ebdcc6f42cfb1cbb46291d6e80ffe">clearStateDerivativeModel</reimplementedby>
        <reimplementedby refid="d6/d9c/classtudat_1_1propagators_1_1NBodyStateDerivative_1a1a4df6d3bc026a5d7d780f812fc10ba3">clearStateDerivativeModel</reimplementedby>
        <reimplementedby refid="d6/d9c/classtudat_1_1propagators_1_1NBodyStateDerivative_1a1a4df6d3bc026a5d7d780f812fc10ba3">clearStateDerivativeModel</reimplementedby>
        <reimplementedby refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a059b6c1f916965c510e2fef88bb6799a">clearStateDerivativeModel</reimplementedby>
        <reimplementedby refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a059b6c1f916965c510e2fef88bb6799a">clearStateDerivativeModel</reimplementedby>
        <briefdescription>
<para>Function to clear reference/cached values of state derivative model. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to clear reference/cached values of state derivative model, such as the current time and/or state. This function is to be implemented in each derived class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="115" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a9542fa3986fabe6129f0bf5b788daeba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::updateStateDerivativeModel</definition>
        <argsstring>(const TimeType currentTime)=0</argsstring>
        <name>updateStateDerivativeModel</name>
        <reimplementedby refid="d6/d9c/classtudat_1_1propagators_1_1NBodyStateDerivative_1a1db2b5b538eeb857e040a8744d886e61">updateStateDerivativeModel</reimplementedby>
        <reimplementedby refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1a58524509335a8ba57ec71258f510c7a4">updateStateDerivativeModel</reimplementedby>
        <param>
          <type>const TimeType</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Function to update the state derivative model to the current time. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to update the state derivative model (i.e. acceleration, torque, etc. models) to the current time. Note that this function only updates the state derivative model itself, the environment models must be updated before calling this function <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> to which the state derivative is to be updated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="124" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ac1f76ef281c53cccc0ea66a12973b916" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::convertCurrentStateToGlobalRepresentation</definition>
        <argsstring>(const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &amp;internalSolution, const TimeType &amp;time, Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt; currentCartesianLocalSoluton)=0</argsstring>
        <name>convertCurrentStateToGlobalRepresentation</name>
        <reimplementedby refid="d6/d9c/classtudat_1_1propagators_1_1NBodyStateDerivative_1a17b2f9c92c77ced3cfa2b563878c84eb">convertCurrentStateToGlobalRepresentation</reimplementedby>
        <reimplementedby refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1acf70dfc37b2840764c5b7811d43a58e6">convertCurrentStateToGlobalRepresentation</reimplementedby>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &amp;</type>
          <declname>internalSolution</declname>
        </param>
        <param>
          <type>const TimeType &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt;</type>
          <declname>currentCartesianLocalSoluton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to convert the propagator-specific form of the state to the conventional form in the global frame.</para>
<para>Function to convert the propagator-specific form of the state to the conventional form in the global frame. The conventional form is one that is typically used to represent the current state in the environment (e.g. Body class). For translational dynamics this is the Cartesian position and velocity). The inertial frame is typically the barycenter with J2000/ECLIPJ2000 orientation, but may differ depending on simulation settings <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internalSolution</parametername>
</parameternamelist>
<parameterdescription>
<para>State in propagator-specific form (i.e. form that is used in numerical integration). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time at which the state is valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentCartesianLocalSoluton</parametername>
</parameternamelist>
<parameterdescription>
<para>State (internalSolution), converted to the &apos;conventional form&apos; in inertial coordinates, that can for instance be set directly in the body object (returned by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="140" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ad12197357ad23bc815274f69c0c9a6c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>virtual Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::convertFromOutputSolution</definition>
        <argsstring>(const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;outputSolution, const TimeType &amp;time)=0</argsstring>
        <name>convertFromOutputSolution</name>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>outputSolution</declname>
        </param>
        <param>
          <type>const TimeType &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Function to convert the state in the conventional form to the propagator-specific form. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to convert the state in the conventional form to the propagator-specific form. The conventional form is one that is typically used to represent the current state in the environment (e.g. Body class). For translational dynamics this is the Cartesian position and velocity). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputSolution</parametername>
</parameternamelist>
<parameterdescription>
<para>State in &apos;conventional form&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time at which the state is valid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State (outputSolution), converted to the &apos;propagator-specific form&apos; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="154" column="27"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1aeab2b2a9eae937200a5def64dcf18960" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::convertToOutputSolution</definition>
        <argsstring>(const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;internalSolution, const TimeType &amp;time, Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt; currentCartesianLocalSoluton)=0</argsstring>
        <name>convertToOutputSolution</name>
        <param>
          <type>const Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>internalSolution</declname>
        </param>
        <param>
          <type>const TimeType &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt;</type>
          <declname>currentCartesianLocalSoluton</declname>
        </param>
        <briefdescription>
<para>Function to convert the propagator-specific form of the state to the conventional form. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to convert the propagator-specific form of the state to the conventional form. The conventional form is one that is typically used to represent the current state in the environment (e.g. Body class). For translational dynamics this is the Cartesian position and velocity). In contrast to the convertCurrentStateToGlobalRepresentation function, this function does not provide the state in the inertial frame, but instead provides it in the frame in which it is propagated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internalSolution</parametername>
</parameternamelist>
<parameterdescription>
<para>State in propagator-specific form (i.e. form that is used in numerical integration). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time at which the state is valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentCartesianLocalSoluton</parametername>
</parameternamelist>
<parameterdescription>
<para>State (internalSolution), converted to the &apos;conventional form&apos; (returned by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="171" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1aa593f86baeb911ebaf24f849faad1867" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::getConventionalStateSize</definition>
        <argsstring>()=0</argsstring>
        <name>getConventionalStateSize</name>
        <reimplementedby refid="d5/d19/classtudat_1_1propagators_1_1BodyMassStateDerivative_1a48cceb2e74e3e0a2f203fb1f45bebb6d">getConventionalStateSize</reimplementedby>
        <reimplementedby refid="d4/d77/classtudat_1_1propagators_1_1CustomStateDerivative_1a27d518eeac4fdf756514479b4d8a58cd">getConventionalStateSize</reimplementedby>
        <reimplementedby refid="d6/d9c/classtudat_1_1propagators_1_1NBodyStateDerivative_1a164f88f2c4be12c243fb99a035213a66">getConventionalStateSize</reimplementedby>
        <reimplementedby refid="d6/d9c/classtudat_1_1propagators_1_1NBodyStateDerivative_1a164f88f2c4be12c243fb99a035213a66">getConventionalStateSize</reimplementedby>
        <reimplementedby refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1afe9ddab90e3a54aee382175cd3caadae">getConventionalStateSize</reimplementedby>
        <reimplementedby refid="d0/d08/classtudat_1_1propagators_1_1RotationalMotionStateDerivative_1afe9ddab90e3a54aee382175cd3caadae">getConventionalStateSize</reimplementedby>
        <briefdescription>
<para>Function to return the size of the conventional state handled by the object. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the size of the conventional state handled by the object. This is the size of the conventional propagation state, e.g., size of Cartesian state for translational propagation. <simplesect kind="return"><para>Size of the state under consideration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="181" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1af203ca28dbf9eeacb76aca2a5d4f384f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::getPropagatedStateSize</definition>
        <argsstring>()</argsstring>
        <name>getPropagatedStateSize</name>
        <reimplementedby refid="dc/dc4/classtudat_1_1propagators_1_1NBodyUnifiedStateModelExponentialMapStateDerivative_1a262eb6f793d39f05a9b9b7d62a64dbc3">getPropagatedStateSize</reimplementedby>
        <reimplementedby refid="d0/dac/classtudat_1_1propagators_1_1NBodyUnifiedStateModelModifiedRodriguesParametersStateDerivative_1a1c0d7b08d7765e3bd63ee8bbbaae753a">getPropagatedStateSize</reimplementedby>
        <reimplementedby refid="d6/d30/classtudat_1_1propagators_1_1NBodyUnifiedStateModelQuaternionsStateDerivative_1aeb2d401d6afa8ff8da105f8497352d92">getPropagatedStateSize</reimplementedby>
        <briefdescription>
<para>Function to return the size of the propagated state handled by the object. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the size of the propagated state handled by the object. This is the size of the actual propagation state, e.g., size of USM7 state for translational propagation. <simplesect kind="return"><para>Size of the propagated state under consideration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="189" column="17" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a2dbb19e97c9fde342788832fece0a5ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IntegratedStateType</type>
        <definition>IntegratedStateType tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::getIntegratedStateType</definition>
        <argsstring>()</argsstring>
        <name>getIntegratedStateType</name>
        <briefdescription>
<para>Function to return the type of dynamics for which the state derivative is calculated. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return the type of dynamics for which the state derivative is calculated <simplesect kind="return"><para>Type of dynamics for which the state derivative is calculated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="199" column="25" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a03145882db4c90a63a72d0c855b27f11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::postProcessState</definition>
        <argsstring>(Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt; unprocessedState)</argsstring>
        <name>postProcessState</name>
        <param>
          <type>Eigen::Block&lt; Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, 1 &gt; &gt;</type>
          <declname>unprocessedState</declname>
        </param>
        <briefdescription>
<para>Function to process the state vector during propagation. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to process the state during propagation. Is especially useful for attitude states (e.g., normalization of quaternions and transformation to/from shadow attitude parameters). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unprocessedState</parametername>
</parameternamelist>
<parameterdescription>
<para>State computed after propagation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="210" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a90c770ae1cc36edb43d6363416f3461f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::postProcessState</definition>
        <argsstring>(Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;unprocessedState)</argsstring>
        <name>postProcessState</name>
        <param>
          <type>Eigen::Matrix&lt; StateScalarType, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>unprocessedState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="215" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="215" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a8541ff94360e103cd1157899969c6bb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tudat::propagators::SingleStateTypeDerivative&lt; StateScalarType, TimeType &gt;::isStateToBePostProcessed</definition>
        <argsstring>()</argsstring>
        <name>isStateToBePostProcessed</name>
        <reimplementedby refid="dc/dc4/classtudat_1_1propagators_1_1NBodyUnifiedStateModelExponentialMapStateDerivative_1a1dbb3443fd7e77a787140fa296fe986a">isStateToBePostProcessed</reimplementedby>
        <reimplementedby refid="d0/dac/classtudat_1_1propagators_1_1NBodyUnifiedStateModelModifiedRodriguesParametersStateDerivative_1a3d8ea807bc9a5767226ea5d61000b771">isStateToBePostProcessed</reimplementedby>
        <reimplementedby refid="d6/d30/classtudat_1_1propagators_1_1NBodyUnifiedStateModelQuaternionsStateDerivative_1aa0991141d91bd6833ffdd82f66d9696d">isStateToBePostProcessed</reimplementedby>
        <reimplementedby refid="d2/dd1/classtudat_1_1propagators_1_1RotationalMotionExponentialMapStateDerivative_1a3193ea605dd74d2d07608fb4b3bc7b78">isStateToBePostProcessed</reimplementedby>
        <reimplementedby refid="d4/d69/classtudat_1_1propagators_1_1RotationalMotionModifiedRodriguesParametersStateDerivative_1a073ca79ab9f04be9586b286fe53a0514">isStateToBePostProcessed</reimplementedby>
        <reimplementedby refid="d1/d7c/classtudat_1_1propagators_1_1RotationalMotionQuaternionsStateDerivative_1a54fa214d24939dd96c7855814d698d85">isStateToBePostProcessed</reimplementedby>
        <briefdescription>
<para>Function to return whether the state needs to be post-processed. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to return whether the state needs to be post-processed. Default value is false. <simplesect kind="return"><para>Boolean informing whether the state needs to be post-processed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="227" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="227" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for calculating the state derivative model for a single type of dynamics. </para>
    </briefdescription>
    <detaileddescription>
<para>Base class for calculating the state derivative model for a single type of dynamics (i.e. translational, rotational, etc.). Each type of dynamics requires its own derived class. Moreover, a specific type of propagator (Cowell, Encke, etc. for translational dynamics) may require their own further derived class, depending on the exact requirements of such a propagator. </para>
    </detaileddescription>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" line="72" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/propagators/singleStateTypeDerivative.h" bodystart="73" bodyend="239"/>
    <listofallmembers>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ae3f4427ef5aee571271cbaa23bda3cb1" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>calculateSystemStateDerivative</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a39840fb71c86fcc5e70804dd6aa7683b" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>clearStateDerivativeModel</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ac1f76ef281c53cccc0ea66a12973b916" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>convertCurrentStateToGlobalRepresentation</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1ad12197357ad23bc815274f69c0c9a6c3" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>convertFromOutputSolution</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1aeab2b2a9eae937200a5def64dcf18960" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>convertToOutputSolution</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1aa593f86baeb911ebaf24f849faad1867" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>getConventionalStateSize</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a2dbb19e97c9fde342788832fece0a5ff" prot="public" virt="non-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>getIntegratedStateType</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1af203ca28dbf9eeacb76aca2a5d4f384f" prot="public" virt="virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>getPropagatedStateSize</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a741436a816b5d018f80f061d15fdac74" prot="protected" virt="non-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>integratedStateType_</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a8541ff94360e103cd1157899969c6bb3" prot="public" virt="virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>isStateToBePostProcessed</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a03145882db4c90a63a72d0c855b27f11" prot="public" virt="virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>postProcessState</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a90c770ae1cc36edb43d6363416f3461f" prot="public" virt="virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>postProcessState</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1acbb10b6a3ae3413f136520475f93ceab" prot="public" virt="non-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>SingleStateTypeDerivative</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a28e844a8e7c5716d091c7504a5c98815" prot="protected" virt="non-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>unprocessedState_</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a9542fa3986fabe6129f0bf5b788daeba" prot="public" virt="pure-virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>updateStateDerivativeModel</name></member>
      <member refid="d1/de9/classtudat_1_1propagators_1_1SingleStateTypeDerivative_1a08576def80c16bfe0169693d1abc0dfc" prot="public" virt="virtual"><scope>tudat::propagators::SingleStateTypeDerivative</scope><name>~SingleStateTypeDerivative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
