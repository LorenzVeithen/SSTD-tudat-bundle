<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel" kind="class" language="C++" prot="public">
    <compoundname>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</compoundname>
    <basecompoundref refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel" prot="public" virt="non-virtual">tudat::basic_astrodynamics::AccelerationModel&lt; Eigen::Vector3d &gt;</basecompoundref>
    <basecompoundref refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase" prot="public" virt="non-virtual">tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModelBase&lt; Eigen::Vector3d &gt;</basecompoundref>
    <includes refid="d1/d0a/sphericalHarmonicsGravityModel_8h" local="no">sphericalHarmonicsGravityModel.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ad6f8021c7f3b169c31256be003f7d4ca" prot="private" static="no">
        <type><ref refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase" kindref="compound">SphericalHarmonicsGravitationalAccelerationModelBase</ref>&lt; Eigen::Vector3d &gt;</type>
        <definition>typedef SphericalHarmonicsGravitationalAccelerationModelBase&lt; Eigen::Vector3d &gt; tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
<para>Typedef for base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="162" column="66" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a201edf465888b0b97f003ba3dde007d5" prot="private" static="no">
        <type>std::function&lt; Eigen::MatrixXd() &gt;</type>
        <definition>typedef std::function&lt; Eigen::MatrixXd( ) &gt; tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::CoefficientMatrixReturningFunction</definition>
        <argsstring></argsstring>
        <name>CoefficientMatrixReturningFunction</name>
        <briefdescription>
<para>Typedef for coefficient-matrix-returning function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="165" column="27" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a2427ea20da896147f518d0338ed76251" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::equatorialRadius</definition>
        <argsstring></argsstring>
        <name>equatorialRadius</name>
        <briefdescription>
<para>Equatorial radius [m]. </para>
        </briefdescription>
        <detaileddescription>
<para>Current value of equatorial (planetary) radius used for spherical harmonics expansion [m]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="576" column="18" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a95721777153ad54ed6fa19c78fe8d884" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::cosineHarmonicCoefficients</definition>
        <argsstring></argsstring>
        <name>cosineHarmonicCoefficients</name>
        <briefdescription>
<para>Matrix of cosine coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrix containing coefficients of cosine terms for spherical harmonics expansion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="582" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac9333de675c460ef7bf5305b82255d74" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::sineHarmonicCoefficients</definition>
        <argsstring></argsstring>
        <name>sineHarmonicCoefficients</name>
        <briefdescription>
<para>Matrix of sine coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrix containing coefficients of sine terms for spherical harmonics expansion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="588" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1adda3b4661bf469adee08c782dfd74e0b" prot="private" static="no" mutable="no">
        <type>const CoefficientMatrixReturningFunction</type>
        <definition>const CoefficientMatrixReturningFunction tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getCosineHarmonicsCoefficients</definition>
        <argsstring></argsstring>
        <name>getCosineHarmonicsCoefficients</name>
        <briefdescription>
<para>Pointer to function returning cosine harmonics coefficients matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Pointer to function that returns the current coefficients of the cosine terms of the spherical harmonics expansion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="595" column="46" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a58d8578fe1ba3c62b68b2ed3bf0178b1" prot="private" static="no" mutable="no">
        <type>const CoefficientMatrixReturningFunction</type>
        <definition>const CoefficientMatrixReturningFunction tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getSineHarmonicsCoefficients</definition>
        <argsstring></argsstring>
        <name>getSineHarmonicsCoefficients</name>
        <briefdescription>
<para>Pointer to function returning sine harmonics coefficients matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Pointer to function that returns the current coefficients of the sine terms of the spherical harmonics expansion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="602" column="46" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ae587c45687ea8242da92ac3497acc220" prot="private" static="no" mutable="no">
        <type>std::function&lt; Eigen::Quaterniond() &gt;</type>
        <definition>std::function&lt; Eigen::Quaterniond( ) &gt; tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::rotationFromBodyFixedToIntegrationFrameFunction_</definition>
        <argsstring></argsstring>
        <name>rotationFromBodyFixedToIntegrationFrameFunction_</name>
        <briefdescription>
<para>Function returning the current rotation from body-fixed frame to integration frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="605" column="19" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac4b34bdea02ebaae4f6711e7fd053ee0" prot="private" static="no" mutable="no">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::rotationToIntegrationFrame_</definition>
        <argsstring></argsstring>
        <name>rotationToIntegrationFrame_</name>
        <briefdescription>
<para>Current rotation from body-fixed frame to integration frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="608" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1afe4855b23b77d3f726b27548ed20e05f" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::currentRelativePosition_</definition>
        <argsstring></argsstring>
        <name>currentRelativePosition_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current position vector from body exerting acceleration to body undergoing acceleration, in frame fixed to body undergoing acceleration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="612" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a190c5909f2b2e0b29c2b109044ae50a0" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::currentInertialRelativePosition_</definition>
        <argsstring></argsstring>
        <name>currentInertialRelativePosition_</name>
        <briefdescription>
<para>Current position vector from body exerting acceleration to body undergoing acceleration, in inertial frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="615" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac5e841e53d137645a01a4f9e1119e4b4" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="dc/dcc/classtudat_1_1basic__mathematics_1_1SphericalHarmonicsCache" kindref="compound">basic_mathematics::SphericalHarmonicsCache</ref> &gt;</type>
        <definition>std::shared_ptr&lt; basic_mathematics::SphericalHarmonicsCache &gt; tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::sphericalHarmonicsCache_</definition>
        <argsstring></argsstring>
        <name>sphericalHarmonicsCache_</name>
        <briefdescription>
<para>Spherical harmonics cache for this acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="618" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac0c74d195a33ccd87f8223faeb3f4e89" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::currentAcceleration_</definition>
        <argsstring></argsstring>
        <name>currentAcceleration_</name>
        <briefdescription>
<para>Current acceleration in inertial frame, as computed by last call to updateMembers function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="621" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aac3adb1f7f5f339644b70abeb30b371f" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::currentAccelerationInBodyFixedFrame_</definition>
        <argsstring></argsstring>
        <name>currentAccelerationInBodyFixedFrame_</name>
        <briefdescription>
<para>Current acceleration in frame fixed to body undergoing acceleration, as computed by last call to updateMembers function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="624" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a682a8ce7676eaf83068656fbe56a08a4" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::pair&lt; int, int &gt;, Eigen::Vector3d &gt;</type>
        <definition>std::map&lt; std::pair&lt; int, int &gt;, Eigen::Vector3d &gt; tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::accelerationPerTerm_</definition>
        <argsstring></argsstring>
        <name>accelerationPerTerm_</name>
        <briefdescription>
<para>List of contributions to accelerations at given degrees/orders, represented by first/second entry of map key pair. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="627" column="14" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ab4c1fa7ee043e2da74b41a95f62444fe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::saveSphericalHarmonicTermsSeparately_</definition>
        <argsstring></argsstring>
        <name>saveSphericalHarmonicTermsSeparately_</name>
        <briefdescription>
<para>Boolean that denotes whether each of the separate spherical harmonic terms should be saved (in accelerationPerTerm_) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="630" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa90d4f317bccff2229b712de13796a19" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::maximumDegree_</definition>
        <argsstring></argsstring>
        <name>maximumDegree_</name>
        <briefdescription>
<para>Maximum degree of gravity field expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="633" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a7112b1df7f45540523d952d12a0da8b5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::maximumOrder_</definition>
        <argsstring></argsstring>
        <name>maximumOrder_</name>
        <briefdescription>
<para>Maximum order of gravity field expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="636" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a4f6c8a7e949741d4d873b033763073de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::SphericalHarmonicsGravitationalAccelerationModel</definition>
        <argsstring>(const StateFunction positionOfBodySubjectToAccelerationFunction, const double aGravitationalParameter, const double anEquatorialRadius, const Eigen::MatrixXd aCosineHarmonicCoefficientMatrix, const Eigen::MatrixXd aSineHarmonicCoefficientMatrix, const StateFunction positionOfBodyExertingAccelerationFunction=[](){ return Eigen::Vector3d::Zero();}, const std::function&lt; Eigen::Quaterniond() &gt; rotationFromBodyFixedToIntegrationFrameFunction=[](){ return Eigen::Quaterniond(Eigen::Matrix3d::Identity());}, const bool isMutualAttractionUsed=0, std::shared_ptr&lt; basic_mathematics::SphericalHarmonicsCache &gt; sphericalHarmonicsCache=std::make_shared&lt; basic_mathematics::SphericalHarmonicsCache &gt;())</argsstring>
        <name>SphericalHarmonicsGravitationalAccelerationModel</name>
        <param>
          <type>const <ref refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7f7ae6c4f34211c8e93989ba22350074" kindref="member">StateFunction</ref></type>
          <declname>positionOfBodySubjectToAccelerationFunction</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>aGravitationalParameter</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>anEquatorialRadius</declname>
        </param>
        <param>
          <type>const Eigen::MatrixXd</type>
          <declname>aCosineHarmonicCoefficientMatrix</declname>
        </param>
        <param>
          <type>const Eigen::MatrixXd</type>
          <declname>aSineHarmonicCoefficientMatrix</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7f7ae6c4f34211c8e93989ba22350074" kindref="member">StateFunction</ref></type>
          <declname>positionOfBodyExertingAccelerationFunction</declname>
          <defval>[](){ return Eigen::Vector3d::Zero();}</defval>
        </param>
        <param>
          <type>const std::function&lt; Eigen::Quaterniond() &gt;</type>
          <declname>rotationFromBodyFixedToIntegrationFrameFunction</declname>
          <defval>[](){ return Eigen::Quaterniond(Eigen::Matrix3d::Identity());}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>isMutualAttractionUsed</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="dc/dcc/classtudat_1_1basic__mathematics_1_1SphericalHarmonicsCache" kindref="compound">basic_mathematics::SphericalHarmonicsCache</ref> &gt;</type>
          <declname>sphericalHarmonicsCache</declname>
          <defval>std::make_shared&lt; <ref refid="dc/dcc/classtudat_1_1basic__mathematics_1_1SphericalHarmonicsCache" kindref="compound">basic_mathematics::SphericalHarmonicsCache</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor taking position-functions for bodies, and constant parameters of spherical harmonics expansion.</para>
<para>Constructor taking a pointer to a function returning the position of the body subject to gravitational acceleration, constant gravitational parameter and equatorial radius of the body exerting the acceleration, constant coefficient matrices for the spherical harmonics expansion, and a pointer to a function returning the position of the body exerting the gravitational acceleration (typically the central body). This constructor uses the Boost::lambda library to create a function on-the-fly that returns the constant gravitational parameter, equatorial radius and coefficient matrices provided. The constructor also updates all the internal members. The position of the body exerting the gravitational acceleration is an optional parameter; the default position is the origin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>positionOfBodySubjectToAccelerationFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning position of body subject to gravitational acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aGravitationalParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>A (constant) gravitational parameter [m^2 s^-3]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anEquatorialRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>A (constant) equatorial radius [m]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCosineHarmonicCoefficientMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>A (constant) cosine harmonic coefficient matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aSineHarmonicCoefficientMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>A (constant) sine harmonic coefficient matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>positionOfBodyExertingAccelerationFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning position of body exerting gravitational acceleration (default = (0,0,0)). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationFromBodyFixedToIntegrationFrameFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function providing the rotation from body-fixes from to the frame in which the numerical integration is performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isMutualAttractionUsed</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether attraction from body undergoing acceleration on body exerting acceleration is included (i.e. whether aGravitationalParameter refers to the property of the body exerting the acceleration, if variable is false, or the sum of the gravitational parameters, if the variable is true. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sphericalHarmonicsCache</parametername>
</parameternamelist>
<parameterdescription>
<para>Cache object for computing/retrieving repeated terms in spherical harmonics potential gradient calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="198" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="198" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa919354a5a089d1b3a20fa3d4f4e1446" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::SphericalHarmonicsGravitationalAccelerationModel</definition>
        <argsstring>(const StateFunction positionOfBodySubjectToAccelerationFunction, const std::function&lt; double() &gt; aGravitationalParameterFunction, const double anEquatorialRadius, const CoefficientMatrixReturningFunction cosineHarmonicCoefficientsFunction, const CoefficientMatrixReturningFunction sineHarmonicCoefficientsFunction, const StateFunction positionOfBodyExertingAccelerationFunction=[](){ return Eigen::Vector3d::Zero();}, const std::function&lt; Eigen::Quaterniond() &gt; rotationFromBodyFixedToIntegrationFrameFunction=[](){ return Eigen::Quaterniond(Eigen::Matrix3d::Identity());}, const bool isMutualAttractionUsed=0, std::shared_ptr&lt; basic_mathematics::SphericalHarmonicsCache &gt; sphericalHarmonicsCache=std::make_shared&lt; basic_mathematics::SphericalHarmonicsCache &gt;())</argsstring>
        <name>SphericalHarmonicsGravitationalAccelerationModel</name>
        <param>
          <type>const <ref refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7f7ae6c4f34211c8e93989ba22350074" kindref="member">StateFunction</ref></type>
          <declname>positionOfBodySubjectToAccelerationFunction</declname>
        </param>
        <param>
          <type>const std::function&lt; double() &gt;</type>
          <declname>aGravitationalParameterFunction</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>anEquatorialRadius</declname>
        </param>
        <param>
          <type>const CoefficientMatrixReturningFunction</type>
          <declname>cosineHarmonicCoefficientsFunction</declname>
        </param>
        <param>
          <type>const CoefficientMatrixReturningFunction</type>
          <declname>sineHarmonicCoefficientsFunction</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7f7ae6c4f34211c8e93989ba22350074" kindref="member">StateFunction</ref></type>
          <declname>positionOfBodyExertingAccelerationFunction</declname>
          <defval>[](){ return Eigen::Vector3d::Zero();}</defval>
        </param>
        <param>
          <type>const std::function&lt; Eigen::Quaterniond() &gt;</type>
          <declname>rotationFromBodyFixedToIntegrationFrameFunction</declname>
          <defval>[](){ return Eigen::Quaterniond(Eigen::Matrix3d::Identity());}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>isMutualAttractionUsed</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="dc/dcc/classtudat_1_1basic__mathematics_1_1SphericalHarmonicsCache" kindref="compound">basic_mathematics::SphericalHarmonicsCache</ref> &gt;</type>
          <declname>sphericalHarmonicsCache</declname>
          <defval>std::make_shared&lt; <ref refid="dc/dcc/classtudat_1_1basic__mathematics_1_1SphericalHarmonicsCache" kindref="compound">basic_mathematics::SphericalHarmonicsCache</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor taking functions for position of bodies, and parameters of spherical harmonics expansion.</para>
<para>Constructor taking pointer to functions returning the position of the body subject to gravitational acceleration, the gravitational parameter of the body exerting the acceleration (central body), the equatorial radius of the central body, the coefficient matrices of the spherical harmonics expansion, and the position of the central body. The constructor also updates all the internal members. The position of the body exerting the gravitational acceleration is an optional parameter; the default position is the origin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>positionOfBodySubjectToAccelerationFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning position of body subject to gravitational acceleration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aGravitationalParameterFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning gravitational parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anEquatorialRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning equatorial radius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cosineHarmonicCoefficientsFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning matrix of cosine-coefficients of spherical harmonics expansion. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sineHarmonicCoefficientsFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning matrix of sine-coefficients of spherical harmonics expansion. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>positionOfBodyExertingAccelerationFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to function returning position of body exerting gravitational acceleration (default = (0,0,0)). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationFromBodyFixedToIntegrationFrameFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function providing the rotation from body-fixes from to the frame in which the numerical integration is performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isMutualAttractionUsed</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable denoting whether attraction from body undergoing acceleration on body exerting acceleration is included (i.e. whether aGravitationalParameter refers to the property of the body exerting the acceleration, if variable is false, or the sum of the gravitational parameters, if the variable is true. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sphericalHarmonicsCache</parametername>
</parameternamelist>
<parameterdescription>
<para>Cache object for computing/retrieving repeated terms in spherical harmonics potential </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="262" column="5" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="262" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aae27d6f97cdbee300e8c532b2dc604b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getAcceleration</definition>
        <argsstring>()</argsstring>
        <name>getAcceleration</name>
        <reimplements refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel_1a1f59960bc477fc02e7d52697ced99750">getAcceleration</reimplements>
        <briefdescription>
<para>Get gravitational acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the gravitational acceleration computed by the updateMembers function. <simplesect kind="return"><para>Computed gravitational acceleration vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="305" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a7bb9c62d6431c92327fb169f2758ffdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getAccelerationInBodyFixedFrame</definition>
        <argsstring>()</argsstring>
        <name>getAccelerationInBodyFixedFrame</name>
        <briefdescription>
<para>Get gravitational acceleration in body-fixed frame of body undergoing acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the gravitational acceleration in body-fixed frame of body undergoing acceleration computed computed by the updateMembers function. <simplesect kind="return"><para>Computed gravitational acceleration vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="316" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a1da9ad8e2fd4daec7c60459175b264f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::updateMembers</definition>
        <argsstring>(const double currentTime=TUDAT_NAN)</argsstring>
        <name>updateMembers</name>
        <reimplements refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel_1a966e85b72300b8cbc99ba60e40108d71">updateMembers</reimplements>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
          <defval>TUDAT_NAN</defval>
        </param>
        <briefdescription>
<para>Update class members. </para>
        </briefdescription>
        <detaileddescription>
<para>Updates all the base class members to their current values and also updates the class members of this class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d0/d53/classtudat_1_1Time" kindref="compound">Time</ref> at which acceleration model is to be updated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="327" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="327" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa78ebd9f08b4d415ce2f50c96e5ef8b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getAccelerationWithAlternativeCoefficients</definition>
        <argsstring>(const Eigen::MatrixXd &amp;cosineCoefficients, const Eigen::MatrixXd &amp;sineCoefficients)</argsstring>
        <name>getAccelerationWithAlternativeCoefficients</name>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>cosineCoefficients</declname>
        </param>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>sineCoefficients</declname>
        </param>
        <briefdescription>
<para>Function to retrieve total spherical harmonic acceleration in inertial frame, with alternative coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve total spherical harmonic acceleration in inertial frame, with alternative coefficients, e.g. different from those defined in this class <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cosineCoefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>Cosine coefficients to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sineCoefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>Sine coefficients to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Total spherical harmonic acceleration in inertial frame, with alternative coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="366" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="366" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a68870f02cd53bd070d23cb991c47cd5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getAccelerationComponentsWithAlternativeCoefficients</definition>
        <argsstring>(const Eigen::MatrixXd &amp;cosineCoefficients, const Eigen::MatrixXd &amp;sineCoefficients, const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;coefficientIndices)</argsstring>
        <name>getAccelerationComponentsWithAlternativeCoefficients</name>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>cosineCoefficients</declname>
        </param>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>sineCoefficients</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;</type>
          <declname>coefficientIndices</declname>
        </param>
        <briefdescription>
<para>Function to retrieve spherical harmonic acceleration in inertial frame, with alternative coefficients, per term. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve spherical harmonic acceleration in inertial frame, with alternative coefficients, per term. The acceleration is calculated separately for the contribution of each degree/order of the spherical harmonic field <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cosineCoefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>Cosine coefficients to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sineCoefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>Sine coefficients to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coefficientIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Degrees and orders for which acceleration contributions are to be determined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Total spherical harmonic acceleration in inertial frame, with alternative coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="390" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="390" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1abb23ccc2da10917740be0b2aaffcd8ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="dc/dcc/classtudat_1_1basic__mathematics_1_1SphericalHarmonicsCache" kindref="compound">basic_mathematics::SphericalHarmonicsCache</ref> &gt;</type>
        <definition>std::shared_ptr&lt; basic_mathematics::SphericalHarmonicsCache &gt; tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getSphericalHarmonicsCache</definition>
        <argsstring>()</argsstring>
        <name>getSphericalHarmonicsCache</name>
        <briefdescription>
<para>Function to retrieve the spherical harmonics cache for this acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the spherical harmonics cache for this acceleration. <simplesect kind="return"><para>Spherical harmonics cache for this acceleration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="420" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a4baeced3230e7fb4850a5eea3b06c5d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getCurrentRelativePosition</definition>
        <argsstring>()</argsstring>
        <name>getCurrentRelativePosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to return current position vector from body exerting acceleration to body undergoing acceleration, in frame fixed to body undergoing acceleration</para>
<para>Function to return current position vector from body exerting acceleration to body undergoing acceleration, in frame fixed to bodyundergoing acceleration <simplesect kind="return"><para>Current position vector from body exerting acceleration to body undergoing acceleration, in frame fixed to bodyundergoing acceleration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="433" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a330b2a7415b1a0109312b29c7ab2789f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getCurrentInertialRelativePosition</definition>
        <argsstring>()</argsstring>
        <name>getCurrentInertialRelativePosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to return current position vector from body exerting acceleration to body undergoing acceleration, in inertial frame</para>
<para>Function to return current position vector from body exerting acceleration to body undergoing acceleration, in inertial frame <simplesect kind="return"><para>Current position vector from body exerting acceleration to body undergoing acceleration, in inertial frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="445" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a48289f0a802dac258e731e2d758c0cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getReferenceRadius</definition>
        <argsstring>()</argsstring>
        <name>getReferenceRadius</name>
        <briefdescription>
<para>Function to retrieve the spherical harmonics reference radius. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the spherical harmonics reference radius. <simplesect kind="return"><para>Spherical harmonics reference radius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="455" column="12" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a3e320a0a322b9b180eba268427933a90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CoefficientMatrixReturningFunction</type>
        <definition>CoefficientMatrixReturningFunction tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getCosineHarmonicCoefficientsFunction</definition>
        <argsstring>()</argsstring>
        <name>getCosineHarmonicCoefficientsFunction</name>
        <briefdescription>
<para>Matrix of cosine coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrix containing coefficients of cosine terms for spherical harmonics expansion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="464" column="40" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa8c3b79d97dba27c633acb07c9f7b8e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CoefficientMatrixReturningFunction</type>
        <definition>CoefficientMatrixReturningFunction tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getSineHarmonicCoefficientsFunction</definition>
        <argsstring>()</argsstring>
        <name>getSineHarmonicCoefficientsFunction</name>
        <briefdescription>
<para>Matrix of sine coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrix containing coefficients of sine terms for spherical harmonics expansion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="473" column="40" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a1fdbcde7f7ca93d3a9051a4086e7e5d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Quaterniond</type>
        <definition>Eigen::Quaterniond tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getCurrentRotationToIntegrationFrame</definition>
        <argsstring>()</argsstring>
        <name>getCurrentRotationToIntegrationFrame</name>
        <briefdescription>
<para>Function to retrieve the current rotation from body-fixed frame to integration frame, in the form of a quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the current rotation from body-fixed frame to integration frame, in the form of a quaternion. <simplesect kind="return"><para>current rotation from body-fixed frame to integration frame, in the form of a quaternion. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="483" column="24" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="483" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ad8a859958eff18272ebcbb9e467f1cc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getCurrentRotationToIntegrationFrameMatrix</definition>
        <argsstring>()</argsstring>
        <name>getCurrentRotationToIntegrationFrameMatrix</name>
        <briefdescription>
<para>Function to retrieve the current rotation from body-fixed frame to integration frame, as a rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the current rotation from body-fixed frame to integration frame, as a rotation matrix. <simplesect kind="return"><para>current rotation from body-fixed frame to integration frame, as a rotation matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="493" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="493" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a2675988131c03b375658388668ad9fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::setSaveSphericalHarmonicTermsSeparately</definition>
        <argsstring>(const bool saveSphericalHarmonicTermsSeparately)</argsstring>
        <name>setSaveSphericalHarmonicTermsSeparately</name>
        <param>
          <type>const bool</type>
          <declname>saveSphericalHarmonicTermsSeparately</declname>
        </param>
        <briefdescription>
<para>Function to set whether each of the separate spherical harmonic terms should be saved. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to set whether each of the separate spherical harmonic terms should be saved (in accelerationPerTerm_ member variable of this class) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>saveSphericalHarmonicTermsSeparately</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean denoting whether each of the separate spherical harmonic terms should be saved (in accelerationPerTerm_ member variable of this class </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="505" column="10" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ae44fcfc1773a75cb56d76ff4b079439b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getConcatenatedAccelerationComponents</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;coefficientIndices)</argsstring>
        <name>getConcatenatedAccelerationComponents</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;</type>
          <declname>coefficientIndices</declname>
        </param>
        <briefdescription>
<para>Function to retrieve the contributions of separate degrees/ordesr to the acceleration, concatenated in a single vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve the contributions of specific separate degree/order to the acceleration, concatenated in a single vector <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficientIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>List of degree/order at which the contributions to the full acceleration are to be retrieved </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Contributions of separate degrees/ordesr to the acceleration, concatenated in a single vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="517" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="517" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a3ab18b47ced649bf6bcc762c4b7e9d9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getConcatenatedAccelerationComponentNorms</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;coefficientIndices)</argsstring>
        <name>getConcatenatedAccelerationComponentNorms</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;</type>
          <declname>coefficientIndices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="532" column="21" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="532" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a179e99b72bdde1dc2e4edec11b9c5022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getMaximumDegree</definition>
        <argsstring>()</argsstring>
        <name>getMaximumDegree</name>
        <briefdescription>
<para>Function to retrieve maximum degree of gravity field expansion. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve maximum degree of gravity field expansion <simplesect kind="return"><para>Maximum degree of gravity field expansion </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="552" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="552" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a80a3127dea112f3c31cf512c47e05afd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel::getMaximumOrder</definition>
        <argsstring>()</argsstring>
        <name>getMaximumOrder</name>
        <briefdescription>
<para>Function to retrieve maximum order of gravity field expansion. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to retrieve maximum order of gravity field expansion <simplesect kind="return"><para>Maximum order of gravity field expansion </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="562" column="9" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="562" bodyend="565"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template class for general spherical harmonics gravitational acceleration model. </para>
    </briefdescription>
    <detaileddescription>
<para>This templated class implements a general spherical harmonics gravitational acceleration model. The acceleration computed with this class is based on the geodesy-normalization described by (Heiskanen &amp; Moritz, 1967), implemented in the computeGeodesyNormalizedGravitationalAccelerationSum() function. The acceleration computed is a sum, based on the matrix of coefficients of the model provided. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</label>
        <link refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::basic_astrodynamics::AccelerationModel&lt; Eigen::Vector3d &gt;</label>
        <link refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel"/>
      </node>
      <node id="3">
        <label>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModelBase&lt; Eigen::Vector3d &gt;</label>
        <link refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</label>
        <link refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tudat::basic_astrodynamics::AccelerationModel&lt; Eigen::Vector3d &gt;</label>
        <link refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel"/>
      </node>
      <node id="3">
        <label>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModelBase&lt; Eigen::Vector3d &gt;</label>
        <link refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase"/>
      </node>
    </collaborationgraph>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" line="155" column="1" bodyfile="/Users/jonashener/tudatpy_dev/tudat-bundle/.tudat-documented/include/tudat/astro/gravitation/sphericalHarmonicsGravityModel.h" bodystart="158" bodyend="638"/>
    <listofallmembers>
      <member refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel_1a36f72cf81cc4ff658919a1b92cdc33ad" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>AccelerationModel</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a682a8ce7676eaf83068656fbe56a08a4" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>accelerationPerTerm_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ad6f8021c7f3b169c31256be003f7d4ca" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>Base</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a201edf465888b0b97f003ba3dde007d5" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>CoefficientMatrixReturningFunction</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a95721777153ad54ed6fa19c78fe8d884" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>cosineHarmonicCoefficients</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac0c74d195a33ccd87f8223faeb3f4e89" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>currentAcceleration_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aac3adb1f7f5f339644b70abeb30b371f" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>currentAccelerationInBodyFixedFrame_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a190c5909f2b2e0b29c2b109044ae50a0" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>currentInertialRelativePosition_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1afe4855b23b77d3f726b27548ed20e05f" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>currentRelativePosition_</name></member>
      <member refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel_1a70f6593c9eec30136ed648ca0e6c9e88" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>currentTime_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a2427ea20da896147f518d0338ed76251" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>equatorialRadius</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aae27d6f97cdbee300e8c532b2dc604b3" prot="public" virt="virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getAcceleration</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a68870f02cd53bd070d23cb991c47cd5b" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getAccelerationComponentsWithAlternativeCoefficients</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a7bb9c62d6431c92327fb169f2758ffdf" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getAccelerationInBodyFixedFrame</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa78ebd9f08b4d415ce2f50c96e5ef8b5" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getAccelerationWithAlternativeCoefficients</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a3ab18b47ced649bf6bcc762c4b7e9d9c" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getConcatenatedAccelerationComponentNorms</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ae44fcfc1773a75cb56d76ff4b079439b" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getConcatenatedAccelerationComponents</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a3e320a0a322b9b180eba268427933a90" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCosineHarmonicCoefficientsFunction</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1adda3b4661bf469adee08c782dfd74e0b" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCosineHarmonicsCoefficients</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1aa834018ebef79d20ba7d09dcd8735b5b" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentGravitationalParameter</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a330b2a7415b1a0109312b29c7ab2789f" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentInertialRelativePosition</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1adf08c02b22b14aee63a1c5c6710245e4" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentPositionOfBodyExertingAcceleration</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1abcf8a1d45a47a52bbcb7ddc68ac70edc" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentPositionOfBodySubjectToAcceleration</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a4baeced3230e7fb4850a5eea3b06c5d2" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentRelativePosition</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a1fdbcde7f7ca93d3a9051a4086e7e5d7" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentRotationToIntegrationFrame</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ad8a859958eff18272ebcbb9e467f1cc6" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getCurrentRotationToIntegrationFrameMatrix</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1acbdd1b69824c9f5af8419b84a14e1f85" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getGravitationalParameterFunction</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1aab2e6ab909d87470b03ab14eb77855db" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getIsMutualAttractionUsed</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a179e99b72bdde1dc2e4edec11b9c5022" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getMaximumDegree</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a80a3127dea112f3c31cf512c47e05afd" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getMaximumOrder</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a48289f0a802dac258e731e2d758c0cc9" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getReferenceRadius</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa8c3b79d97dba27c633acb07c9f7b8e0" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getSineHarmonicCoefficientsFunction</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a58d8578fe1ba3c62b68b2ed3bf0178b1" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getSineHarmonicsCoefficients</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1abb23ccc2da10917740be0b2aaffcd8ff" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getSphericalHarmonicsCache</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1ace19aa33fe08f1f8bb6704fdd7bf9471" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getStateFunctionOfBodyExertingAcceleration</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7af29510400781d943d1f8a02b4fb240" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>getStateFunctionOfBodyUndergoingAcceleration</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a6324fd00981daa580fab84e579de285f" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>gravitationalParameter</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a98ca240f9cff47946ad04b1c44b744f9" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>gravitationalParameterFunction</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a103da0d449d50376af758f527bbe5131" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>isMutualAttractionUsed_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa90d4f317bccff2229b712de13796a19" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>maximumDegree_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a7112b1df7f45540523d952d12a0da8b5" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>maximumOrder_</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7025348306abb91a3dd47a8583518de8" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>positionOfBodyExertingAcceleration</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a0e873e80f5b4654243def79fc89a8f9b" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>positionOfBodySubjectToAcceleration</name></member>
      <member refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel_1a325aae81896137d88b756aac15e188da" prot="public" virt="virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>resetTime</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ae587c45687ea8242da92ac3497acc220" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>rotationFromBodyFixedToIntegrationFrameFunction_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac4b34bdea02ebaae4f6711e7fd053ee0" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>rotationToIntegrationFrame_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ab4c1fa7ee043e2da74b41a95f62444fe" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>saveSphericalHarmonicTermsSeparately_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a2675988131c03b375658388668ad9fb0" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>setSaveSphericalHarmonicTermsSeparately</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac9333de675c460ef7bf5305b82255d74" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>sineHarmonicCoefficients</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a90738dd2d368872dc3ac4b163ab98ece" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>sourcePositionFunction</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1ac5e841e53d137645a01a4f9e1119e4b4" prot="private" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>sphericalHarmonicsCache_</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a4f6c8a7e949741d4d873b033763073de" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>SphericalHarmonicsGravitationalAccelerationModel</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1aa919354a5a089d1b3a20fa3d4f4e1446" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>SphericalHarmonicsGravitationalAccelerationModel</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a693001dda5e9013564542cd78b585b84" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>SphericalHarmonicsGravitationalAccelerationModelBase</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a91330db3d4ed181744cd9869b2459360" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>SphericalHarmonicsGravitationalAccelerationModelBase</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a7f7ae6c4f34211c8e93989ba22350074" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>StateFunction</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a302efd9e7b078e67f3d475e613c96da1" prot="protected" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>subjectPositionFunction</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1ac6cc02edc064e51ab02fdb5cfdea9082" prot="public" virt="non-virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>updateBaseMembers</name></member>
      <member refid="d1/dfe/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModel_1a1da9ad8e2fd4daec7c60459175b264f6" prot="public" virt="virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>updateMembers</name></member>
      <member refid="d1/db4/classtudat_1_1basic__astrodynamics_1_1AccelerationModel_1a131bb0f8b79b410810f602d9b8865968" prot="public" virt="virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>~AccelerationModel</name></member>
      <member refid="d5/d96/classtudat_1_1gravitation_1_1SphericalHarmonicsGravitationalAccelerationModelBase_1a4fed916f0154efda68edf6d40f4a08b8" prot="public" virt="virtual"><scope>tudat::gravitation::SphericalHarmonicsGravitationalAccelerationModel</scope><name>~SphericalHarmonicsGravitationalAccelerationModelBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
